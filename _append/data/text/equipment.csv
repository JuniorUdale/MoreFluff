Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Category,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Parallel Universe,Special?,Error Immune,Show Gold,Appears For Parts,Hide Reuseable,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury
Locklance,Deal [sword]1 damage|Split dice in two,1,givedice(split(d)[;] ~splitdice~); attack(1); sfxdamage(target|1);,Magic Dice,MIN2,,WEAPON,GREEN,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Locklance_upgraded,[sword]1 damage[;] split dice|On 6[;] split into 3,1,if(d==6){ givedice(split(d[;] 3)[;] ~splitdice~); } else { givedice(split(d)[;] ~splitdice~); } attack(1); sfxdamage(target|1);,Magic Dice,MIN2,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Locklance_downgraded,Deal [sword]1 damage|Split dice in two,1,givedice(split(d)[;] ~splitdice~); attack(1); sfxdamage(target|1);,Magic Dice,MIN4,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
drowS,egamad <d6>[sword] laeD|sdrawkcab tub...,1,attack(7-d); sfxdamage(target|7-d);,Plasma Gun,MIN2,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
drowS_upgraded,egamad <d6>[sword] laeD|sdrawkcab tub...,1,attack(7-d); sfxdamage(target|7-d);,Plasma Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
drowS_downgraded,egamad <d6>[sword] laeD|sdrawkcab tub...,1,attack(7-d); sfxdamage(target|7-d);,Plasma Gun,MIN4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Scrap,Split your [shield]shield|into random dice,1,var s = getstatusself(SHIELD); var a = []; attackself(s); while(s>0){ if(s>6){ var r=rand([1[;]2[;]3[;]4[;]5[;]6]); a.push(r); s-=r; }else{ a.push(s); givedice(a); s=0; break; } }; sfx(~useitem~);,Barricade,EVEN,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Scrap_upgraded,Split your [shield]shield|into random dice,1,var s = getstatusself(SHIELD); var a = []; attackself(s); while(s>0){ if(s>6){ var r=rand([1[;]2[;]3[;]4[;]5[;]6]); a.push(r); s-=r; }else{ a.push(s); givedice(a); s=0; break; } }; sfx(~useitem~);,Barricade,NORMAL,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Scrap_downgraded,Split your [shield]shield|into random dice,1,var s = getstatusself(SHIELD); var a = []; attackself(s); while(s>0){ if(s>6){ var r=rand([1[;]2[;]3[;]4[;]5[;]6]); a.push(r); s-=r; }else{ a.push(s); givedice(a); s=0; break; } }; sfx(~useitem~);,Barricade,REQUIRE4,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Synthesis,Gain [shield]2 shield|On 6[;] gain 3 more,2,inflictself(SHIELD|2); sfx(~_shield~); if(d == 6){inflictself(SHIELD|3); sfx(~_shield~|~~|0.1);};,Barricade,NORMAL,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Synthesis_upgraded,Gain [shield]2 shield|On 6[;] gain 4 more,2,inflictself(SHIELD|2); sfx(~_shield~); if(d == 6){inflictself(SHIELD|4); sfx(~_shield~|~~|0.1);};,Barricade,NORMAL,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Synthesis_downgraded,Gain [shield]2 shield|On 6[;] gain 3 more,2,inflictself(SHIELD|2); sfx(~_shield~); if(d == 6){inflictself(SHIELD|3); sfx(~_shield~|~~|0.1);};,Barricade,MIN4,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pry Bar,Reduce countdowns by 2|[grey](2 uses this turn),1,boostcountdowns(2); sfx(~useitem~);,Accelerate,COUNTDOWN,7,ITEM,GREEN,change_power,change_power,,,3,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pry Bar_upgraded,Reduce countdowns by 2|[grey](Reusable),1,boostcountdowns(2); sfx(~useitem~);,Accelerate,COUNTDOWN,7,ITEM,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pry Bar_downgraded,Reduce countdowns by 2,1,boostcountdowns(1); sfx(~useitem~);,Accelerate,COUNTDOWN,7,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Paintbrush,Roll an extra dice,1,givedice();,Magic Dice,COUNTDOWN,6,ITEM,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Paintbrush_upgraded,Roll an extra dice|[gray](2 uses this turn),1,givedice();,Magic Dice,COUNTDOWN,6,ITEM,BRIGHTCYAN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Paintbrush_downgraded,Roll an extra|[fire]burning dice,1,inflictself(FIRE); givedice();,Magic Dice,COUNTDOWN,6,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Budge,Odd: dice value +1|Even: dice value -1,1,if(d%2 == 0){ givedice(d-1); } else { givedice(d+1); };,Magic Dice,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Budge_upgraded,Odd: value +1[;] Even: value -1|[grey](3 uses this turn),1,if(d%2 == 0){ givedice(d-1); } else { givedice(d+1); };,Magic Dice,NORMAL,,ITEM,GREEN,,,,,3,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Budge_downgraded,Dice value -1,1,givedice(d-1);,Magic Dice,MIN2,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snippers,Deal [sword]1 damage|Split dice evenly in 2,1,givedice([d/2[;]d/2]); attack(1); sfx(~_lock~);,Magic Dice,EVEN,,ITEM,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Snippers_upgraded,Deal [sword]2 damage|Split dice evenly in 2,1,givedice([(d+1)/2[;]d/2]); attack(2); sfx(~_lock~);,Magic Dice,MIN2,,ITEM,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snippers_downgraded,Deal [sword]1 damage|Split dice evenly in 2,1,givedice([d/2[;]d/2]); attack(1); sfx(~_lock~);,Magic Dice,REQUIRE6,,ITEM,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shatter,Split dice into 2s or less,2,var s = d; var a = []; while(s>0){ if(s>2){ var r=rand([1[;]2]); a.push(r); s-=r; }else{ a.push(s); givedice(a); s=0; break; } };,Magic Dice,MIN4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shatter_upgraded,Add 2 to dice value[;] then|split dice into 2s or less,2,var s = d; var a = []; while(s>0){ if(s>2){ var r=rand([1[;]2]); a.push(r); s-=r; }else{ a.push(s); givedice(a); s=0; break; } };,Magic Dice,MIN4|FREE2,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shatter_downgraded,Split dice into 2s or less,2,var s = d; var a = []; while(s>0){ if(s>2){ var r=rand([1[;]2]); a.push(r); s-=r; }else{ a.push(s); givedice(a); s=0; break; } };,Magic Dice,MIN5,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Promote,Dice value +3,1,givedice(d+3);,Magic Dice,MAX3,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Promote_upgraded,1/2/3: Dice value +3|4/5/6: Dice value -3,1,if(d>3){ givedice(d-3); }else{ givedice(d+3); };,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Promote_downgraded,Dice value +3,1,givedice(d+3);,Magic Dice,REQUIRE1,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Demote,Dice value -3,1,givedice(d-3);,Magic Dice,MIN4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Demote_upgraded,1/2/3: Dice value +3|4/5/6: Dice value -3,1,if(d>3){ givedice(d-3); }else{ givedice(d+3); };,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Demote_downgraded,Dice value -3,1,givedice(d-3);,Magic Dice,REQUIRE6,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pee Shooter,Inflict [poison]1 poison|[gray](Reuseable),1,inflict(POISON[;]1); sfx(~_poison~);,Pee Gun,COUNTDOWN,5,WEAPON,PURPLE,change_poison,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Pee Shooter_upgraded,[poison]1 poison + [sword]1 dmg|[gray](Reuseable),1,inflict(POISON[;]1); sfx(~_poison~); attack(1); sfxdamage(target|1);,Pee Gun,COUNTDOWN,5,WEAPON,PURPLE,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pee Shooter_downgraded,Inflict [poison]1 poison,1,inflict(POISON[;]1); sfx(~_poison~);,Pee Gun,COUNTDOWN,5,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cache Stash,Get a <d6> next turn|[gray](2 uses this turn),1,inflictself(~stash~+d); inflictself(~cache~); sfx(~magic_gaindice~);,Magic Dice,NORMAL,,ITEM,GRAY,change_power,change_power,,,2,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cache Stash_upgraded,Get a <d6> next turn|Immune to errors|[gray](3 uses this turn),1,inflictself(~stash~+d); inflictself(~cache~); sfx(~magic_gaindice~);,Magic Dice,NORMAL,,ITEM,GRAY,,,,,2,YES,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Cache Stash_downgraded,Get a <d6> next turn,1,inflictself(~stash~+d); inflictself(~cache~); sfx(~magic_gaindice~);,Magic Dice,NORMAL,,ITEM,GRAY,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pockets,Get a <d6> next turn|[gray](2 uses this turn),1,inflictself(~stash~+d); inflictself(~cache~); sfx(~magic_gaindice~);,Magic Dice,NORMAL,,ITEM,ORANGE,change_power,change_power,,,2,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Pockets_upgraded,Get a <d6> next turn|[gray](Reusable),1,inflictself(~stash~+d); inflictself(~cache~); sfx(~magic_gaindice~);,Magic Dice,NORMAL,,ITEM,ORANGE,,,,,-1,YES,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Pockets_downgraded,Get a <d6> next turn,1,inflictself(~stash~+d); inflictself(~cache~); sfx(~magic_gaindice~);,Magic Dice,NORMAL,,ITEM,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Overheat,Calculate again[;] do [fire]dmg|equal to number calculated,1,robotroll(); var d = 0; for (mydice in self.dicepool){ if (mydice.available()){ d = mydice.basevalue; } }; attack(d[;]FIRE); sfx(~_fire~);,,COUNTDOWN,3,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Overheat_upgraded,Calculate again[;] do [fire]dmg|equal to number calculated|,1,robotroll(); var d = 0; for (mydice in self.dicepool){ if (mydice.available()){ d = mydice.basevalue; } }; attack(d[;]FIRE); sfx(~_fire~);,,COUNTDOWN,3,WEAPON,RED,,,,,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Overheat_downgraded,Calculate again[;] deal|[fire]1 damage,1,robotroll(); attack(1[;]FIRE); sfx(~_fire~);,,COUNTDOWN,3,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Underclock,[ice]Freeze yourself[;]|restore [heal]1 health,1,inflictself(ICE); attackself(-1); sfx(~_ice~); sfx(~_heal~),,NORMAL,,ITEM,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Underclock_upgraded,[ice]Freeze self[;] heal [heal]1|[grey](Reusable),1,inflictself(ICE); attackself(-1); sfx(~_ice~); sfx(~_heal~),,MIN2,,ITEM,BRIGHTCYAN,,,,,-1,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Underclock_downgraded,[ice]Freeze yourself,1,inflictself(ICE); sfx(~_ice~);,,NORMAL,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Spirit Level,Higher dice: value -1|Lower dice: value +1,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){ givedice([a-1[;]b+1]); }else{ givedice([a+1[;]b-1]); }; sfx(~useitem~);,Magic Dice,MAX5|MIN2,,ITEM,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spirit Level_upgraded,Higher dice: value -1|Lower dice: value +1|[gray](3 uses this turn),1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){ givedice([a-1[;]b+1]); }else{ givedice([a+1[;]b-1]); }; sfx(~useitem~);,Magic Dice,MAX5|MIN2,,ITEM,GREEN,,,,,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spirit Level_downgraded,Higher dice: value -1|Lower dice: value +1,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){ givedice([a-1[;]b+1]); }else{ givedice([a+1[;]b-1]); }; sfx(~useitem~);,Magic Dice,ODD|EVEN,,ITEM,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tape Measure,Dice value = number of dice|you have (except this one),1,var a = 0; for (mydice in self.dicepool){ if (mydice.available()){ a+=1; } }; if(a > 0){givedice(a);};,Magic Dice,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tape Measure_upgraded,Dice value = number of dice|you have (including this one),1,var a = 1; for (mydice in self.dicepool){ if (mydice.available()){ a+=1; } }; givedice(a);,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tape Measure_downgraded,Dice value = number|of dice you have,1,var a = 0; for (mydice in self.dicepool){ if (mydice.available()){ a+=1; } }; if(a > 0){givedice(a);};,Magic Dice,MIN4,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Finisher,Deal [sword]<d6> damage[;] if this is|the final blow[;] heal [heal]<double>,1,attack(d); if(target.hp <1){ attackself(-d*2); sfx(~_heal~); }; sfxdamage(target|d);,Plasma Gun,MAX3,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Finisher_upgraded,Deal [sword]<d6> damage[;] if this is|the final blow[;] heal [heal]<triple>,1,attack(d); if(target.hp <1){ attackself(-d*3); sfx(~_heal~); }; sfxdamage(target|d);,Plasma Gun,MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Finisher_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Plasma Gun,MAX3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Deep Freeze,[lock]Lock all [ice]frozen|enemy dice,2,inflict(LOCK[;]getstatus(ICE)); removestatus(ICE[;]ALL); sfx(~_ice~); sfx(~_lock~);,Padlock,ODD,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Deep Freeze_upgraded,[lock]Lock all [ice]frozen|enemy dice,2,inflict(LOCK[;]getstatus(ICE)); removestatus(ICE[;]ALL); sfx(~_ice~); sfx(~_lock~);,Padlock,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Deep Freeze_downgraded,[lock]Lock up to 1 [ice]frozen|enemy dice,2,if(getstatus(ICE) > 0){ inflict(LOCK[;]1); removestatus(ICE[;]1); }; sfx(~_ice~); sfx(~_lock~);,Padlock,ODD,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mace,Deal [sword]<d6> damage|Reduce countdowns by <d6>,2,attack(d); while(d > 6){ boostcountdowns(6); d-=6; }; boostcountdowns(d); sfxdamage(target|d);,Accelerate,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mace_upgraded,Deal [sword]<d6> damage|Reduce countdowns by <d6>,2,attack(d); while(d > 6){ boostcountdowns(6); d-=6; }; boostcountdowns(d); sfxdamage(target|d);,Accelerate,NORMAL|FREE1,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mace_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Accelerate,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nail Gun,Deal [sword]7 damage|[gray](Reusable),2,attack(7); sfxdamage(target|7);,Pea Gun,NORMAL|NORMAL|NORMAL,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nail Gun_upgraded,Deal [sword]9 damage|[gray](Reusable),2,attack(9); sfxdamage(target|9);,Pea Gun,NORMAL|NORMAL|NORMAL,,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nail Gun_downgraded,Deal [sword]4 damage|[gray](Reusable),2,attack(4); sfxdamage(target|4);,Pea Gun,NORMAL|NORMAL|NORMAL,,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pike,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,MIN4,,WEAPON,RED,change_power,change_power,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pike_upgraded,Deal [sword]<d6> damage|[gray](5 uses this turn),2,attack(d); sfxdamage(target|d);,Plasma Gun,MIN4,,WEAPON,RED,,,,none,4,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pike_downgraded,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,MIN5,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Zweihander,Deal [sword]2x<slotdoubles> damage,2,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,DOUBLES|DOUBLES,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Zweihander_upgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,NORMAL|NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Zweihander_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,REQUIRE3|REQUIRE3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Halberd,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX4|MIN3,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Halberd_upgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX5|MIN2,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Halberd_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX3|MIN4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swordstave,Do [sword]<d6> damage[;] inflict|status depending on dice:|1:[weaken] 2:[ice] 3:[shock] 4:[fire] 5:[poison],2,var effs = [WEAKEN[;]ICE[;]SHOCK[;]FIRE[;]POISON]; attack(d); inflict(effs[actualdice[0].basevalue-1]); var sounds=[~_weaken~[;]~_ice~[;]~_shock~[;]~_fire~[;]~_poison~]; sfx(sounds[actualdice[0].basevalue-1]|~~|0.2); sfxdamage(target|d);,Plasma Gun,MAX5,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swordstave_upgraded,Do [sword]<d6> damage[;] inflict|status depending on dice:|1:[weaken] 2:[ice] 3:[shock] 4:[fire] 5:[poison],2,var effs = [WEAKEN[;]ICE[;]SHOCK[;]FIRE[;]POISON]; attack(d); inflict(effs[actualdice[0].basevalue-1]); var sounds=[~_weaken~[;]~_ice~[;]~_shock~[;]~_fire~[;]~_poison~]; sfx(sounds[actualdice[0].basevalue-1]|~~|0.2); sfxdamage(target|d);,Plasma Gun,MAX5|FREE2,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swordstave_downgraded,Inflict a status|depending on roll:|1:[shock] 2:[weaken] 3:[ice] 4:[fire] 5:[poison],2,var effs = [WEAKEN[;]ICE[;]SHOCK[;]FIRE[;]POISON]; inflict(effs[actualdice[0].basevalue-1]); var sounds=[~_weaken~[;]~_ice~[;]~_shock~[;]~_fire~[;]~_poison~]; sfx(sounds[actualdice[0].basevalue-1]|~~|0.2);,Plasma Gun,MAX5,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flak Cannon,[sword]1 damage[;] split dice|[gray](Reusable),2,attack(1); givedice(split(d)[;] ~splitdice~); sfxdamage(target|1);,Magic Dice,MIN5,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flak Cannon_upgraded,[sword]1 damage[;] split dice|[gray](Reusable),2,attack(1); givedice(split(d)[;] ~splitdice~); sfxdamage(target|1);,Magic Dice,MIN4,,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flak Cannon_downgraded,[sword]1 damage[;] split dice|[gray](Reusable),2,attack(1); givedice(split(d)[;] ~splitdice~); sfxdamage(target|1);,Magic Dice,MIN5,,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cable Tie,Combine dice|[gray](Reusable),1,givedice(d[;]~combinedice~); sfx(~useitem~);,Battle Wrench,MAX3|MAX3,,ITEM,GREEN,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cable Tie_upgraded,Combine dice[;] discard excess|[gray](Reusable),1,if(d > 6){ givedice(6[;]~combinedice~); }else{ givedice(d[;]~combinedice~); }; sfx(~useitem~);,Battle Wrench,NORMAL|NORMAL,,ITEM,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cable Tie_downgraded,Combine dice,1,givedice(d[;]~combinedice~); sfx(~useitem~);,Battle Wrench,MAX3|MAX3,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mortice Lock,Split your other <d6>s in two|Return this dice,1,var dicearray = [d]; var flag = 0; for(mydice in self.dicepool){if(mydice.available){if(mydice.basevalue == d){if(flag == 0){flag = 1;}else{dicearray = dicearray.concat(split(d)); mydice.removedice(self.screenposition());};};};}; givedice(dicearray);,Meganudge,MIN2,,ITEM,PINK,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Mortice Lock_upgraded,Split other <d6>s[;] return dice|,1,var dicearray = [d]; var flag = 0; for(mydice in self.dicepool){if(mydice.available){if(mydice.basevalue == d){if(flag == 0){flag = 1;}else{dicearray = dicearray.concat(split(d)); mydice.removedice(self.screenposition());};};};}; givedice(dicearray);,Meganudge,MIN2,,ITEM,PINK,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mortice Lock_downgraded,Split your other <d6>s in two,1,var dicearray = []; var flag = 0; for(mydice in self.dicepool){if(mydice.available){if(mydice.basevalue == d){if(flag == 0){flag = 1;}else{dicearray = dicearray.concat(split(d)); mydice.removedice(self.screenposition());};};};}; givedice(dicearray);,Meganudge,MIN2,,ITEM,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chakram,Deal [sword]5 damage|Deal [sword]<d6> to yourself,1,attack(5); boomerang(d); sfxdamage(target|5);,Plasma Gun,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chakram_upgraded,Deal [sword]7 damage|Deal [sword]<d6> to yourself,1,attack(7); boomerang(d); sfxdamage(target|7);,Plasma Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chakram_downgraded,Deal [sword]5 damage|Deal [sword]<d6> to yourself,1,attack(5); boomerang(d); sfxdamage(target|5);,Plasma Gun,MIN4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tickly Nose,Get <d6> ones next turn,1,inflictself(~stash~+1[;]d); sfx(~_fury~); inflictself(~tickly~[;]d);,Magic Lockpick,MAX4,,ITEM,PINK,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Tickly Nose_upgraded,Get <d6> ones next turn,1,inflictself(~stash~+1[;]d); sfx(~_fury~); inflictself(~tickly~[;]d);,Magic Lockpick,NORMAL,,ITEM,PINK,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tickly Nose_downgraded,Get <d6> ones next turn,1,inflictself(~stash~+1[;]d); sfx(~_fury~); inflictself(~tickly~[;]d);,Magic Lockpick,MAX2,,ITEM,PINK,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rend,Inflict [poison]poison equal to|the lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a < b){ inflict(POISON[;]a); }else{ inflict(POISON[;]b); }; sfx(~_poison~);,Goop Gun,MAX5|MAX5,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Rend_upgraded,Inflict [poison]poison equal to|the lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a < b){ inflict(POISON[;]a); }else{ inflict(POISON[;]b); }; sfx(~_poison~);,Goop Gun,NORMAL|NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rend_downgraded,Inflict [poison]poison equal to|the lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a < b){ inflict(POISON[;]a); }else{ inflict(POISON[;]b); }; sfx(~_poison~);,Goop Gun,MAX3|MAX3,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxify,Inflict [poison]poison equal to|the difference between dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a < b){ inflict(POISON[;]b-a); }else{ inflict(POISON[;]a-b); }; sfx(~_poison~);,Goop Gun,MAX5|MAX5,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Toxify_upgraded,Inflict [poison]poison equal to|the difference between dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a < b){ inflict(POISON[;]b-a); }else{ inflict(POISON[;]a-b); }; sfx(~_poison~);,Goop Gun,NORMAL|NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxify_downgraded,Inflict [poison]poison equal to|the difference between dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a < b){ inflict(POISON[;]b-a); }else{ inflict(POISON[;]a-b); }; sfx(~_poison~);,Goop Gun,MAX3|MAX3,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Loaded Dice,Spend [shield]2 shield|Roll a 6,1,sfx(~useitem~); if(getstatusself(SHIELD) > 1){ removestatusself(SHIELD[;]2); givedice(6); bonus(700 - d*100); }else{ givedice(d); bonus(-1000); }; sfx(~_shield~);,Magic Dice,NORMAL,,ITEM,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Loaded Dice_upgraded,Roll a 6,1,sfx(~useitem~); givedice(6); sfx(~_shield~);,Magic Dice,NORMAL,,ITEM,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Loaded Dice_downgraded,Spend [shield]2 shield|Roll a 6,1,sfx(~useitem~); if(getstatusself(SHIELD) > 1){ removestatusself(SHIELD[;]2); givedice(6); bonus(700 - d*100); }else{ givedice(d); bonus(-1000); }; sfx(~_shield~);,Magic Dice,MIN4,,ITEM,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poisonous Apple,Restore [heal]<double> health|Receive [poison]<d6> poison,1,sfx(~_heal~); attackself(-d*2); inflictself(POISON[;]d); sfx(~_drain~);,Regenerate,MAX4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Poisonous Apple_upgraded,Restore [heal]<double> health|Receive [poison]<d6> poison,1,sfx(~_heal~); attackself(-d*2); inflictself(POISON[;]d); sfx(~_drain~);,Regenerate,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poisonous Apple_downgraded,Restore [heal]<d6> health|Receive [poison]<d6> poison,1,sfx(~_heal~); attackself(-d); inflictself(POISON[;]d); sfx(~curse~);,Regenerate,MAX4,,ITEM,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Origami,Split dice [red]EVENLY[] into 3|If you can't[;] get nothing!,1,if(d%3 == 0){ givedice([d/3[;]d/3[;]d/3]); }else{ sfx(~curse~); }; sfx(~useitem~);,Magic Lockpick,NORMAL|NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Origami_upgraded,Split dice [red]EVENLY[] into 4|If you can't[;] return the dice,1,if(d%4 == 0){ givedice([d/4[;]d/4[;]d/4[;]d/4]); }else{ givedice(actualdice[0].basevalue[;]actualdice[1].basevalue); sfx(~curse~); }; sfx(~useitem~);,Magic Lockpick,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Origami_downgraded,Split dice [red]EVENLY[] into 3|If you can't[;] get nothing!,1,if(d%3 == 0){ givedice([d/3[;]d/3[;]d/3]); }else{ sfx(~curse~); }; sfx(~useitem~);,Magic Lockpick,EVEN|ODD,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Natural Charm,Roll two dice that|add up to 7,1,givedice(rand([[1[;]6][;][2[;]5][;][3[;]4][;][4[;]3][;][5[;]2][;][6[;]1]])); sfx(~useitem~);,Magic Dice,COUNTDOWN,7,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Natural Charm_upgraded,Roll two dice that|add up to 7|[gray](2 uses this turn),1,givedice(rand([[1[;]6][;][2[;]5][;][3[;]4][;][4[;]3][;][5[;]2][;][6[;]1]])); sfx(~useitem~);,Magic Dice,COUNTDOWN,7,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Natural Charm_downgraded,Roll a new dice,1,givedice(); sfx(~useitem~);,Magic Dice,COUNTDOWN,7,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Unnatural Charm,Roll some dice that|add up to 7,1,var v = 0; while(v < 7){ var r = rand([1[;]2[;]3[;]4[;]5[;]6]); if(v + r >= 7){ givedice(7 - v); v = 7; }else{ givedice(r); v = v + r; }; };,Magic Dice,NORMAL|NORMAL,7,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Unnatural Charm_upgraded,Roll some dice that|add up to 7,1,var v = 0; while(v < 7){ var r = rand([1[;]2[;]3[;]4[;]5[;]6]); if(v + r >= 7){ givedice(7 - v); v = 7; }else{ givedice(r); v = v + r; }; };,Magic Dice,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Unnatural Charm_downgraded,Roll a random dice,1,givedice(); sfx(~useitem~);,Magic Dice,NORMAL|NORMAL,7,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stun Blast,Deal [shock]4 damage[;] shock|[shock]1 item[;] burn [fire]1 dice,1,attack(4[;]SHOCK); sfx(~_fire~); inflict(SHOCK); inflict(FIRE[;]1); sfx(~_shock~);,Flashbang,COUNTDOWN,10,WEAPON,YELLOW,change_power,change_power,stun,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Stun Blast_upgraded,Deal [shock]4 damage[;] stun|[shock]1 item[;] burn [fire]2 dice,1,attack(4[;]SHOCK); sfx(~_fire~); inflict(FIRE[;]2); var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;}; inflict(~mf_stun~); sfx(~_shock~);,Flashbang,COUNTDOWN,10,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stun Blast_downgraded,Deal [sword]4 damage,1,attack(4); sfxdamage(target|4);,Flashbang,COUNTDOWN,10,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stun Blast?,Deal [shock]4 damage[;] shock|[shock]1 item[;] burn [fire]1 dice,1,attack(4[;]SHOCK); sfx(~_fire~); inflict(SHOCK); inflict(FIRE[;]1); sfx(~_shock~);,Flashbang,COUNTDOWN,10,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Stun Blast?_upgraded,Deal [shock]4 damage[;] stun|[shock]1 item[;] burn [fire]2 dice,1,attack(4[;]SHOCK); sfx(~_fire~);  inflict(FIRE[;]2); target.bonusdice-=1; inflict(~alternate_mf_stun~); sfx(~_shock~);,Flashbang,COUNTDOWN,10,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stun Blast?_downgraded,Deal [sword]4 damage,1,attack(4); sfxdamage(target|4);,Flashbang,COUNTDOWN,10,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pliers,Combine dice|[gray](Reusable),1,givedice(d); sfx(~useitem~);,Battle Wrench,MAX5|REQUIRE1,,ITEM,GREEN,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pliers_upgraded,Combine dice|[gray](Reusable),1,givedice(d); sfx(~useitem~);,Battle Wrench,MAX5|MAX2,,ITEM,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pliers_downgraded,Combine dice,1,givedice(d); sfx(~useitem~);,Battle Wrench,MAX5|REQUIRE1,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ekans Charm,Roll two dice|that add up to 6,1,givedice(rand([[1[;]5][;][2[;]4][;][3[;]3][;][4[;]2][;][5[;]1]]));,Magic Dice,REQUIRE1|REQUIRE1,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ekans Charm_upgraded,Roll some dice|that add up to 6,1,var v = 0; while(v < 6){ var r = rand([1[;]2[;]3[;]4[;]5[;]6]); if(v + r >= 6){ givedice(6 - v); v = 6; }else{ givedice(r); v = v + r; }; };,Magic Dice,REQUIRE1|REQUIRE1,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ekans Charm_downgraded,Roll two dice|that add up to 3,1,givedice([1[;]2]);,Magic Dice,REQUIRE1|REQUIRE1,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Iron Fist,Deal [sword]<d6> damage|Gain [shield]<d6> shield,2,sfx(~_shield~); attack(d[;]SHIELD); inflictself(SHIELD[;]d); sfxdamage(target|d);,Barricade,MAX3,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Iron Fist_upgraded,Deal [sword]<d6> damage|Gain [shield]<d6> shield,2,sfx(~_shield~); attack(d); inflictself(SHIELD[;]d); sfxdamage(target|d);,Barricade,MAX3|FREE1,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Iron Fist_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Barricade,MAX3,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dodge Roll,Reroll dice[;] always get|a different number,1,var x = d; while(x == d){ x = rand([1[;]2[;]3[;]4[;]5[;]6]); }; givedice(x);,Magic Dice,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Dodge Roll_upgraded,Reroll dice[;] get new value|[gray](2 uses this turn),1,var x = d; while(x == d){ x = rand([1[;]2[;]3[;]4[;]5[;]6]); }; givedice(x);,Magic Dice,NORMAL,,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dodge Roll_downgraded,Reroll dice,1,givedice();,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recharge,Drain [heart]6 health,2,drain(6); sfx(~_drain~);,Life Leech,COUNTDOWN,15,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recharge_upgraded,Drain [heart]6 health|[gray](Reusable),2,drain(6); sfx(~_drain~);,Life Leech,COUNTDOWN,15,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recharge_downgraded,Drain [heart]3 health,2,drain(3); sfx(~_drain~);,Life Leech,COUNTDOWN,15,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shotgun,Deal [sword]<d6> damage|[gray](2 uses this turn),1,attack(d); sfxdamage(target|d);,Pea Gun,MAX4|MAX4,,WEAPON,RED,change_power,change_power,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shotgun_upgraded,Deal [sword]<d6> damage|[gray](2 uses this turn),1,attack(d); sfxdamage(target|d);,Pea Gun,MAX5|MAX5,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shotgun_downgraded,Deal [sword]2 damage|,1,attack(2); sfxdamage(target|2);,Pea Gun,MAX4|MAX4,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Regen,Heal [heal]1 health at the end|of your turn[;] for <d6> turns,1,if(simulation){ bonus(-1000); }else{ sfx(~_cure~); inflictself(~regen~+d); };,Regenerate,MAX4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Regen_upgraded,Heal [heal]1 health at the end|of your turn[;] for <d6> turns,1,if(simulation){ bonus(-1000); }else{ sfx(~_cure~); inflictself(~regen~+d); };,Regenerate,MAX5,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Regen_downgraded,Heal [heal]1 health at the end|of your turn[;] for <d6> turns,1,if(simulation){ bonus(-1000); }else{ sfx(~_cure~); inflictself(~regen~+d); };,Regenerate,MAX2,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Decay,Inflict [weaken]1 weaken[;] [ice]1|freeze and [poison]2 poison,1,inflict(ICE[;]1); inflict(WEAKEN[;]1); inflict(POISON[;]2); sfx(~_ice~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,ITEM,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Decay_upgraded,Inflict [weaken]1 weaken[;] [ice]2|freeze and [poison]3 poison,1,inflict(ICE[;]2); inflict(WEAKEN[;]1); inflict(POISON[;]3); sfx(~_ice~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,ITEM,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Decay_downgraded,Inflict [weaken]1 weaken[;] [ice]1|freeze or [poison]2 poison,1,var f = [ICE[;]WEAKEN[;]POISON]; inflict(rand(f)[;]1); sfx(~_ice~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,ITEM,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Turtle,Restore [heal]2 health|Gain [shield]2 shield,1,attackself(-2); inflictself(SHIELD[;]2); sfx(~_heal~); sfx(~_shield~);,Regenerate,DOUBLES|DOUBLES,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Turtle_upgraded,Restore [heal]3 health|Gain [shield]3 shield,1,attackself(-3); inflictself(SHIELD[;]3); sfx(~_heal~); sfx(~_shield~);,Regenerate,DOUBLES|DOUBLES,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Turtle_downgraded,Restore [heal]1 health|Gain [shield]1 shield,1,attackself(-1); inflictself(SHIELD[;]1); sfx(~_heal~); sfx(~_shield~);,Regenerate,DOUBLES|DOUBLES,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Through,Weaken [weaken]1 of your items[;]|then roll 2 more dice,1,var amount = 2; var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){var r = rand(poss); r.animate(~weaken~); var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray);}else{self.textparticle(~No effect!~);};,Magic Dice,NORMAL,,ITEM,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Through_upgraded,Weaken [weaken]1 of your items[;]|then roll 3 more dice,1,var amount = 3; var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){var r = rand(poss); r.animate(~weaken~); var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray);}else{self.textparticle(~No effect!~);};,Magic Dice,NORMAL,,ITEM,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Through_downgraded,Weaken [weaken]1 of your items[;]|then roll 1 more dice,1,var amount = 1; var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){var r = rand(poss); r.animate(~weaken~); var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray);}else{self.textparticle(~No effect!~);};,Magic Dice,NORMAL,,ITEM,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Talons,[sword]<d6> dmg + [poison]1 poison|[gray](2 uses this turn),2,attack(d); inflict(POISON[;]1); sfx(~_poison~); sfxdamage(target|d);,Goop Gun,MAX4,,WEAPON,PURPLE,change_power,change_power,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Talons_upgraded,[sword]<d6> dmg + [poison]1 poison|[gray](3 uses this turn),2,attack(d); inflict(POISON[;]1); sfx(~_poison~); sfxdamage(target|d);,Goop Gun,MAX4,,WEAPON,PURPLE,,,,,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Talons_downgraded,[sword]<d6> dmg + [poison]1 poison,2,attack(d); inflict(POISON[;]1); sfx(~_poison~); sfxdamage(target|d);,Goop Gun,MAX4,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heckle,[curse] Curse enemy,2,inflict(CURSE); sfx(~_curse~);,Dramatic Pause,ODD|ODD,,ITEM,PURPLE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heckle_upgraded,[curse] Curse enemy,2,inflict(CURSE); sfx(~_curse~);,Dramatic Pause,NORMAL|NORMAL,,ITEM,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heckle_downgraded,[curse] Curse enemy,2,inflict(CURSE); sfx(~_curse~);,Dramatic Pause,REQUIRE1|REQUIRE5,,ITEM,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flipper,Roll the dice onto its side,1,var x = [1[;]2[;]3[;]4[;]5[;]6]; x.remove(d); x.remove(7-d); givedice(rand(x));,Magic Dice,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Flipper_upgraded,Roll the dice onto its side|[gray](2 uses this turn),1,var x = [1[;]2[;]3[;]4[;]5[;]6]; x.remove(d); x.remove(7-d); givedice(rand(x));,Magic Dice,NORMAL,,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flipper_downgraded,Roll the dice onto its side,1,var x = [1[;]2[;]3[;]4[;]5[;]6]; x.remove(d); x.remove(7-d); givedice(rand(x));,Magic Dice,EVEN,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Metallicize,Lose [heart]<d6> health|Gain [shield]<double> shield,1,pierceattackself(d); inflictself(SHIELD[;]2*d); sfx(~_shield~|~~|0.4); sfx(~_drain~);,Barricade,MAX3,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Metallicize_upgraded,Lose [heart]<d6> health|Gain [shield]<double> shield,1,pierceattackself(d); inflictself(SHIELD[;]2*d); sfx(~_shield~|~~|0.4); sfx(~_drain~);,Barricade,MAX3|FREE1,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Metallicize_downgraded,Lose [heart]<d6> health|Gain [shield]<d6> shield,1,pierceattackself(d); inflictself(SHIELD[;]d); sfx(~_shield~|~~|0.4); sfx(~_drain~);,Barricade,MAX3,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snapshot,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,EVEN,,ITEM,GREEN,change_requirements,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Snapshot_upgraded,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snapshot_downgraded,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,REQUIRE4,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Photocopy,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,ODD,,ITEM,GREEN,change_requirements,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Photocopy_upgraded,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Photocopy_downgraded,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,REQUIRE3,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Forgery,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,MAX3,,ITEM,GREEN,change_requirements,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Forgery_upgraded,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Forgery_downgraded,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,REQUIRE2,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Electroplating,Gain [shield]1 shield|[gray](Reuseable),1,inflictself(SHIELD[;]1); sfx(~_shield~);,Barricade,COUNTDOWN,3,SHIELD,ORANGE,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Electroplating_upgraded,Add [shield]1[;] add [shield]2 if at max hp|[gray](Reuseable),1,if(self.hp == self.maxhp){ inflictself(SHIELD[;]2); }else{ inflictself(SHIELD[;]1); }; sfx(~_shield~);,Barricade,COUNTDOWN,3,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Electroplating_downgraded,Gain [shield]1 shield,1,inflictself(SHIELD[;]1); sfx(~_shield~);,Barricade,COUNTDOWN,3,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Mail,Reduce dmg taken by [reduce]1|[gray](Reusable),1,inflictself(REDUCE[;] 1); sfx(~_shield~);,Protection,REQUIRE3,,SHIELD,ORANGE,change_power,change_power,reduce,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Mail_upgraded,Reduce dmg taken by [reduce]1|[gray](Reusable),1,inflictself(REDUCE[;] 1); sfx(~_shield~);,Protection,ODD,,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Mail_downgraded,Reduce dmg taken by [reduce]1,1,inflictself(REDUCE[;] 1); sfx(~_shield~);,Protection,REQUIRE3,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Mail?,Block [reduce]1 status effect|[gray](Reusable),1,inflictself(REDUCE[;] 1); sfx(~_shield~);,Protection,REQUIRE3,,SHIELD,ORANGE,change_power,change_power,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Mail?_upgraded,Block [reduce]1 status effect|[gray](Reusable),1,inflictself(REDUCE[;] 1); sfx(~_shield~);,Protection,ODD,,SHIELD,ORANGE,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Mail?_downgraded,Block [reduce]1 status effect|,1,inflictself(REDUCE[;] 1); sfx(~_shield~);,Protection,REQUIRE3,,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Whip,Deal [sword]4 damage|Reduce countdowns by 2,1,attack(4); boostcountdowns(2); sfxdamage(target|4);,Accelerate,COUNTDOWN,5,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Whip_upgraded,Deal [sword]4 damage|Reduce countdowns by 4,1,attack(4); boostcountdowns(4); sfxdamage(target|4);,Accelerate,COUNTDOWN,5,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Whip_downgraded,Reduce countdowns by 2,1,boostcountdowns(2);,Accelerate,COUNTDOWN,5,WEAPON,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nudgeknife,Deal [sword]1 damage[;] get|new dice (value -1),1,attack(1); givedice(d-1); sfxdamage(target|1);,Magic Dice,MIN2,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Nudgeknife_upgraded,Deal [sword]3 damage[;] get|new dice (value -1),1,attack(1); givedice(d-1); sfxdamage(target|1);,Magic Dice,MIN2,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nudgeknife_downgraded,Dice value -1,1,givedice(d-1);,Magic Dice,MIN2,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rake Pick,Split dice into 2s,2,var a = []; var x = d; while(x > 0){ a.push(2); x-=2; }; givedice(a[;]~splitdice~);,Magic Lockpick,EVEN,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rake Pick_upgraded,Split dice into 2s|[gray](2 uses this turn),2,var a = []; var x = d; while(x > 0){ a.push(2); x-=2; }; givedice(a[;]~splitdice~);,Magic Lockpick,EVEN,,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rake Pick_downgraded,Split dice into 2s,2,var a = []; var x = d; while(x > 0){ a.push(2); x-=2; }; givedice(a[;]~splitdice~);,Magic Lockpick,REQUIRE4,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Multiplicate,Multiply dice values,1,givedice(actualdice[0].basevalue * actualdice[1].basevalue);,Magic Lockpick,MAX3|MAX3,,ITEM,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,2,,,,,,,,,,
Multiplicate_upgraded,Multiply dice values,1,givedice(actualdice[0].basevalue * actualdice[1].basevalue);,Magic Lockpick,MAX4|MAX4,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Multiplicate_downgraded,Multiply dice values,1,givedice(actualdice[0].basevalue * actualdice[1].basevalue);,Magic Lockpick,MAX2|MAX2,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Oddfluff,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,ODD,,ITEM,GRAY,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Oddfluff_upgraded,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,ODD,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Oddfluff_downgraded,Please go shout at Jack|This doesn't do anything wtf,2,attack(0); sfxdamage(target|1);,,ODD,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Evenfluff,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,EVEN,,ITEM,GRAY,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Evenfluff_upgraded,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,EVEN,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Evenfluff_downgraded,Please go shout at Jack|This doesn't do anything wtf,2,attack(0); sfxdamage(target|1);,,EVEN,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Lowfluff,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,MAX3,,ITEM,GRAY,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Lowfluff_upgraded,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,MAX3,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Lowfluff_downgraded,Please go shout at Jack|This doesn't do anything wtf,2,attack(0); sfxdamage(target|1);,,MAX3,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Highfluff,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,MIN4,,ITEM,GRAY,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Highfluff_upgraded,If you find this in game[;]|please shout at Jackeea,2,attack(1); sfxdamage(target|1);,,MIN4,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Highfluff_downgraded,Please go shout at Jack|This doesn't do anything wtf,2,attack(0); sfxdamage(target|1);,,MIN4,,ITEM,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Medigun,Restore [heal]3 health|[gray](Reusable),1,attackself(-3); sfx(~_heal~);,Regenerate,COUNTDOWN,7,SHIELD,GREEN,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Medigun_upgraded,Restore [heal]5 health|[gray](Reusable),1,attackself(-5); sfx(~_heal~);,Regenerate,COUNTDOWN,7,SHIELD,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Medigun_downgraded,Restore [heal]1 health|[gray](Reusable),1,attackself(-1); sfx(~_heal~);,Regenerate,COUNTDOWN,7,SHIELD,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blade of JOAT,Deal [sword]1 dmg[;] [poison]1 poison[;]|heal [heal]1 hp[;] gain [shield]1 shield,1,attack(1); attackself(-1); inflict(POISON); inflictself(SHIELD); sfxdamage(target|1); sfx(~_heal~); sfx(~_shield~|~~|0.6); sfx(~_poison~|~~|0.2);,JOAT Smash,COUNTDOWN,6,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blade of JOAT_upgraded,[sword]1 dmg[;] [poison]1[;] heal [heal]1[;] [shield]1|[gray](2 uses this turn),1,attack(1); attackself(-1); inflict(POISON); inflictself(SHIELD); sfxdamage(target|1); sfx(~_heal~); sfx(~_shield~|~~|0.6); sfx(~_poison~|~~|0.2);,JOAT Smash,COUNTDOWN,6,WEAPON,RED,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blade of JOAT_downgraded,Deal [sword]1 damage[;]|heal [heal]1 health,1,attack(1); attackself(-1); sfxdamage(target|1); sfx(~_heal~);,JOAT Smash,COUNTDOWN,6,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Syringe Gun,[sword]1 dmg[;] heal [heal]1 hp|[gray](Reusable),1,attack(1); sfxdamage(target|1); attackself(-1); sfx(~_heal~|~~|0.2);,Bubble Gun,COUNTDOWN,4,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Syringe Gun_upgraded,[sword]2 dmg[;] heal [heal]1 hp|[gray](Reusable),1,attack(2); sfxdamage(target|1); attackself(-1); sfx(~_heal~|~~|0.2);,Bubble Gun,COUNTDOWN,4,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Syringe Gun_downgraded,Deal [sword]1 damage|[gray](Reusable),1,attack(1); sfxdamage(target|1);,Bubble Gun,COUNTDOWN,4,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tribute,Lose [heart]<triple> health|Roll <d6> new dice,1,pierceattackself(d*3); var a = []; for(x in 0...d){ a.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(a); sfx(~_drain~);,Magic Dice,MAX3,,ITEM,GRAY,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tribute_upgraded,Lose [heart]<double> health|Roll <d6> new dice,1,pierceattackself(d*2); var a = []; for(x in 0...d){ a.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(a); sfx(~_drain~);,Magic Dice,MAX3,,ITEM,GRAY,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tribute_downgraded,Lose [heart]<quintuple> health|Roll <d6> new dice,1,pierceattackself(d*5); var a = []; for(x in 0...d){ a.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(a); sfx(~_drain~);,Magic Dice,MAX3,,ITEM,GRAY,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blutsauger,Drain [heart]2 health|[gray](Reusable),1,drain(2); sfx(~_drain~);,Blood Sip,COUNTDOWN,7,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blutsauger_upgraded,Drain [heart]3 health|[gray](Reusable),1,drain(3); sfx(~_drain~);,Blood Sip,COUNTDOWN,7,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blutsauger_downgraded,Drain [heart]1 health|[gray](Reusable),1,drain(1); sfx(~_drain~);,Blood Sip,COUNTDOWN,7,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hockey Stick,Freeze [ice]1 dice|[gray](Reusable),1,inflict(ICE); sfx(~_ice~);,Refrigerator,ODD,,WEAPON,BRIGHTCYAN,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hockey Stick_upgraded,Freeze [ice]1 dice|[gray](Reusable),1,inflict(ICE); sfx(~_ice~);,Refrigerator,NORMAL,,WEAPON,BRIGHTCYAN,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hockey Stick_downgraded,Freeze [ice]1 dice|,1,inflict(ICE); sfx(~_ice~);,Refrigerator,ODD,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wooden Stick,[weaken]Weakens the enemy|[gray](Reusable),1,inflict(WEAKEN); sfx(~_weaken~);,Theremin,ODD,,WEAPON,ORANGE,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wooden Stick_upgraded,[weaken]Weakens the enemy|[gray](Reusable),1,inflict(WEAKEN); sfx(~_weaken~);,Theremin,NORMAL,,WEAPON,ORANGE,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wooden Stick_downgraded,[weaken]Weakens the enemy,1,inflict(WEAKEN); sfx(~_weaken~);,Theremin,ODD,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Focus Beam,Deal [sword]<var:focusbeam> dmg[;] increase|Focus Beam damage by 1,1,var s = self.getvar(~focusbeam~); attack(s);  sfxdamage(target|s); self.setvar(~focusbeam~[;]s+1); inflictself(~focusbeam~);,Whelm,EVEN,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~focusbeam~[;]0);,,,,,,,,
Focus Beam_upgraded,Deal [sword]<var:focusbeam> dmg[;] increase|Focus Beam damage by 1,1,var s = self.getvar(~focusbeam~); attack(s);  sfxdamage(target|s); self.setvar(~focusbeam~[;]s+1); inflictself(~focusbeam~);,Whelm,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~focusbeam~[;]0);,,,,,,,,
Focus Beam_downgraded,Deal [sword]<var:focusbeam> damage,1,var s = self.getvar(~focusbeam~); attack(s);  sfxdamage(target|s);,Whelm,EVEN,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~focusbeam~[;]0);,,,,,,,,
Drill Arm,Even CPU: [sword]<d6> dmg|Odd CPU: [shield]<d6> shield,2,if(self.roll_total%2 == 0){ attack(d); sfxdamage(target|d); }else{ inflictself(SHIELD[;]d); sfx(~_shield~); };,Plasma Gun,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~RED~);,,if(self.roll_total%2 == 0){ if(e.castdirection == 0){e.animate(~flashandshake~); e.changecolour(~RED~);}; e.castdirection = 1;  }else{ if(e.castdirection == 1){e.animate(~flashandshake~); e.changecolour(~ORANGE~);};  e.castdirection = 0; };,,,,,
Drill Arm_upgraded,Even CPU: [sword]<d6> dmg|Odd CPU: [shield]<d6> shield,2,if(self.roll_total%2 == 0){ attack(d); }else{ inflictself(SHIELD[;]d); };,Plasma Gun,NORMAL|FREE2,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~RED~);,,if(self.roll_total%2 == 0){ if(e.castdirection == 0){e.animate(~flashandshake~); e.changecolour(~RED~);}; e.castdirection = 1;  }else{ if(e.castdirection == 1){e.animate(~flashandshake~); e.changecolour(~ORANGE~);};  e.castdirection = 0; };,,,,,
Drill Arm_downgraded,Even CPU: [sword]<d6> dmg|Odd CPU: [shield]<d6> shield,2,if(self.roll_total%2 == 0){ attack(d); }else{ inflictself(SHIELD[;]d); };,Plasma Gun,MAX3,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~RED~);,,if(self.roll_total%2 == 0){ if(e.castdirection == 0){e.animate(~flashandshake~); e.changecolour(~RED~);}; e.castdirection = 1;  }else{ if(e.castdirection == 1){e.animate(~flashandshake~); e.changecolour(~ORANGE~);};  e.castdirection = 0; };,,,,,
Arm Drill,Even CPU: [shield]<d6> shield|Odd CPU: [sword]<d6> damage,2,if(self.roll_total%2 == 1){ attack(d); sfxdamage(target|d); }else{ inflictself(SHIELD[;]d); sfx(~_shield~); };,Plasma Gun,NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~ORANGE~);,,if(self.roll_total%2 == 1){ if(e.castdirection == 0){e.animate(~flashandshake~); e.changecolour(~RED~);}; e.castdirection = 1;  }else{ if(e.castdirection == 1){e.animate(~flashandshake~); e.changecolour(~ORANGE~);};  e.castdirection = 0; };,,,,,
Arm Drill_upgraded,Even CPU: [shield]<d6> shield|Odd CPU: [sword]<d6> damage,2,if(self.roll_total%2 == 1){ attack(d); sfxdamage(target|d); }else{ inflictself(SHIELD[;]d); sfx(~_shield~); };,Plasma Gun,NORMAL|FREE2,,WEAPON,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~ORANGE~);,,if(self.roll_total%2 == 1){ if(e.castdirection == 0){e.animate(~flashandshake~); e.changecolour(~RED~);}; e.castdirection = 1;  }else{ if(e.castdirection == 1){e.animate(~flashandshake~); e.changecolour(~ORANGE~);};  e.castdirection = 0; };,,,,,
Arm Drill_downgraded,Even CPU: [shield]<d6> shield|Odd CPU: [sword]<d6> damage,2,if(self.roll_total%2 == 1){ attack(d); sfxdamage(target|d); }else{ inflictself(SHIELD[;]d); sfx(~_shield~); };,Plasma Gun,MAX3,,WEAPON,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~ORANGE~);,,if(self.roll_total%2 == 1){ if(e.castdirection == 0){e.animate(~flashandshake~); e.changecolour(~RED~);}; e.castdirection = 1;  }else{ if(e.castdirection == 1){e.animate(~flashandshake~); e.changecolour(~ORANGE~);};  e.castdirection = 0; };,,,,,
Inspect Element,Set CPU counter to how many|calculations done this turn (<dicerolled>),1,adjustrobotcounter(self.roll_totaldice - self.roll_total + 1);,Plasma Gun,NORMAL|NORMAL,8,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Inspect Element_upgraded,Set CPU counter to how many|calculations done this turn (<dicerolled>),1,adjustrobotcounter(self.roll_totaldice - self.roll_total + 1);,Plasma Gun,NORMAL|NORMAL,6,ITEM,GREEN,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Inspect Element_downgraded,Set CPU counter to how many|calculations done this turn (<dicerolled>),1,adjustrobotcounter(self.roll_totaldice - self.roll_total + 1);,Plasma Gun,NORMAL|NORMAL,10,ITEM,GREEN,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Venom Bolt,Deal [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); inflict(POISON); sfx(~_magic~);  sfx(~_poison~|~~|0.2);,Goop Gun,EVEN,,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Venom Bolt_upgraded,Deal [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); inflict(POISON); sfx(~_magic~);  sfx(~_poison~|~~|0.2);,Goop Gun,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Venom Bolt_downgraded,Deal [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); inflict(POISON); sfx(~_magic~);  sfx(~_poison~|~~|0.2);,Goop Gun,REQUIRE4,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Leech Soul,Deal [sword]<d6> damage|Restore [heal]2 health,1,attack(d); attackself(-2); sfx(~_heal~|~~|0.2); sfx(~_magic~);,Life Leech,ODD,,MAGIC,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Leech Soul_upgraded,Deal [sword]<d6> damage|Restore [heal]2 health,1,attack(d); attackself(-2); sfx(~_heal~|~~|0.2); sfx(~_magic~);,Life Leech,NORMAL,,MAGIC,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Leech Soul_downgraded,Deal [sword]<d6> damage|Restore [heal]1 health,1,attack(d); attackself(-2); sfx(~_heal~|~~|0.2); sfx(~_magic~);,Life Leech,REQUIRE3,,MAGIC,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Plague Wave,Deal [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); inflict(POISON); sfx(~_magic~);  sfx(~_poison~|~~|0.2);,Goop Gun,NORMAL|NORMAL,,MAGIC,PURPLE,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Plague Wave_upgraded,Deal [sword]<d6> damage|Inflict [poison]2 poison,1,attack(d); inflict(POISON[;]2); sfx(~_magic~);  sfx(~_poison~|~~|0.2);,Goop Gun,NORMAL|NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Plague Wave_downgraded,Deal [sword]<d6> damage|Inflict [poison]1 poison,1,attack(d); inflict(POISON[;]1); sfx(~_magic~);  sfx(~_poison~|~~|0.2);,Goop Gun,MAX3|MAX3,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sunshower,Deal [sword]<d6> damage|Restore [heal]2 health,1,attack(d); attackself(-2); sfx(~_heal~|~~|0.2); sfx(~_magic~);,Life Leech,NORMAL|NORMAL,,MAGIC,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sunshower_upgraded,Deal [sword]<d6> damage|Restore [heal]3 health,1,attack(d); attackself(-3); sfx(~_heal~|~~|0.2); sfx(~_magic~);,Life Leech,NORMAL|NORMAL,,MAGIC,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sunshower_downgraded,Deal [sword]<d6> damage|Restore [heal]2 health,1,attack(d); attackself(-2); sfx(~_heal~|~~|0.2); sfx(~_magic~);,Life Leech,MAX3|MAX3,,MAGIC,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Blast,Deal [weaken]<d6> damage|Inflict [weaken]1 weaken,1,attack(d[;] WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Theremin,MAX3,,MAGIC,ORANGE,change_requirements,change_power,weaken,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sonic Blast_upgraded,Deal [weaken]<d6> damage|Inflict [weaken]1 weaken,1,attack(d[;] WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Theremin,NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Blast_downgraded,Deal [weaken]<d6> damage|Inflict [weaken]1 weaken,1,attack(d[;] WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Theremin,MAX2,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Blast?,Inflict [weaken]1 weaken[;] then|deal [weaken]<d6> damage,1,inflict(WEAKEN); attack(d[;] WEAKEN); sfx(~_weaken~);,Theremin,MAX3,,MAGIC,ORANGE,change_requirements,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sonic Blast?_upgraded,Inflict [weaken]1 weaken[;] then|deal [weaken]<d6> damage,1,inflict(WEAKEN); attack(d[;] WEAKEN); sfx(~_weaken~);,Theremin,NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Blast?_downgraded,Inflict [weaken]1 weaken[;] then|deal [weaken]<d6> damage,1,inflict(WEAKEN); attack(d[;] WEAKEN); sfx(~_weaken~);,Theremin,MAX2,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Boom,Deal [weaken]<d6> damage|Inflict [weaken]1 weaken,1,attack(d[;] WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Theremin,NORMAL|NORMAL,,MAGIC,ORANGE,change_power,change_power,weaken,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sonic Boom_upgraded,Deal [weaken]<d6> damage|Inflict [weaken]2 weaken,1,attack(d[;] WEAKEN); inflict(WEAKEN[;] 2); sfx(~_weaken~);,Theremin,NORMAL|NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Boom_downgraded,Deal [weaken]<d6> damage|Inflict [weaken]1 weaken,1,attack(d[;] WEAKEN); inflict(WEAKEN[;] 1); sfx(~_weaken~);,Theremin,MAX3|MAX3,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Boom?,Inflict [weaken]1 weaken[;] then|deal [weaken]<d6> damage,1,inflict(WEAKEN); attack(d[;] WEAKEN); sfx(~_weaken~);,Theremin,NORMAL|NORMAL,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sonic Boom?_upgraded,Inflict [weaken]2 weaken[;] then|deal [weaken]<d6> damage,1,inflict(WEAKEN|2); attack(d[;] WEAKEN); sfx(~_weaken~);,Theremin,NORMAL|NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sonic Boom?_downgraded,Inflict [weaken]1 weaken[;] then|deal [weaken]<d6> damage,1,inflict(WEAKEN); attack(d[;] WEAKEN); sfx(~_weaken~);,Theremin,MAX3|MAX3,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Scorch,Burn [fire]1 dice|[gray](Reusable),1,inflict(FIRE); sfx(~_fire~);,Blowtorch,COUNTDOWN,2,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Scorch_upgraded,Burn [fire]2 dice|[gray](Reusable),1,inflict(FIRE|2); sfx(~_fire~);,Blowtorch,COUNTDOWN,2,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Scorch_downgraded,Burn [fire]1 dice,1,inflict(FIRE); sfx(~_fire~);,Blowtorch,COUNTDOWN,2,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hailstorm,Freeze [ice]1 dice|[gray](Reusable),1,inflict(ICE); sfx(~_ice~);,Refrigerator,COUNTDOWN,6,WEAPON,BRIGHTCYAN,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Hailstorm_upgraded,[ice]2 dmg[;] freeze [ice]1 dice|[gray](Reusable),1,inflict(ICE); attack(2[;]ICE); sfx(~_ice~);,Refrigerator,COUNTDOWN,6,WEAPON,BRIGHTCYAN,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hailstorm_downgraded,Freeze [ice]1 dice,1,inflict(ICE); sfx(~_ice~);,Refrigerator,COUNTDOWN,6,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fire Siphon,Drain [heart]3 health for each|[fire]burning enemy dice,1,drain(getstatus(FIRE)*3); sfx(~_drain~); sfx(~_fire~);,Life Leech,COUNTDOWN,10,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Fire Siphon_upgraded,Drain [heart]4 health for each|[fire]burning enemy dice,1,drain(getstatus(FIRE)*4); sfx(~_drain~); sfx(~_fire~);,Life Leech,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fire Siphon_downgraded,Drain [heart]2 health for each|[fire]burning enemy dice,1,drain(getstatus(FIRE)*2); sfx(~_drain~); sfx(~_fire~);,Life Leech,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Electrolysis,Consume all enemy shock|[shock]4 dmg per [shock] removed,1,if(getstatus(SHOCK) > 0){attack(getstatus(SHOCK)*4[;]SHOCK); sfxdamage(target|getstatus(SHOCK)*4); sfx(~_shock~); removestatus(SHOCK|ALL);};,Static Shock,COUNTDOWN,4,MAGIC,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Electrolysis_upgraded,Consume all enemy shock|[shock]5 dmg per [shock] removed,1,if(getstatus(SHOCK) > 0){attack(getstatus(SHOCK)*5[;]SHOCK); sfxdamage(target|getstatus(SHOCK)*5); sfx(~_shock~); removestatus(SHOCK|ALL);};,Static Shock,COUNTDOWN,4,MAGIC,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Electrolysis_downgraded,Consume all enemy shock|[shock]2 dmg per [shock] removed,1,if(getstatus(SHOCK) > 0){attack(getstatus(SHOCK)*2[;]SHOCK); sfxdamage(target|getstatus(SHOCK)*2); sfx(~_shock~); removestatus(SHOCK|ALL);};,Static Shock,COUNTDOWN,4,MAGIC,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Giga Discharge,Deal [shock]20 damage[;]|shock all items,1,attack(20[;] SHOCK); inflict(SHOCK[;] ALL); sfx(~_shock~);,Static Shock,COUNTDOWN,25,MAGIC,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,2,,,,,,,,,,
Giga Discharge_upgraded,Deal [shock]25 damage[;]|shock all items,1,attack(25[;] SHOCK); inflict(SHOCK[;] ALL); sfx(~_shock~);,Static Shock,COUNTDOWN,25,MAGIC,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Giga Discharge_downgraded,No effect,1,,Static Shock,COUNTDOWN,25,MAGIC,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Iron Cauldron,Do [sword]1 damage[;]|get a high dice (4-6),1,attack(1); givedice(rand([4[;]5[;]6])); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,WHITE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Iron Cauldron_upgraded,[sword]1[;] get a high dice (4-6)|[gray](2 uses this turn),1,attack(1); givedice(rand([4[;]5[;]6])); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,WHITE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Iron Cauldron_downgraded,Do [sword]1 damage,1,attack(1); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,WHITE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Copper Cauldron,Do [sword]1 damage[;]|get a low dice (1-3),1,attack(1); givedice(rand([1[;]2[;]3])); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Copper Cauldron_upgraded,[sword]1[;] get a low dice (1-3)|[gray](2 uses this turn),1,attack(1); givedice(rand([1[;]2[;]3])); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,ORANGE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Copper Cauldron_downgraded,Do [sword]1 damage,1,attack(1); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Boopin' Stick,Deal [sword]5 damage,1,attack(5); sfxdamage(target|5);,Plasma Gun,COUNTDOWN,7,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Boopin' Stick_upgraded,Deal [sword]7 damage,1,attack(7); sfxdamage(target|7);,Plasma Gun,COUNTDOWN,7,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Boopin' Stick_downgraded,Deal [sword]3 damage,1,attack(3); sfxdamage(target|3);,Plasma Gun,COUNTDOWN,7,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pristine Sword,Do [sword]<triple> damage[;] 1 less|per missing [heart]hp you have,2,var dmg = 3*d - self.maxhp + self.hp; if(dmg > 0){ attack(dmg); sfxdamage(target|dmg); };,Regenerate,MAX5,,WEAPON,GREEN,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pristine Sword_upgraded,Do [sword]<triple> damage[;] 1 less|per missing [heart]hp you have,2,var dmg = 3*d - self.maxhp + self.hp; if(dmg > 0){ attack(dmg); sfxdamage(target|dmg); };,Regenerate,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pristine Sword_downgraded,Do [sword]<double> damage[;] 1 less|per missing [heart]hp you have,2,var dmg = 2*d - self.maxhp + self.hp; if(dmg > 0){ attack(dmg); sfxdamage(target|dmg); };,Regenerate,MAX5,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Piercing Scroll,Your attacks pierce|[shield]shields this turn,1,inflictself(PIERCE); sfx(~_fury~);,Barricade,EVEN,,MAGIC,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Piercing Scroll_upgraded,Your attacks pierce|[shield]shields this turn,1,inflictself(PIERCE); sfx(~_fury~);,Barricade,NORMAL,,MAGIC,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Piercing Scroll_downgraded,Your attacks pierce|[shield]shields this turn,1,inflictself(PIERCE); sfx(~_fury~);,Barricade,REQUIRE4,,MAGIC,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Life Rip,Drain [heart]2 health,1,drain(2); sfx(~_drain~);,Life Leech,ODD,,MAGIC,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Life Rip_upgraded,Drain [heart]2 health,1,drain(2); sfx(~_drain~);,Life Leech,NORMAL,,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Life Rip_downgraded,Drain [heart]1 health,1,drain(1); sfx(~_drain~);,Life Leech,ODD,,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Boomstick,Deal [sword]<d6> damage|[gray](2 uses this turn),1,attack(d); sfxdamage(target|d);,Pea Gun,MAX3|FREE2,,WEAPON,RED,change_power,change_power,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Boomstick_upgraded,Deal [sword]<d6> damage|[gray](2 uses this turn),1,attack(d); sfxdamage(target|d);,Pea Gun,MAX3|FREE3,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Boomstick_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Pea Gun,MAX3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Peppergun,Deal [sword]<d6> damage|[gray](Reusable),1,attack(d); sfxdamage(target|d);,Pea Gun,MAX2|FREE1,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Peppergun_upgraded,Deal [sword]<d6> damage|[gray](Reusable),1,attack(d); sfxdamage(target|d);,Pea Gun,MAX2|FREE2,,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Peppergun_downgraded,Deal [sword]<d6> damage|[gray](Reusable),1,attack(d); sfxdamage(target|d);,Pea Gun,MAX2,,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Firewall,Gain [shield]2 shield|Burn [fire]1 dice,1,inflictself(SHIELD[;]2); sfx(~_shield~); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX3,,MAGIC,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Firewall_upgraded,Gain [shield]4 shield|Burn [fire]1 dice,1,inflictself(SHIELD[;]4); sfx(~_shield~); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX3,,MAGIC,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Firewall_downgraded,Burn [fire]1 dice,1,inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX3,,MAGIC,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Frostbolt,Deal [ice]3 damage|Freeze [ice]1 dice,1,attack(3[;]ICE); inflict(ICE); sfx(~_ice~);,Refrigerator,MIN4,,MAGIC,BRIGHTCYAN,change_power,change_power,ice,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Frostbolt_upgraded,Deal [ice]5 damage|Freeze [ice]1 dice,1,attack(3[;]ICE); inflict(ICE); sfx(~_ice~);,Refrigerator,MIN4,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Frostbolt_downgraded,Freeze [ice]1 dice,1,inflict(ICE); sfx(~_ice~);,Refrigerator,MIN4,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Frostbolt?,Deal [ice]3 damage|Inflict [ice]1 freeze,1,attack(3[;]ICE); inflict(ICE); sfx(~_ice~);,Refrigerator,MIN4,,MAGIC,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Frostbolt?_upgraded,Deal [ice]5 damage|Inflict [ice]1 freeze,1,attack(3[;]ICE); inflict(ICE); sfx(~_ice~);,Refrigerator,MIN4,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Frostbolt?_downgraded,Inflict [ice]1 freeze,1,inflict(ICE); sfx(~_ice~);,Refrigerator,MIN4,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Butterfly Edge,Do [sword]<d6> damage|Returns the dice,2,attack(d); givedice(actualdice[0].basevalue); sfxdamage(target|d);,Plasma Gun,NORMAL,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Butterfly Edge_upgraded,Do [sword]<d6> damage|Returns the dice,2,attack(d); givedice(actualdice[0].basevalue); sfxdamage(target|d);,Plasma Gun,NORMAL|FREE2,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Butterfly Edge_downgraded,Do [sword]<d6> damage|Returns the dice,2,attack(d); givedice(actualdice[0].basevalue); sfxdamage(target|d);,Plasma Gun,MAX3,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lute Bocks,Duplicate a dice!|[gray](Results may vary),1,if(d == 6){ givedice([6[;]5]); }else if(d == 1){ givedice([1[;]2]); }else{ givedice([d[;]rand([d-1[;]d+1])]); };,Magic Dice,NORMAL,,ITEM,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lute Bocks_upgraded,Duplicate a dice!|[gray](Now variance-free!),1,givedice([d[;]d]);,Magic Dice,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lute Bocks_downgraded,Duplicate a dice!|[gray](Results may REALLY vary),1,givedice([d[;]rand([1[;]2[;]3[;]4[;]5[;]6].remove(d))]);,Magic Dice,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Jack's Pot,Use 2 random Jackpot items:|[sword]5 dmg[;] heal [heal]3[;]|roll a new dice,1,var r = rand([0[;]1[;]2]); if(r != 0){ attack(5); sfxdamage(target|5); }; if(r != 1){ attackself(-3); sfx(~_heal~); }; if(r !=2){ givedice(); };,Pea Gun,COUNTDOWN,9,ITEM,ORANGE,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Jack's Pot_upgraded,Use all Jackpot items:|[sword]5 dmg[;] heal [heal]3[;]|roll a new dice,1,attack(5); sfxdamage(target|5); attackself(-3); sfx(~_heal~); givedice(),Pea Gun,COUNTDOWN,9,ITEM,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Jack's Pot_downgraded,Use a random Jackpot item:|[sword]5 dmg[;] heal [heal]3[;]|roll a new [dice]dice,1,var r = rand([0[;]1[;]2]); if(r == 0){ attack(5); sfxdamage(target|5); }else if(r == 1){ attackself(-3); sfx(~_heal~); }else{ givedice(); };,Pea Gun,COUNTDOWN,9,ITEM,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Autoscroll,Increase all your|dice values by 1,1,var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 6){ extradice.push(1); mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 1)[;] self.screenposition()[;] c * 0.05); } c++; } } givedice(extradice);,Megabump,COUNTDOWN,5,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Autoscroll_upgraded,Increase all your|dice values by 2,1,var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 5){ extradice.push(mydice.basevalue - 4); mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 2)[;] self.screenposition()[;] c * 0.05); } c++; }; }; givedice(extradice);,Megabump,COUNTDOWN,5,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Autoscroll_downgraded,Increase a random|dice value by 1,1,var flag = false; for (mydice in self.dicepool){ if (mydice.available()){ flag = true; }; }; if(flag){ var c = 0; var extradice = []; var mydice = rand(self.dicepool); while(!mydice.available()){ mydice = rand(self.dicepool); }; if (mydice.basevalue >= 6){ extradice.push(1); mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 1)[;] self.screenposition()[;]0); }  givedice(extradice); },Megabump,COUNTDOWN,5,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Percussive Maintenance,Lose [heart]2 health|+1 free dice this fight,1,pierceattackself(2); self.extradice++; sfx(~magic_gaindice~);,Magic Dice,EVEN,,ITEM,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Percussive Maintenance_upgraded,Lose [heart]2 health|+1 free dice this fight,1,pierceattackself(2); self.extradice++; sfx(~magic_gaindice~);,Magic Dice,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Percussive Maintenance_downgraded,Lose [heart]2 health|+1 free dice this fight,1,pierceattackself(2); self.extradice++; sfx(~magic_gaindice~);,Magic Dice,REQUIRE6,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Redundant Coolant,[ice]Freeze yourself[;]|restore [heal]<d6> health,1,inflictself(ICE); attackself(-d); sfx(~_ice~); sfx(~_heal~);,Regenerate,MAX5,,ITEM,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Redundant Coolant_upgraded,[ice]Freeze yourself[;]|restore [heal]<d6> health,1,inflictself(ICE); attackself(-d); sfx(~_ice~); sfx(~_heal~);,Regenerate,NORMAL,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Redundant Coolant_downgraded,Freeze yourself [ice]<d6> times[;]|restore [heal]<d6> health,1,inflictself(ICE[;]d); attackself(-d); sfx(~_ice~); sfx(~_heal~);,Regenerate,MAX5,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Standing Ovation,Gain [heart]+3 max hp|[gray](once per battle),2,self.maxhp+=3; self.hp+=3; sfx(~_heal~); sfx(~_cure~);,Regenerate,COUNTDOWN,12,FINAL,ORANGE,change_power,change_power,,,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Standing Ovation_upgraded,Gain [heart]+3 max hp[;] heal [heal]5|[gray](once per battle),2,self.maxhp+=3; self.hp+=3; attackself(-5); sfx(~_heal~); sfx(~_cure~);,Regenerate,COUNTDOWN,12,FINAL,ORANGE,,,,,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Standing Ovation_downgraded,Gain [heart]+1 max hp|[gray](once per battle),2,self.maxhp+=1; self.hp+=1; sfx(~_heal~); sfx(~_cure~);,Regenerate,COUNTDOWN,12,FINAL,ORANGE,,,,,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Immolate,Burn [fire]all of|everyone's dice,1,inflict(FIRE[;]ALL); var t = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animate(~fire~|t); t+=0.2;}; }; sfx(~_fire~);,Blowtorch,COUNTDOWN,12,MAGIC,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Immolate_upgraded,[fire]Burn everyone's dice[;] do|[fire]1 dmg per die burned,1,var total = 0; total+=target.dice; total+=target.extradice; inflict(FIRE[;]ALL);  var t = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animate(~fire~|t); t+=0.2;}; }; sfx(~_fire~); attack(total[;]FIRE);,Blowtorch,COUNTDOWN,12,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Immolate_downgraded,Burn [fire]all of|your dice,1,var t = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animate(~fire~|t); t+=0.2;}; }; sfx(~_fire~);,Blowtorch,COUNTDOWN,12,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Superbolt,Always starts [shock]shocked|Deal [shock]<double> damage,1,attack(2*d[;]SHOCK); sfx(~_shock~);,Static Shock,MAX4,,WEAPON,YELLOW,change_power,change_power,shock,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.animate(SHOCK);,,,,,,,
Superbolt_upgraded,Always starts [shock]shocked|Deal [shock]<double> damage,1,attack(2*d[;]SHOCK); sfx(~_shock~);,Static Shock,MAX5,,WEAPON,YELLOW,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.animate(SHOCK);,,,,,,,
Superbolt_downgraded,Deal [shock]<d6> damage,1,attack(d[;]SHOCK); sfx(~_shock~);,Static Shock,MAX3,,WEAPON,YELLOW,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.animate(SHOCK);,,,,,,,
Superbolt?,Always starts [shock]shocked|Deal [shock]<double> damage,1,attack(2*d[;]SHOCK); sfx(~_shock~);,Static Shock,MAX4,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,e.animate(~alternate_shock~);,,,,,,,
Superbolt?_upgraded,Always starts [shock]shocked|Deal [shock]<double> damage,1,attack(2*d[;]SHOCK); sfx(~_shock~);,Static Shock,MAX5,,WEAPON,YELLOW,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,e.animate(~alternate_shock~);,,,,,,,
Superbolt?_downgraded,Deal [shock]<d6> damage,1,attack(d[;]SHOCK); sfx(~_shock~);,Static Shock,MAX3,,WEAPON,YELLOW,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,e.animate(~alternate_shock~);,,,,,,,
Resonator,Deal [weaken]<double> damage|While equipped[;] your other|items are [weaken]weakened,2,attack(2*d[;]WEAKEN); sfx(~_weaken~);,Theremin,NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(eq in self.equipment){ if(eq.name != ~Resonator~ && eq.availablethisturn){ eq.animate(WEAKEN); }; };,,,,,,
Resonator_upgraded,Deal [weaken]<double> damage|While equipped[;] your other|items are [weaken]weakened,2,attack(2*d[;]WEAKEN); sfx(~_weaken~);,Theremin,NORMAL|FREE1,,WEAPON,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(eq in self.equipment){ if(eq.name != ~Resonator~ && eq.availablethisturn){ eq.animate(WEAKEN); }; };,,,,,,
Resonator_downgraded,Deal [weaken]<d6> damage|While equipped[;] your other|items are [weaken]weakened,2,attack(d[;]WEAKEN); sfx(~_weaken~);,Theremin,NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(eq in self.equipment){ if(eq.name != ~Resonator~ && eq.availablethisturn){ eq.animate(WEAKEN); }; };,,,,,,
Leech Seed,[sword]<d6>. On 6[;] regen [heal]1 hp|per round for 2 rounds,2,attack(d); if(d == 6){ sfx(~_cure~|~~|0.2); inflictself(~regen~+2);  }; sfxdamage(target|d);,Life Leech,NORMAL,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Leech Seed_upgraded,[sword]<d6>. On 6[;] regen [heal]1 hp|per round for 3 rounds,2,attack(d); if(d == 6){ sfx(~_cure~|~~|0.2); inflictself(~regen~+3);  }; sfxdamage(target|d);,Life Leech,NORMAL,,WEAPON,GREEN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Leech Seed_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Life Leech,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Bolster,Start combat|with [shield]5 shield,1,,Barricade,,,WEAPON,ORANGE,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn == 1){ inflictself(SHIELD[;]5); sfx(~_shield~); e.changecolour(~GRAY~); e.animate(~flashandshake~); };,,,,,,
Bolster_upgraded,Start combat|with [shield]8 shield,1,,Barricade,,,WEAPON,ORANGE,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn == 1){ inflictself(SHIELD[;]8); sfx(~_shield~); e.changecolour(~GRAY~); e.animate(~flashandshake~); };,,,,,,
Bolster_downgraded,Start combat|with [shield]3 shield,1,,Barricade,,,WEAPON,ORANGE,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn == 1){ inflictself(SHIELD[;]3); sfx(~_shield~); e.changecolour(~GRAY~); e.animate(~flashandshake~); };,,,,,,
Mallet,Deal [shock]<d6> damage|[shock]Shock on 1 or 2,1,attack(d[;]SHOCK); if(d < 3){ inflict(SHOCK); sfx(~_shock~); }; sfxdamage(target|d);,Static Shock,MAX5,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mallet_upgraded,Deal [shock]<d6> damage|[shock]Shock on 1 [;] 2[;] or 3,1,attack(d[;]SHOCK); if(d < 4){ inflict(SHOCK); sfx(~_shock~); }; sfxdamage(target|d);,Static Shock,NORMAL,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mallet_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Static Shock,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trowel,Deal [weaken]<d6> damage|[weaken]Weaken on 1 or 2,1,attack(d[;]WEAKEN); if(d < 3){ inflict(WEAKEN); sfx(~_weaken~); }; sfxdamage(target|d);,Theremin,MAX5,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trowel_upgraded,Deal [weaken]<d6> damage|[weaken]Weaken on 1[;] 2[;] or 3,1,attack(d[;]WEAKEN); if(d < 4){ inflict(WEAKEN); sfx(~_weaken~); }; sfxdamage(target|d);,Theremin,NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trowel_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Theremin,MAX5,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heckfire,[fire]10 dmg + [fire]2 burn|[gray](once per battle),1,attack(10[;]FIRE); inflict(FIRE[;]2); sfx(~_fire~);,Blowtorch,COUNTDOWN,10,WEAPON,RED,change_power,change_power,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Heckfire_upgraded,[fire]13 dmg + [fire]4 burn|[gray](once per battle),1,attack(13[;]FIRE); inflict(FIRE[;]4); sfx(~_fire~);,Blowtorch,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Heckfire_downgraded,[fire]5 dmg + [fire]1 burn|[gray](once per battle),1,attack(5[;]FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Cat O' Six Tails,1-3: burn [fire]<d6> dice|4-6: do [fire]<d6> damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(FIRE[;]d); }else{ attack(d[;]FIRE); }; sfx(~_fire~);,Blowtorch,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cat O' Six Tails_upgraded,1-3: burn [fire]3 dice|4-6: do [fire]6 damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(FIRE[;]3); }else{ attack(6[;]FIRE); }; sfx(~_fire~);,Blowtorch,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cat O' Six Tails_downgraded,Deal [fire]<d6> damage,2,attack(d[;]FIRE); sfx(~_fire~);,Blowtorch,MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frosted Dirk,Deal [ice]<d6> damage|On odd[;] freeze [ice]2 dice,1,attack(d[;]ICE); if(d%2 == 1){ inflict(ICE[;]2); }; sfx(~_ice~);,Refrigerator,MAX4,,WEAPON,BRIGHTCYAN,change_power,change_power,,ice,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Frosted Dirk_upgraded,Deal [ice]<d6> damage|On odd[;] freeze [ice]2 dice,1,attack(d[;]ICE); if(d%2 == 1){ inflict(ICE[;]2); }; sfx(~_ice~);,Refrigerator,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frosted Dirk_downgraded,Deal [ice]<d6> damage,1,attack(d[;]ICE); sfx(~_ice~);,Refrigerator,MAX4,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frosted Dirk?,Deal [ice]<d6> damage|On odd[;] inflict [ice]2 freeze,1,attack(d[;]ICE); if(d%2 == 1){ inflict(ICE[;]2); }; sfx(~_ice~);,Refrigerator,MAX4,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Frosted Dirk?_upgraded,Deal [ice]<d6> damage|On odd[;] inflict [ice]2 freeze,1,attack(d[;]ICE); if(d%2 == 1){ inflict(ICE[;]2); }; sfx(~_ice~);,Refrigerator,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frosted Dirk?_downgraded,Deal [ice]<d6> damage,1,attack(d[;]ICE); sfx(~_ice~);,Refrigerator,MAX4,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Healing Shiv,Even: Deal [sword]<d6> damage|Odd: Heal [heal]<d6> health,1,if(d%2 == 1){ attackself(-d); sfx(~_heal~); }else{ attack(d); sfxdamage(target|d); };,Regenerate,MAX4,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,e.castdirection = 1-d%2;,,
Healing Shiv_upgraded,Even: Deal [sword]<d6> damage|Odd: Heal [heal]<d6> health,1,if(d%2 == 1){ attackself(-d); sfx(~_heal~); }else{ attack(d); sfxdamage(target|d); };,Regenerate,MAX5,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,e.castdirection = 1-d%2;,,
Healing Shiv_downgraded,Even: Deal [sword]1 damage|Odd: Heal [heal]1 health,1,if(d%2 == 1){ attackself(-1); sfx(~_heal~); }else{ attack(1); sfxdamage(target|1); };,Regenerate,MAX4,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,e.castdirection = 1-d%2;,,
Venomous Goop,Deal [sword]<d6> damage|Inflict [poison]4[purple] - <d6>[] poison,2,attack(d); if(d < 4){ inflict(POISON[;]4-d); sfx(~_poison~); }; sfxdamage(target|d);,Goop Gun,MAX4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Venomous Goop_upgraded,Deal [sword]<d6> damage|Inflict [poison]5[purple] - <d6>[] poison,2,attack(d); inflict(POISON[;]5-d); sfx(~_poison~); sfxdamage(target|d);,Goop Gun,MAX5,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Venomous Goop_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Goop Gun,MAX4,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stealth,Inflict [blind]1 blind,1,inflict(BLIND); sfx(~_blind~);,Padlock,NORMAL,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Stealth_upgraded,Inflict [blind]2 blind,1,inflict(BLIND[;]2); sfx(~_blind~);,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stealth_downgraded,Inflict [blind]1 blind,1,inflict(BLIND); sfx(~_blind~);,Padlock,EVEN,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stealth?,Inflict Blind for [blind]1 turn,1,inflict(BLIND); sfx(~_blind~);,Padlock,NORMAL,,WEAPON,GRAY,change_power,change_power,,,0,NO,YES,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Stealth?_upgraded,Inflict Blind for [blind]2 turns,1,inflict(BLIND[;]2); sfx(~_blind~);,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Stealth?_downgraded,Inflict Blind for [blind]1 turn,1,inflict(BLIND); sfx(~_blind~);,Padlock,EVEN,,WEAPON,GRAY,,,,,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Suffocating Smog,[lock]Lock all [blind]blinded|enemy dice,1,inflict(LOCK[;]getstatus(BLIND)); sfx(~_blind~); sfx(~_lock~);,Padlock,EVEN,,WEAPON,GRAY,change_power,change_power,blind,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Suffocating Smog_upgraded,[lock]Lock all [blind]blinded|enemy dice,1,inflict(LOCK[;]getstatus(BLIND)); sfx(~_blind~); sfx(~_lock~);,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Suffocating Smog_downgraded,[lock]Lock all [blind]blinded|enemy dice,1,inflict(LOCK[;]getstatus(BLIND)); sfx(~_blind~); sfx(~_lock~);,Padlock,REQUIRE2,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Suffocating Smog?,Inflict [lock]1 lock per turn|of [blind]blind on enemy,1,inflict(LOCK[;]getstatus(BLIND)); sfx(~_blind~); sfx(~_lock~);,Padlock,EVEN,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Suffocating Smog?_upgraded,Inflict [lock]1 lock per turn|of [blind]blind on enemy,1,inflict(LOCK[;]getstatus(BLIND)); sfx(~_blind~); sfx(~_lock~);,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Suffocating Smog?_downgraded,Inflict [lock]1 lock per turn|of [blind]blind on enemy,1,inflict(LOCK[;]getstatus(BLIND)); sfx(~_blind~); sfx(~_lock~);,Padlock,REQUIRE2,,WEAPON,GRAY,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Stick,Deal [sword]<d6> damage[;]|on even[;] blind [blind]1 dice,2,attack(d); sfxdamage(target|d); if(d%2 == 0){inflict(BLIND); sfx(~_blind~|~~|0.2);};,Padlock,NORMAL,,WEAPON,GRAY,change_power,change_power,blind,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Stick_upgraded,Deal [sword]<d6> damage[;]|on even[;] blind [blind]2 dice,2,attack(d); sfxdamage(target|d); if(d%2 == 0){inflict(BLIND|2); sfx(~_blind~|~~|0.2);};,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Stick_downgraded,Deal [sword]<d6> damage[;]|on 6[;] blind [blind]1 dice,2,attack(d); sfxdamage(target|d); if(d == 6){inflict(BLIND); sfx(~_blind~|~~|0.2);};,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Stick?,Deal [sword]<d6> damage[;] on even[;]|inflict [blind]1 turn of blind,2,attack(d); sfxdamage(target|d); if(d%2 == 0){inflict(BLIND); sfx(~_blind~|~~|0.2);};,Padlock,NORMAL,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Stick?_upgraded,Deal [sword]<d6> damage[;] on even[;]|inflict [blind]2 turns of blind,2,attack(d); sfxdamage(target|d); if(d%2 == 0){inflict(BLIND|2); sfx(~_blind~|~~|0.2);};,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Shadow Stick?_downgraded,Deal [sword]<d6> damage[;] on 6[;]|inflict [blind]1 turn of blind,2,attack(d); sfxdamage(target|d); if(d == 6){inflict(BLIND); sfx(~_blind~|~~|0.2);};,Padlock,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Shammer,Deal [sword]2x<slotdoubles> damage. On |double 6[;] [shock]1 and [weaken]1,2,attack(d*2); if(d == 6){ inflict(SHOCK); inflict(WEAKEN); sfx(~_shock~); sfx(~_weaken~); }; sfxdamage(target|d*2);,Zapthwack,DOUBLES|DOUBLES,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shammer_upgraded,Deal [sword]<d6> damage. On |double 6[;] [shock]1 and [weaken]1,2,attack(d); if(d == 12){ inflict(SHOCK); inflict(WEAKEN); sfx(~_shock~); sfx(~_weaken~); }; sfxdamage(target|d);,Zapthwack,NORMAL|NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shammer_downgraded,Deal [sword]2x<slotdoubles> damage,2,attack(d*2); sfxdamage(target|d*2);,Zapthwack,DOUBLES|DOUBLES,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Doppliduplicateinate,Even: Duplicate dice|Odd: Double dice value,1,if(d%2 == 0){ givedice([d[;]d]); }else{ givedice(d*2); };,Magic Dice,MAX4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Doppliduplicateinate_upgraded,Even: Duplicate dice|Odd: Double dice value,1,if(d%2 == 0){ givedice([d[;]d]); }else{ givedice(d*2); };,Magic Dice,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Doppliduplicateinate_downgraded,Even: Duplicate dice|Odd: Double dice value,1,if(d%2 == 0){ givedice([d[;]d]); }else{ givedice(d*2); };,Magic Dice,MAX2,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flail,Deal [sword]<d6> damage|Reduce countdowns by <d6>|(I made this first!!!!!1!),1,attack(d); boostcountdowns(d); sfxdamage(target|d);,Accelerate,MAX4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flail_upgraded,Deal [sword]<d6> damage|Reduce countdowns by <d6>|(jk ily terry),1,attack(d); boostcountdowns(d); sfxdamage(target|d);,Accelerate,MAX5,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flail_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Accelerate,MAX4,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Cauterize,Burn [fire]2 dice[;]|inflict [poison]2 poison,1,inflict(FIRE[;]2); sfx(~_fire~); inflict(POISON[;]2); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cauterize_upgraded,Burn [fire]3 dice[;]|inflict [poison]3 poison,1,inflict(FIRE[;]3); sfx(~_fire~); inflict(POISON[;]3); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cauterize_downgraded,Burn [fire]1 dice[;]|inflict [poison]1 poison,1,inflict(FIRE[;]1); sfx(~_fire~); inflict(POISON[;]1); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quicksilver,Receive [poison]<d6> poison|Gain [shield]<double> shield,1,inflictself(SHIELD[;]2*d); sfx(~_shield~); inflictself(POISON[;]d); sfx(~_poison~);,Barricade,ODD,,SHIELD,GRAY,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Quicksilver_upgraded,Receive [poison]<d6> poison|Gain [shield]<double> shield,1,inflictself(SHIELD[;]2*d); sfx(~_shield~); inflictself(POISON[;]d); sfx(~_poison~);,Barricade,NORMAL,,SHIELD,GRAY,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quicksilver_downgraded,Receive [poison]<d6> poison|Gain [shield]<d6> shield,1,inflictself(SHIELD[;]d); sfx(~_shield~); inflictself(POISON[;]d); sfx(~_poison~);,Barricade,ODD,,SHIELD,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quicklime,Receive [poison]<d6> poison|Roll <d6> new dice,1,inflictself(POISON[;]d); var a = []; for(x in 0...d){ a.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(a); sfx(~_poison~);,Magic Dice,MAX3,,ITEM,GRAY,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quicklime_upgraded,Receive [poison]<d6> poison|Roll <d6> new dice,1,inflictself(POISON[;]d); var a = []; for(x in 0...d){ a.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(a); sfx(~_poison~);,Magic Dice,MAX4,,ITEM,GRAY,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quicklime_downgraded,Receive [poison]<d6> poison|Roll <d6> new dice,1,inflictself(POISON[;]d); var a = []; for(x in 0...d){ a.push(rand([1[;]2[;]3[;]4[;]5[;]6])); }; givedice(a); sfx(~_poison~);,Magic Dice,MAX2,,ITEM,GRAY,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Custard Cream,Repeat next attack,1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,9,ITEM,YELLOW,change_power,change_power,fury,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Custard Cream_upgraded,Repeat next attack,1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,7,ITEM,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Custard Cream_downgraded,Repeat next attack,1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,11,ITEM,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Custard Cream?,Repeat next attack[;] but|disable it next turn,1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,9,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Custard Cream?_upgraded,Repeat next attack[;] but|disable it next turn,1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,7,ITEM,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Custard Cream?_downgraded,Repeat next attack[;] but|disable it next turn,1,if(getstatusself(FURY) == 0) { bonus(1000); } else { bonus(-1000); } inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,11,ITEM,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Primal Punch,If <d6> is a prime number[;]|deal [sword]<d6> damage,1,var flag = true; if(d == 1){flag = false; target.textparticle(~1 is not a prime!~);}; for(x in 2...d){if(d%x == 0){flag = false;};}; if(d == 2){flag = true;}; if(flag){attack(d); sfxdamage(target|d);}else{target.textparticle(~No effect!~); sfx(~_dodge~);};,Fury,MAX5|MAX5,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Primal Punch_upgraded,If <d6> is a prime number[;]|deal [sword]<d6> damage,1,var flag = true; if(d == 1){flag = false; target.textparticle(~1 is not a prime!~);}; for(x in 2...d){if(d%x == 0){flag = false;};}; if(d == 2){flag = true;}; if(flag){attack(d); sfxdamage(target|d);}else{target.textparticle(~No effect!~); sfx(~_dodge~);};,Fury,NORMAL|NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Primal Punch_downgraded,If <d6> is a prime number[;]|deal [sword]<d6> damage,1,var flag = true; if(d == 1){flag = false; target.textparticle(~1 is not a prime!~);}; for(x in 2...d){if(d%x == 0){flag = false;};}; if(d == 2){flag = true;}; if(flag){attack(d); sfxdamage(target|d);}else{target.textparticle(~No effect!~); sfx(~_dodge~);};,Fury,MAX3|MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mini Missile,Deal [sword]4 damage,1,attack(4); sfx(~_magic~);,Pea Gun,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Mini Missile_upgraded,Deal [sword]5 damage,1,attack(5); sfx(~_magic~);,Pea Gun,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mini Missile_downgraded,Deal [sword]2 damage,1,attack(2); sfx(~_magic~);,Pea Gun,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Daydream,Restore [heal]999 health,2,attackself(-999); sfx(~_heal~);,Regenerate,COUNTDOWN,99,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Daydream_upgraded,Restore [heal]1000 health|Cure [poison]1 poison,2,attackself(-1000); sfx(~_heal~); removestatusself(POISON[;]1);,Regenerate,COUNTDOWN,99,MAGIC,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Daydream_downgraded,Restore [heal]998 health,2,attackself(-998); sfx(~_heal~);,Regenerate,COUNTDOWN,99,MAGIC,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inspiring Tune,Restore [heal]5 health,2,attackself(-5); sfx(~_heal~);,Regenerate,EVEN,,FINAL,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inspiring Tune_upgraded,Restore [heal]5 health,2,attackself(-5); sfx(~_heal~);,Regenerate,NORMAL,,FINAL,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inspiring Tune_downgraded,Restore [heal]2 health,2,attackself(-2); sfx(~_heal~);,Regenerate,EVEN,,FINAL,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cauldron Crafter,Permanently add a random|Cauldron to your deck|[gray](once per battle),2,var cauldrons = [~~|~Gold~|~Silver~|~Iron~|~Copper~|~Electrum~|~Amber~|~Quartz~|~Blood~|~Glass~|~Ash~|~Stash~|~Mossy~|~Trash~|~Hat~]; addjestercard(rand(cauldrons)+~ Cauldron~); sfx(~_thinghappens~);,,NORMAL,,FINAL,ORANGE,change_power,change_power,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Cauldron Crafter_upgraded,Permanently add a random|Cauldron to your deck,2,var cauldrons = [~~|~Gold~|~Silver~|~Iron~|~Copper~|~Electrum~|~Amber~|~Quartz~|~Blood~|~Glass~|~Ash~|~Stash~|~Mossy~|~Trash~|~Hat~]; addjestercard(rand(cauldrons)+~ Cauldron~); sfx(~_thinghappens~);,,NORMAL,,FINAL,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Cauldron Crafter_downgraded,Permanently add a worse|Cauldron to your deck|[gray](once per battle),2,addjestercard(~Broken Cauldron~); sfx(~_thinghappens~);,,ODD,,FINAL,ORANGE,,,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Have a Ball,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX4|MAX4|MAX4|MAX4,,FINAL,ORANGE,change_power,change_power,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Have a Ball_upgraded,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX4,,FINAL,ORANGE,,,,none,8,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Have a Ball_downgraded,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX4|MAX4|MAX4|MAX4,,FINAL,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bite,Drain [heart]1 health|Dice value -1,1,drain(1); sfx(~_drain~); givedice(d-1);,Blood Sip,MIN4,,WEAPON,RED,change_requirements,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Bite_upgraded,Drain [heart]1 health|Dice value -1,1,drain(1); sfx(~_drain~); givedice(d-1);,Blood Sip,MIN2,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bite_downgraded,Drain [heart]1 health,1,drain(1); sfx(~_drain~);,Blood Sip,MIN4,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Candy Cane,Restore [heal]3 health[;]|excess adds [shield]shield,1,if(self.maxhp - self.hp < 3){ sfx(~_shield~); }; if(self.hp < self.maxhp){ sfx(~_heal~); }; for(x in 0...3){ if(self.hp >= self.maxhp){ inflictself(SHIELD); }else{ attackself(-1); }; };,Revitalize,EVEN,,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Candy Cane_upgraded,Restore [heal]4 health[;]|excess adds [shield]shield,1,if(self.maxhp - self.hp < 4){ sfx(~_shield~); }; if(self.hp < self.maxhp){ sfx(~_heal~); }; for(x in 0...4){ if(self.hp >= self.maxhp){ inflictself(SHIELD); }else{ attackself(-1); }; };,Revitalize,EVEN,,MAGIC,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Candy Cane_downgraded,Restore [heal]1 health[;]|if at max[;] increase [shield]shield,1,if(self.hp == self.maxhp){ inflictself(SHIELD); sfx(~_shield~); }else{ attackself(-1); sfx(~_heal~); };,Revitalize,EVEN,,MAGIC,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Booplicate,Duplicate a dice|Lose [heart]2 health,1,pierceattackself(2); sfx(~_drain~); givedice([d[;]d]);,Clone Device,NORMAL,,WEAPON,RED,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,1,,,,,,,,,,
Booplicate_upgraded,Duplicate a dice,1,givedice([d[;]d]);,Clone Device,NORMAL,,WEAPON,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Booplicate_downgraded,Duplicate a dice|Lose [heart]4 health,1,pierceattackself(4); sfx(~_drain~); givedice([d[;]d]);,Clone Device,NORMAL,,WEAPON,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Blooplicate,Roll two more|[blind]blinded dice,1,inflictself(BLIND[;]2); sfx(~_blind~); givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]);,Clone Device,NORMAL,,MAGIC,GRAY,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,1,,,,,,,,,,
Blooplicate_upgraded,Roll three more|[blind]blinded dice,1,inflictself(BLIND[;]3); sfx(~_blind~); givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]);,Clone Device,NORMAL,,MAGIC,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Blooplicate_downgraded,Roll one more|[blind]blinded dice,1,inflictself(BLIND[;]1); sfx(~_blind~); givedice();,Clone Device,NORMAL,,MAGIC,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Gooplicate,If enemy is [poison]poisoned[;]|duplicate the dice,1,if(getstatus(POISON) > 0){ givedice([d[;]d]); }else{ givedice(d); };,Clone Device,NORMAL,,MAGIC,PURPLE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Gooplicate_upgraded,If enemy is [poison]poisoned[;]|get 3 copies of the dice,1,if(getstatus(POISON) > 0){ givedice([d[;]d[;]d]); }else{ givedice(d); };,Clone Device,NORMAL,,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gooplicate_downgraded,If enemy has over [poison]<d6>|poison[;] duplicate the dice,1,if(getstatus(POISON) > d){ givedice([d[;]d]); }else{ givedice(d); };,Clone Device,NORMAL,,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Triplicate,Get 3 copies of a dice,2,givedice([d[;]d[;]d]);,Magic Six,MAX3,,ITEM,GREEN,change_requirements,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Triplicate_upgraded,Get 3 copies of a dice,2,givedice([d[;]d[;]d]);,Magic Six,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Triplicate_downgraded,Duplicate a dice,2,givedice([d[;]d]);,Magic Six,MAX3,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Antifreeze,Get a different new dice|[gray](Reusable),1,givedice(rand([2[;]3[;]4[;]5[;]6]));,Snake Eyes,REQUIRE1|REQUIRE1,,ITEM,GREEN,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Antifreeze_upgraded,Get a different new dice|[gray](Reusable),1,if(actualdice[0] == 1 && actualdice[1] == 1){givedice(rand([2[;]3[;]4[;]5[;]6]));}else if(actualdice[0] == 2 && actualdice[1] == 2){givedice(rand([1[;]3[;]4[;]5[;]6]));}else{givedice(rand([3[;]4[;]5[;]6]));};,Snake Eyes,MAX2|MAX2,,ITEM,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Antifreeze_downgraded,Get a different new dice,1,givedice(rand([2[;]3[;]4[;]5[;]6]));,Snake Eyes,REQUIRE1|REQUIRE1,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Scraps,Even: heal [heal]1[;] Odd: add [shield]1|[gray](Reusable),1,if(d%2 == 1){ inflictself(SHIELD); sfx(~_shield~); }else{ attackself(-1); sfx(~_heal~); };,Regenerate,MAX2,,SHIELD,ORANGE,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Scraps_upgraded,Even: heal [heal]1[;] Odd: add [shield]1|[gray](Reusable),1,if(d%2 == 1){ inflictself(SHIELD); sfx(~_shield~); }else{ attackself(-1); sfx(~_heal~); };,Regenerate,NORMAL,,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Scraps_downgraded,Even: Heal [heal]1 health|Odd: Add [shield]1 shield,1,if(d%2 == 1){ inflictself(SHIELD); sfx(~_shield~); }else{ attackself(-1); sfx(~_heal~); };,Regenerate,MAX2,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Venom Catapult,Inflict [poison]3 poison,1,inflict(POISON[;]3); sfx(~_poison~);,Goop Gun,DOUBLES|DOUBLES,,ITEM,PURPLE,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Venom Catapult_upgraded,Inflict [poison]4 poison,1,inflict(POISON[;]4); sfx(~_poison~);,Goop Gun,DOUBLES|DOUBLES,,ITEM,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Venom Catapult_downgraded,Inflict [poison]2 poison,1,inflict(POISON[;]2); sfx(~_poison~);,Goop Gun,DOUBLES|DOUBLES,,ITEM,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steel Bulwark,Double your [shield]shield|[gray](once per battle),1,inflictself(SHIELD[;]getstatusself(SHIELD)); sfx(~_shield~);,Barricade,COUNTDOWN,10,SHIELD,ORANGE,change_power,change_power,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Steel Bulwark_upgraded,Double your [shield]shield,1,inflictself(SHIELD[;]getstatusself(SHIELD)); sfx(~_shield~);,Barricade,COUNTDOWN,10,SHIELD,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Steel Bulwark_downgraded,Increase [shield]shield by 50%|[gray](once per battle),1,inflictself(SHIELD[;]getstatusself(SHIELD)/2); sfx(~_shield~);,Barricade,COUNTDOWN,10,SHIELD,ORANGE,,,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Mystic Stave,Inflict a status depending|on your roll:|1:[blind] 2:[poison] 3:[fire] 4:[ice] 5:[weaken] 6:[shock],1,var effs = [SHOCK[;]WEAKEN[;]ICE[;]FIRE[;]POISON[;]BLIND]; inflict(effs[6-d]); var sounds=[~_shock~[;]~_weaken~[;]~_ice~[;]~_fire~[;]~_poison~[;]~_blind~]; sfx(sounds[6-d]);,Mystic Boop,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mystic Stave_upgraded,Inflict a status:|1:[blind] 2:[poison] 3:[fire] 4:[ice] 5:[weaken] 6:[shock]|[gray](3 uses this turn),1,var effs = [SHOCK[;]WEAKEN[;]ICE[;]FIRE[;]POISON[;]BLIND]; inflict(effs[6-d]); var sounds=[~_shock~[;]~_weaken~[;]~_ice~[;]~_fire~[;]~_poison~[;]~_blind~]; sfx(sounds[6-d]);,Mystic Boop,NORMAL,,WEAPON,RED,,,,,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mystic Stave_downgraded,Inflict a random status:|[blind][poison][fire][ice][weaken][shock],1,var r = rand([0[;]1[;]2[;]3[;]4[;]5]); var effs = [SHOCK[;]WEAKEN[;]ICE[;]FIRE[;]POISON[;]BLIND]; inflict(effs[r]); var sounds=[~_shock~[;]~_weaken~[;]~_ice~[;]~_fire~[;]~_poison~[;]~_blind~]; sfx(sounds[r]);,Mystic Boop,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Heal,Restore [heal]3 health,1,attackself(-3); sfx(~_heal~);,Regenerate,EVEN,,SHIELD,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Heal_upgraded,Restore [heal]4 health,1,attackself(-4); sfx(~_heal~);,Regenerate,EVEN,,SHIELD,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Heal_downgraded,Restore [heal]3 health,1,attackself(-3); sfx(~_heal~);,Regenerate,REQUIRE4,,SHIELD,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flourish,Deal [sword]<d6> damage[;] double|if you have no dice left,1,var x = true; for (mydice in self.dicepool){ if (mydice.available()){ x=false; }}; if(x){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Mechanical Kneecap,MAX4,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Flourish_upgraded,Deal [sword]<d6> damage[;] double|if you have no dice left,1,var x = true; for (mydice in self.dicepool){ if (mydice.available()){ x=false; }}; if(x){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Mechanical Kneecap,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Flourish_downgraded,Deal [sword]<d6> damage[;] double|if you have no dice left,1,var x = true; for (mydice in self.dicepool){ if (mydice.available()){ x=false; }}; if(x){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Mechanical Kneecap,MAX2,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Pot of Generosity,Permanently delete|your hand|(excluding this card)[],2,for(x in [0[;]1[;]2[;]3]){ if(Deck.getcard(x)!=null){ Deck.getcard(x).delete(); }; }; sfx(~_thinghappens~);,,EVEN,,FINAL,ORANGE,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Pot of Generosity_upgraded,Permanently delete|your hand|(excluding this card)[],2,for(x in [0[;]1[;]2[;]3]){ if(Deck.getcard(x)!=null){ Deck.getcard(x).delete(); }; }; sfx(~_thinghappens~);,,NORMAL,,FINAL,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Pot of Generosity_downgraded,Permanently delete|your hand|(excluding this card)[],2,for(x in [0[;]1[;]2[;]3]){ if(Deck.getcard(x)!=null){ Deck.getcard(x).delete(); }; }; sfx(~_thinghappens~);,,REQUIRE2,,FINAL,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Steamball,Even: [fire]<d6> dmg[;] [fire]1 burn|Odd: [ice]<d6> dmg[;] [ice]1 freeze,1,if(d%2 == 0){ attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~); }else{ attack(d[;]ICE); inflict(ICE); sfx(~_ice~); };,Ice Burn,MAX4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Steamball_upgraded,Even: [fire]<d6> dmg[;] [fire]1 burn|Odd: [ice]<d6> dmg[;] [ice]1 freeze,1,if(d%2 == 0){ attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~); }else{ attack(d[;]ICE); inflict(ICE); sfx(~_ice~); };,Ice Burn,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Steamball_downgraded,Even: [fire]<d6> dmg[;] [fire]1 burn|Odd: [ice]<d6> dmg[;] [ice]1 freeze,1,if(d%2 == 0){ attack(d[;]FIRE); inflict(FIRE); sfx(~_fire~); }else{ attack(d[;]ICE); inflict(ICE); sfx(~_ice~); };,Ice Burn,MAX2,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Kaboomerang,Deal [sword]<quadruple> damage|Deal [sword]<double> to yourself,2,attack(d*4); boomerang(d*2); sfxdamage(target|d*4);,Plasma Gun,MAX4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Kaboomerang_upgraded,Deal [sword]<quadruple> damage|Deal [sword]<double> to yourself,2,attack(d*4); boomerang(d*2); sfxdamage(target|d*4);,Plasma Gun,MAX5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Kaboomerang_downgraded,Deal [sword]<double> damage to|the enemy and yourself,2,attack(d*2); boomerang(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Coolant Shooter,Reduce CPU counter by 2|[gray](Reusable),1,adjustrobotcounter(-2);,Plasma Gun,COUNTDOWN,5,ITEM,GREEN,change_power,change_power,,none,-1,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Coolant Shooter_upgraded,Reduce CPU counter by 3|[gray](Reusable),1,adjustrobotcounter(-3);,Plasma Gun,COUNTDOWN,5,ITEM,GREEN,,,,none,-1,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Coolant Shooter_downgraded,Reduce CPU counter by 1|[gray](Reusable),1,adjustrobotcounter(-1);,Plasma Gun,COUNTDOWN,5,ITEM,GREEN,,,,none,-1,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Clerical Error,Heal the enemy for [heal]<d6>|Inflict [poison]<d6> poison,1,attack(-d); sfx(~_cure~); inflict(POISON[;]d); sfx(~_poison~);,Goop Gun,MAX4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Clerical Error_upgraded,Heal the enemy for [heal]<d6>|Inflict [poison]<d6> poison,1,attack(-d); sfx(~_cure~); inflict(POISON[;]d); sfx(~_poison~);,Goop Gun,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Clerical Error_downgraded,Heal the enemy for [heal]<d6>,1,attack(-d); sfx(~_cure~);,Goop Gun,MAX4,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gust,Shock [shock]1 item|[gray](Reusable),1,inflict(SHOCK); sfx(~_shock~);,Static Shock,COUNTDOWN,4,WEAPON,YELLOW,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Gust_upgraded,[shock]1 dmg[;] shock [shock]1 item|[gray](Reusable),1,inflict(SHOCK); attack(1[;]SHOCK); sfx(~_shock~);,Static Shock,COUNTDOWN,4,WEAPON,YELLOW,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gust_downgraded,Shock [shock]1 item,1,inflict(SHOCK); sfx(~_shock~);,Static Shock,COUNTDOWN,4,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reverb,Weaken [weaken]1 item|[gray](Reuseable),1,inflict(WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,change_power,change_power,weaken,,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Reverb_upgraded,[weaken]2 dmg[;] weaken [weaken]1 item|[gray](Reuseable),1,inflict(WEAKEN); attack(2[;]WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reverb_downgraded,Weaken [weaken]1 item,1,inflict(WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reverb?,Inflict [weaken]1 weaken|[gray](Reuseable),1,inflict(WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,change_power,change_power,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Reverb?_upgraded,[weaken]1 weaken + [weaken]2 damage|[gray](Reuseable),1,inflict(WEAKEN); attack(2[;]WEAKEN);  sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Reverb?_downgraded,Inflict [weaken]1 weaken,1,inflict(WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pavise,Gain [shield]<d6> shield|Reduce countdowns by <d6>,2,inflictself(SHIELD[;]d); boostcountdowns(d); sfx(~_shield~);,Accelerate,MAX4,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pavise_upgraded,Gain [shield]<d6> shield|Reduce countdowns by <d6>,2,inflictself(SHIELD[;]d); boostcountdowns(d); sfx(~_shield~);,Accelerate,MAX4|FREE1,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pavise_downgraded,Gain [shield]<d6> shield|Reduce countdowns by <d6>,2,inflictself(SHIELD[;]d); boostcountdowns(d); sfx(~_shield~);,Accelerate,MAX2,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poison Thread,Inflict [poison]1 poison|[gray](3 uses this turn),1,inflict(POISON[;]1); sfx(~_poison~);,Pea Gun,MIN3,,WEAPON,PURPLE,change_power,change_power,,,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poison Thread_upgraded,Inflict [poison]1 poison|[gray](Reuseable),1,inflict(POISON[;]2); sfx(~_poison~);,Pea Gun,MIN3,,WEAPON,PURPLE,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poison Thread_downgraded,Inflict [poison]1 poison,1,inflict(POISON[;]1); sfx(~_poison~);,Pea Gun,MIN5,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frostbitten,Even: Burn [fire]1 dice|Odd: Inflict [ice]1 freeze,1,if(d%2 == 0){ inflict(FIRE); sfx(~_fire~); }else{ inflict(ICE); sfx(~_ice~); };,Ice Burn,NORMAL,,MAGIC,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frostbitten_upgraded,Even: Burn [fire]2 dice|Odd: Inflict [ice]2 freeze,1,if(d%2 == 0){ inflict(FIRE[;]2); sfx(~_fire~); }else{ inflict(ICE[;]2); sfx(~_ice~); };,Ice Burn,NORMAL,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frostbitten_downgraded,Even: Burn [fire]1 dice|Odd: Inflict [ice]1 freeze,1,if(d%2 == 0){ inflict(FIRE); sfx(~_fire~); }else{ inflict(ICE); sfx(~_ice~); };,Ice Burn,MAX3,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frozen Flute,Even: Inflict [weaken]1 weaken|Odd: Inflict [ice]1 freeze,1,if(d%2 == 0){ inflict(WEAKEN); sfx(~_weaken~); }else{ inflict(ICE); sfx(~_ice~); };,Theremin,NORMAL,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frozen Flute_upgraded,Even: Inflict [weaken]2 weaken|Odd: Inflict [ice]2 freeze,1,if(d%2 == 0){ inflict(WEAKEN[;]2); sfx(~_weaken~); }else{ inflict(ICE[;]2); sfx(~_ice~); };,Theremin,NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frozen Flute_downgraded,Even: Inflict [weaken]1 weaken|Odd: Inflict [ice]1 freeze,1,if(d%2 == 0){ inflict(WEAKEN); sfx(~_weaken~); }else{ inflict(ICE); sfx(~_ice~); };,Theremin,MAX3,,MAGIC,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fireflash,Even: Shock [shock]1 item|Odd: Burn [fire]1 dice,1,if(d%2 == 0){ inflict(SHOCK); sfx(~_shock~); }else{ inflict(FIRE); sfx(~_fire~); };,Static Shock,NORMAL,,MAGIC,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fireflash_upgraded,Even: Shock [shock]2 items|Odd: Burn [fire]2 dice,1,if(d%2 == 0){ inflict(SHOCK[;]2); sfx(~_shock~); }else{ inflict(FIRE[;]2); sfx(~_fire~); };,Static Shock,NORMAL,,MAGIC,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fireflash_downgraded,Even: Shock [shock]1 item|Odd: Burn [fire]1 dice,1,if(d%2 == 0){ inflict(SHOCK); sfx(~_shock~); }else{ inflict(FIRE); sfx(~_fire~); };,Static Shock,MAX3,,MAGIC,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Solar Beam,Deal [sword]<var:solarbeam> damage. On start|of turn: Solar Beam dmg +1,1,var s = self.getvar(~solarbeam~); attack(s); sfxdamage(target|s);,Whelm,MIN3,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,self.setvar(~solarbeam~[;]0);,,self.setvar(~solarbeam~[;]self.getvar(~solarbeam~)+1); inflictself(~solarbeam~); sfx(~_cure~); e.animate(~flashandshake~);,,,,,,
Solar Beam_upgraded,Deal [sword]<var:solarbeam> damage. On start|of turn: Solar Beam dmg +1,1,var s = self.getvar(~solarbeam~); attack(s); sfxdamage(target|s);,Whelm,NORMAL,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,self.setvar(~solarbeam~[;]0);,,self.setvar(~solarbeam~[;]self.getvar(~solarbeam~)+1); inflictself(~solarbeam~); sfx(~_cure~); e.animate(~flashandshake~);,,,,,,
Solar Beam_downgraded,Deal [sword]<var:solarbeam> damage. On start|of turn: Solar Beam dmg +1,1,var s = self.getvar(~solarbeam~); attack(s); sfxdamage(target|s);,Whelm,MIN5,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,self.setvar(~solarbeam~[;]0);,,self.setvar(~solarbeam~[;]self.getvar(~solarbeam~)+1); inflictself(~solarbeam~); sfx(~_cure~); e.animate(~flashandshake~);,,,,,,
Trishula,Deal [sword]<triple> damage,1,attack(d*3); sfxdamage(target|d*3);,Plasma Gun,MAX2,,WEAPON,BRIGHTCYAN,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trishula_upgraded,Deal [sword]<triple> damage,1,attack(d*3); sfxdamage(target|d*3);,Plasma Gun,MAX3,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trishula_downgraded,Deal [sword]<double> damage,1,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX2,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tomahawk,Deal [sword]<double> damage,1,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX3,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tomahawk_upgraded,Deal [sword]<double> damage,1,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX4,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Tomahawk_downgraded,Deal [sword]<d6> damage,1,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX3,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Labrys,Deal [sword]<double> damage|[gray](2 uses this turn),2,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX3,,WEAPON,RED,change_power,change_power,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Labrys_upgraded,Deal [sword]<double> damage|[gray](2 uses this turn),2,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX4,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Labrys_downgraded,Deal [sword]<d6> damage|[gray](2 uses this turn),2,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX3,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hand Lens,Triple dice value,1,givedice(d*3);,Magic Dice,MAX2,,WEAPON,GREEN,change_description,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hand Lens_upgraded,Triple dice value,1,givedice(d*3);,Magic Dice,MAX3,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hand Lens_downgraded,Double dice value,1,givedice(d*2);,Magic Dice,MAX2,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nine Iron,Deal [sword]<d6> damage|On 6[;] deal [sword]3 more,2,if(d == 6){ attack(d+3); sfxdamage(target|d+3); }else{ attack(d); sfxdamage(target|d); };,Plasma Gun,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nine Iron_upgraded,Deal [sword]<d6> damage|On even[;] deal [sword]3 more,2,if(d % 2 == 0){ attack(d+3); sfxdamage(target|d+3); }else{ attack(d); sfxdamage(target|d); };,Plasma Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nine Iron_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Divine Blade,[sword]<d6> dmg. If enemy is under|50% hp[;] heal [heal]<d6> hp too,1,attack(d); sfxdamage(target|d); if(target.hp / target.maxhp < 0.5){attackself(-d); sfx(~_heal~);};,Life Leech,MAX4,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Divine Blade_upgraded,[sword]<d6> dmg. If enemy is under|50% hp[;] heal [heal]<d6> hp too,1,attack(d); sfxdamage(target|d); if(target.hp / target.maxhp < 0.5){attackself(-d); sfx(~_heal~);};,Life Leech,MAX5,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Divine Blade_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Life Leech,MAX4,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poisoned Axe,Even: [sword]<double> damage|Odd: [poison]<d6> poison,2,if(d%2 == 0){ attack(d*2); sfxdamage(target|d*2); }else{ inflict(POISON[;]d); sfx(~_poison~); };,Goop Gun,MAX4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poisoned Axe_upgraded,Even: [poison]<d6> poison|Odd: [sword]<double> damage,2,if(d%2 == 1){ attack(d*2); sfxdamage(target|d*2); }else{ inflict(POISON[;]d); sfx(~_poison~); };,Goop Gun,MAX4,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Poisoned Axe_downgraded,Even: [sword]1 damage|Odd: [poison]1 poison,2,if(d%2 == 0){ attack(1); sfxdamage(target|1); }else{ inflict(POISON); sfx(~_poison~); };,Goop Gun,MAX4,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Grappling Cookie,Re-use next item[;] and|it has +1 use this turn,1,inflictself(REEQUIPNEXT); inflictself(FURY); sfx(~_fury~);,Fury,DOUBLES|DOUBLES,,ITEM,GREEN,change_power,change_power,reequipnext,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Grappling Cookie_upgraded,Re-use next item[;] and|it has +1 use this turn,1,inflictself(REEQUIPNEXT); inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Grappling Cookie_downgraded,Re-use next item[;] and|it has +1 use this turn,1,inflictself(REEQUIPNEXT); inflictself(FURY); sfx(~_fury~);,Fury,REQUIRE2|REQUIRE2,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Grappling Cookie?,Re-use next item[;] and|keep the dice you use,1,inflictself(REEQUIPNEXT); inflictself(FURY); sfx(~_fury~);,Fury,DOUBLES|DOUBLES,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Grappling Cookie?_upgraded,Re-use next item[;] and|keep the dice you use,1,inflictself(REEQUIPNEXT); inflictself(FURY); sfx(~_fury~);,Fury,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Grappling Cookie?_downgraded,Re-use next item[;] and|keep the dice you use,1,inflictself(REEQUIPNEXT); inflictself(FURY); sfx(~_fury~);,Fury,REQUIRE2|REQUIRE2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Thump,Deal [sword]<d6> damage[;] twice|if shield is [shield]<d6> or over,1,if(getstatusself(SHIELD) >= d){attack(d); attack(d); sfxdamage(target|d*2); sfx(~_shield~);}else{attack(d); sfxdamage(target|d);};,Plasma Gun,MAX4,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,1,,,,,,,,,,
Thump_upgraded,Deal [sword]<d6> damage[;] twice|if shield is [shield]<d6> or over,1,if(getstatusself(SHIELD) >= d){attack(d); attack(d); sfxdamage(target|d*2); sfx(~_shield~);}else{attack(d); sfxdamage(target|d);};,Plasma Gun,MAX5,,WEAPON,GRAY,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Thump_downgraded,Deal [sword]<d6> damage[;] twice|if shield is [shield]<d6> or over,1,if(getstatusself(SHIELD) >= d){attack(d); attack(d); sfxdamage(target|d*2); sfx(~_shield~);}else{attack(d); sfxdamage(target|d);};,Plasma Gun,MAX2,,WEAPON,GRAY,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Pod Shooter,Deal [sword]4 damage|[gray](Reusable),1,attack(4); sfxdamage(target|4);,Plasma Gun,REQUIRE5,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Pod Shooter_upgraded,Deal [sword]4 damage|[gray](Reusable),1,attack(4); sfxdamage(target|4);,Plasma Gun,MIN5,,WEAPON,RED,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pod Shooter_downgraded,Deal [sword]2 damage|[gray](Reusable),1,attack(2); sfxdamage(target|2);,Plasma Gun,REQUIRE5,,WEAPON,RED,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gavel,Deal [shock]<d6> damage|Shock [shock]2 items,1,attack(d[;]SHOCK); inflict(SHOCK[;]2); sfxdamage(target|d); sfx(~_shock~);,Jackhammer,REQUIRE6,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gavel_upgraded,[shock]<d6> damage[;] shock [shock]2|,1,attack(d[;]SHOCK); inflict(SHOCK[;]2); sfxdamage(target|d); sfx(~_shock~);,Jackhammer,REQUIRE6,,WEAPON,YELLOW,,,,,2,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gavel_downgraded,Shock [shock]2 items,1,inflict(SHOCK[;]2); sfx(~_shock~);,Jackhammer,REQUIRE6,,WEAPON,YELLOW,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spade,Deal [weaken]<d6> damage|Inflict [weaken]2 weaken,1,attack(d[;]WEAKEN); inflict(WEAKEN[;]2); sfxdamage(target|d); sfx(~_weaken~);,Burrower,REQUIRE6,,WEAPON,ORANGE,change_power,change_power,weaken,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spade_upgraded,[weaken]<d6> damage[;] inflict [weaken]2|,1,attack(d[;]WEAKEN); inflict(WEAKEN[;]2); sfxdamage(target|d); sfx(~_weaken~);,Burrower,REQUIRE6,,WEAPON,ORANGE,,,,,2,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spade_downgraded,Inflict [weaken]2 weaken,1,inflict(WEAKEN[;]2); sfx(~_weaken~);,Burrower,REQUIRE6,,WEAPON,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spade?,Inflict [weaken]2 weaken[;] then|deal [weaken]<d6> damage,1,inflict(WEAKEN[;]2); attack(d[;]WEAKEN);  sfxdamage(target|d); sfx(~_weaken~);,Burrower,REQUIRE6,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spade?_upgraded,Inflict [weaken]2[;] then [weaken]<d6> dmg|,1,inflict(WEAKEN[;]2); attack(d[;]WEAKEN);  sfxdamage(target|d); sfx(~_weaken~);,Burrower,REQUIRE6,,WEAPON,ORANGE,,,,,2,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spade?_downgraded,Inflict [weaken]2 weaken,1,inflict(WEAKEN[;]2); sfx(~_weaken~);,Burrower,REQUIRE6,,WEAPON,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tesla Cannon,Shock [shock]2 items|Return the dice,1,inflict(SHOCK[;]2); sfx(~_shock~); givedice(d);,Static Shock,REQUIRE3,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tesla Cannon_upgraded,Shock [shock]3 items|Return the dice,1,inflict(SHOCK[;]3); sfx(~_shock~);  givedice(d);,Static Shock,REQUIRE3,,WEAPON,YELLOW,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tesla Cannon_downgraded,Shock [shock]1 item|Return the dice,1,inflict(SHOCK[;]1); sfx(~_shock~);  givedice(d);,Static Shock,REQUIRE3,,WEAPON,YELLOW,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Seesaw,Halve all your countdowns,1,if(simulation){bonus(-10000);}else{for(eq in self.equipment){ if(eq.countdown > 0 && eq.ready && eq.availablethisturn){ var rem = eq.remainingcountdown - eq.reducecountdownby; var target = rem/2; if(rem-target > 6){eq.remainingcountdown = target+6; rem=target+6;}; givedice(eq.remainingcountdown - target[;]~none~); eq.assigndice(self.dicepool[self.dicepool.length - 1]); }; }; sfx(~_thinghappens~); if(self.stolencard != null){if(self.stolencard.countdown > 0){ var rem = self.stolencard.remainingcountdown - self.stolencard.reducecountdownby; var target = rem/2; if(rem-target > 6){self.stolencard.remainingcountdown = target+6; rem=target+6;}; givedice(rem - target[;]~none~); self.stolencard.assigndice(self.dicepool[self.dicepool.length - 1]);};};};,Accelerate,NORMAL|NORMAL,7,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Seesaw_upgraded,Halve all your countdowns|[gray](Reuseable),1,if(simulation){bonus(-10000);}else{for(eq in self.equipment){ if(eq.countdown > 0 && eq.ready && eq.availablethisturn){ var rem = eq.remainingcountdown - eq.reducecountdownby; var target = rem/2; if(rem-target > 6){eq.remainingcountdown = target+6; rem=target+6;}; givedice(eq.remainingcountdown - target[;]~none~); eq.assigndice(self.dicepool[self.dicepool.length - 1]); }; }; sfx(~_thinghappens~); if(self.stolencard != null){if(self.stolencard.countdown > 0){ var rem = self.stolencard.remainingcountdown - self.stolencard.reducecountdownby; var target = rem/2; if(rem-target > 6){self.stolencard.remainingcountdown = target+6; rem=target+6;}; givedice(rem - target[;]~none~); self.stolencard.assigndice(self.dicepool[self.dicepool.length - 1]);};};};,Accelerate,NORMAL|NORMAL,7,ITEM,YELLOW,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Seesaw_downgraded,Halve all your countdowns,1,if(simulation){bonus(-10000);}else{for(eq in self.equipment){ if(eq.countdown > 0 && eq.ready && eq.availablethisturn){ var rem = eq.remainingcountdown - eq.reducecountdownby; var target = rem/2; if(rem-target > 6){eq.remainingcountdown = target+6; rem=target+6;}; givedice(eq.remainingcountdown - target[;]~none~); eq.assigndice(self.dicepool[self.dicepool.length - 1]); }; }; sfx(~_thinghappens~); if(self.stolencard != null){if(self.stolencard.countdown > 0){ var rem = self.stolencard.remainingcountdown - self.stolencard.reducecountdownby; var target = rem/2; if(rem-target > 6){self.stolencard.remainingcountdown = target+6; rem=target+6;}; givedice(rem - target[;]~none~); self.stolencard.assigndice(self.dicepool[self.dicepool.length - 1]);};};};,Accelerate,NORMAL|NORMAL,11,ITEM,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Metalmorph,Lose [heart]1 hp[;] gain [shield]2 shield|[gray](Reusable),1,pierceattackself(1); inflictself(SHIELD[;]2); sfx(~_drain~); sfx(~_shield~|~~|0.4);,Steel Skin,COUNTDOWN,4,SHIELD,ORANGE,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Metalmorph_upgraded,Lose [heart]1 hp[;] gain [shield]3 shield|[gray](Reusable),1,pierceattackself(1); inflictself(SHIELD[;]3); sfx(~_drain~); sfx(~_shield~|~~|0.4);,Steel Skin,COUNTDOWN,4,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Metalmorph_downgraded,Lose [heart]1 hp[;] gain [shield]1 shield|[gray](Reusable),1,pierceattackself(1); inflictself(SHIELD[;]1); sfx(~_drain~); sfx(~_shield~|~~|0.4);,Steel Skin,COUNTDOWN,4,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shichishito,Deal [sword]7 damage,1,attack(7); sfxdamage(target|7);,Shuriken,MIN3|MIN3,,WEAPON,GREEN,change_requirements,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shichishito_upgraded,Deal [sword]7 damage,1,attack(7); sfxdamage(target|7);,Shuriken,NORMAL|NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shichishito_downgraded,Deal [sword]7 damage,1,attack(7); sfxdamage(target|7);,Shuriken,MIN3|MIN3,7,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nanobots,Gain [shield]<d6> shield|Gain 1 more if at [shield]0 shield,1,if(getstatusself(SHIELD) == 0){ inflictself(SHIELD[;]d + 1); }else{ inflictself(SHIELD[;]d); }; sfx(~_shield~);,Coin Clippers,MAX3,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Nanobots_upgraded,Gain [shield]<d6> shield|Gain double if at [shield]0 shield,1,if(getstatusself(SHIELD) == 0){ inflictself(SHIELD[;]d*2); }else{ inflictself(SHIELD[;]d); }; sfx(~_shield~);,Coin Clippers,MAX3,,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Nanobots_downgraded,Gain [shield]<d6> shield,1,inflictself(SHIELD[;]d); sfx(~_shield~);,Coin Clippers,MAX3,,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Thorium Hammer,Deal [shock]<d6> damage|Burn [fire]1 dice for each|damage over 5 this does,2,var h = target.hp; attack(d[;]SHOCK); sfx(~_shock~); h-=target.hp; sfxdamage(target|d); if(h > 5){ inflict(FIRE[;]h - 5); sfx(~_fire~); };,Ember,MAX5,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Thorium Hammer_upgraded,Deal [shock]<d6> damage|Burn [fire]1 dice for each|damage over 6 this does,2,var h = target.hp; attack(d[;]SHOCK); sfx(~_shock~); h-=target.hp; sfxdamage(target|d); if(h > 6){ inflict(FIRE[;]h - 6); sfx(~_fire~); };,Ember,MAX5|FREE1,,WEAPON,ORANGE,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Thorium Hammer_downgraded,Deal [shock]<d6> damage,2,attack(d[;]SHOCK); sfx(~_shock~); sfxdamage(target|d);,Ember,MAX5,,WEAPON,ORANGE,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Mirror Coating,Reflect [reduce]2 damage back|from each attack,1,inflictself(REDUCE[;]2); inflictself(THORNS[;]2); sfx(~_shield~); sfx(~_thorns~);,Regenerate,COUNTDOWN,14,SHIELD,ORANGE,change_power,change_power,reduce,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Mirror Coating_upgraded,Reflect [reduce]3 damage back|from each attack,1,inflictself(REDUCE[;]3); inflictself(THORNS[;]3); sfx(~_shield~); sfx(~_thorns~);,Regenerate,COUNTDOWN,14,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirror Coating_downgraded,Reflect [reduce]1 damage back|from each attack,1,inflictself(REDUCE[;]1); inflictself(THORNS[;]1); sfx(~_shield~); sfx(~_thorns~);,Regenerate,COUNTDOWN,14,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirror Coating?,Each attack heals [thorns]2 hp|and deals [weaken]2 more dmg,1,inflict(WEAKEN[;]2); inflictself(THORNS[;]2); sfx(~_weaken~); sfx(~_thorns~);,Pillow Fort,COUNTDOWN,14,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Mirror Coating?_upgraded,Each attack heals [thorns]3 hp|and deals [weaken]3 more dmg,1,inflict(WEAKEN[;]3); inflictself(THORNS[;]3); sfx(~_weaken~); sfx(~_thorns~);,Pillow Fort,COUNTDOWN,14,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirror Coating?_downgraded,Each attack heals [thorns]1 hp|and deals [weaken]1 more dmg,1,inflict(WEAKEN[;]1); inflictself(THORNS[;]1); sfx(~_weaken~); sfx(~_thorns~);,Pillow Fort,COUNTDOWN,14,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pursuit,[sword]<d6> dmg[;] +[sword]3 if you|used Pursuit last turn too,1,attack(d); sfxdamage(target|d); self.setvar(~pursuit_next~[;]1); inflictself(~pursuitnext~);,Shuriken,MAX4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,self.setvar(~pursuit_next~|0);,,if(self.getvar(~pursuit_next~) == 1){ self.setvar(~pursuit~[;]1); inflictself(~pursuit~); e.changecolour(~YELLOW~); e.changeslots([~MAX4~|~FREE3~]); }else{e.changecolour(~RED~); e.changeslots([~MAX4~]);};,self.setvar(~pursuit_next~|0);,,,,,,
Pursuit_upgraded,[sword]<d6> dmg[;] +[sword]3 if you|used Pursuit last turn too,1,attack(d); sfxdamage(target|d); self.setvar(~pursuit_next~[;]1); inflictself(~pursuitnext~);,Shuriken,MAX5,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,self.setvar(~pursuit_next~|0);,,if(self.getvar(~pursuit_next~) == 1){ self.setvar(~pursuit~[;]1); inflictself(~pursuit~); e.changecolour(~YELLOW~); e.changeslots([~MAX5~|~FREE3~]); }else{e.changecolour(~RED~); e.changeslots([~MAX5~]);};,self.setvar(~pursuit_next~|0);,,,,,,
Pursuit_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d); self.setvar(~pursuit_next~[;]1); inflictself(~pursuitnext~);,Shuriken,MAX4,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,self.setvar(~pursuit_next~|0);,,if(self.getvar(~pursuit_next~) == 1){ self.setvar(~pursuit~[;]1); inflictself(~pursuit~);}else{e.changecolour(~RED~); e.changeslots([~MAX4~]);};,self.setvar(~pursuit_next~|0);,,,,,,
Binding Spell,Set an enemy dice|to <d6> next turn,1,if(target.dice + target.extradice + target.bonusdice > 0){ inflict(~stash~+d); inflict(~bound~+d); target.bonusdice--; sfx(~_lock~); sfx(~_magic~); }else{target.textparticle(~No effect!~);};,Replicate,NORMAL,,MAGIC,PINK,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Binding Spell_upgraded,Set enemy dice to <d6>|,1,if(target.dice + target.extradice + target.bonusdice > 0){ inflict(~stash~+d); inflict(~bound~+d); target.bonusdice--; sfx(~_lock~); sfx(~_magic~); }else{target.textparticle(~No effect!~);};,Replicate,NORMAL,,MAGIC,PINK,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Binding Spell_downgraded,Set an enemy dice|to <slotdoubles> next turn,1,if(target.dice + target.extradice + target.bonusdice > 0){ inflict(~stash~+d); inflict(~bound~+d); target.bonusdice--; sfx(~_lock~); sfx(~_magic~); }else{target.textparticle(~No effect!~);};,Replicate,DOUBLES|DOUBLES,,MAGIC,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blinding Spell,Blind [blind]all enemy dice,1,inflict(BLIND|ALL); sfx(~_blind~);,Padlock,REQUIRE4,,MAGIC,GRAY,change_power,change_power,blind,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blinding Spell_upgraded,Blind [blind]all enemy dice|Return this dice,1,inflict(BLIND|ALL); sfx(~_blind~); givedice(d);,Padlock,REQUIRE4,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blinding Spell_downgraded,Blind [blind]all enemy dice,1,inflict(BLIND|ALL); sfx(~_blind~);,Padlock,REQUIRE4|REQUIRE4,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blinding Spell?,Inflict [blind]4 turns of blind,1,inflict(BLIND|4); sfx(~_blind~);,Padlock,REQUIRE4,,MAGIC,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blinding Spell?_upgraded,Inflict [blind]4 turns of blind|Return this dice,1,inflict(BLIND|4); sfx(~_blind~); givedice(d);,Padlock,REQUIRE4,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blinding Spell?_downgraded,Inflict [blind]4 turns of blind,1,inflict(BLIND|4); sfx(~_blind~);,Padlock,REQUIRE4|REQUIRE4,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flashlight,Get 2 random extra|dice next turn,1,for(x in 0...2){ inflictself(~stash~+rand([1[;]2[;]3[;]4[;]5[;]6])); }; sfx(~magic_gaindice~); inflictself(~lightstatus~[;]2); var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2);  self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,Magic Lantern,COUNTDOWN,7,MAGIC,YELLOW,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Flashlight_upgraded,Get 3 random extra|dice next turn,1,for(x in 0...3){ inflictself(~stash~+rand([1[;]2[;]3[;]4[;]5[;]6])); }; sfx(~magic_gaindice~); inflictself(~lightstatus~[;]3); var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2);  self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,Magic Lantern,COUNTDOWN,7,MAGIC,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Flashlight_downgraded,Get 1 random extra|dice next turn,1,for(x in 0...1){ inflictself(~stash~+rand([1[;]2[;]3[;]4[;]5[;]6])); }; sfx(~magic_gaindice~); inflictself(~lightstatus~[;]1); var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2);  self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,Magic Lantern,COUNTDOWN,7,MAGIC,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Radar,Get a copy of every|dice stashed for next turn|(currently: <var:stashcount> dice stashed),1,var newdice = []; for(x in 1...7){ var amount = getstatusself(~stash~+x); if(amount > 0){ for(i in 0...amount){newdice.push(x); }; }; }; if(newdice.length > 0){givedice(newdice); sfx(~openchest~);}else{self.textparticle(~No effect!~);};,Magic Lantern,ODD,,MAGIC,RED,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total);,,,,,
Radar_upgraded,Get a copy of every|dice stashed for next turn|(currently: <var:stashcount> dice stashed),1,var newdice = []; for(x in 1...7){ var amount = getstatusself(~stash~+x); if(amount > 0){ for(i in 0...amount){newdice.push(x); }; }; }; if(newdice.length > 0){givedice(newdice); sfx(~openchest~);}else{self.textparticle(~No effect!~);};,Magic Lantern,NORMAL,,MAGIC,RED,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total);,,,,,
Radar_downgraded,Get a copy of every|dice stashed for next turn|(currently: <var:stashcount> dice stashed),1,var newdice = []; for(x in 1...7){ var amount = getstatusself(~stash~+x); if(amount > 0){ for(i in 0...amount){newdice.push(x); }; }; }; if(newdice.length > 0){givedice(newdice); sfx(~openchest~);}else{self.textparticle(~No effect!~);};,Magic Lantern,REQUIRE3,,MAGIC,RED,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total);,,,,,
Chromatic Cutlass,Deal [sword]2 damage for each|different colour of item|you have equipped (<var:doubleitemcolour>),2,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; attack(dmg); sfxdamage(target|dmg);,Shuriken,ODD,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; self.setvar(~doubleitemcolour~|dmg);,,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; self.setvar(~doubleitemcolour~|dmg);,,,,,
Chromatic Cutlass_upgraded,Deal [sword]2 damage for each|different colour of item|you have equipped (<var:doubleitemcolour>),2,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; attack(dmg); sfxdamage(target|dmg);,Shuriken,ODD,,WEAPON,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; self.setvar(~doubleitemcolour~|dmg);,,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; self.setvar(~doubleitemcolour~|dmg);,,,,,
Chromatic Cutlass_downgraded,Deal [sword]2 damage for each|different colour of item|you have equipped (<var:doubleitemcolour>),2,var amount = 1; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; attack(dmg); sfxdamage(target|dmg);,Shuriken,ODD|ODD,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; self.setvar(~doubleitemcolour~|dmg);,,var amount = 2; var clist = []; var dmg = 0; for(eq in self.equipment){ if(eq.skillcard != ~~){ break; }; if(clist.indexOf(eq.equipmentcol) == -1){ clist.push(eq.equipmentcol); dmg +=amount; }; }; self.setvar(~doubleitemcolour~|dmg);,,,,,
Lamppost,Deal [sword]<d6> damage. On 5[;]|get a free 6 next turn,2,attack(d); sfxdamage(target|d); if(d == 5){ inflictself(~stash6~); inflictself(~lamppost6~); sfx(~magic_gaindice~); };,Magic Lantern,MAX5,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Lamppost_upgraded,Deal [sword]<d6> damage. On odd[;]|get a free 6 next turn,2,attack(d); sfxdamage(target|d); if(d%2 == 1){ inflictself(~stash6~); inflictself(~lamppost6~); sfx(~magic_gaindice~); };,Magic Lantern,MAX5,,WEAPON,YELLOW,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Lamppost_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Magic Lantern,MAX5,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Claymore,If you have at least|<d6> other dice[;] then|deal [sword]<double> damage,1,var total = 0; for(x in self.dicepool){if(x.available()){total+=1;};}; if(total >= d){attack(d*2); sfxdamage(target|d*2);}else{target.textparticle(~No effect!~);};,Shuriken,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Claymore_upgraded,If you have at least|<d6> other dice[;] then|deal [sword]<triple> damage,1,var total = 0; for(x in self.dicepool){if(x.available()){total+=1;};}; if(total >= d){attack(d*3); sfxdamage(target|d*3);}else{target.textparticle(~No effect!~);};,Shuriken,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Claymore_downgraded,If you have at least|<d6> other dice[;] then|deal [sword]<d6> damage,1,var total = 0; for(x in self.dicepool){if(x.available()){total+=1;};}; if(total >= d){attack(d); sfxdamage(target|d);}else{target.textparticle(~No effect!~);};,Shuriken,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Mitosis,Get 3 copies of a dice,1,givedice([d[;]d[;]d]);,Replicate,DOUBLES|DOUBLES,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mitosis_upgraded,Get 4 copies of a dice,1,givedice([d[;]d[;]d[;]d]);,Replicate,DOUBLES|DOUBLES,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mitosis_downgraded,Get 3 copies of a dice,1,givedice([d[;]d[;]d]);,Replicate,REQUIRE1|REQUIRE1,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frozen Whip,Even: Deal [fire]<d6> damage|Odd: Deal [ice]<d6> damage|5 or 6: [ice]Freeze or [fire]burn,2,if(d%2 == 0){ attack(d[;]FIRE); sfx(~_fire~); }else{ attack(d[;]ICE); sfx(~_ice~); }; if(d == 5){ inflict(ICE); }; if(d == 6){ inflict(FIRE); };,Ember,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frozen Whip_upgraded,Even: [fire]<d6> dmg + [fire]burn|Odd: [ice]<d6> dmg + [ice]freeze,2,if(d%2 == 0){ attack(d[;]FIRE); sfx(~_fire~); inflict(FIRE); }else{ attack(d[;]ICE); sfx(~_ice~); inflict(ICE); };,Ember,NORMAL,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frozen Whip_downgraded,Even: Deal [fire]<d6> damage|Odd: Deal [ice]<d6> damage,2,if(d%2 == 0){ attack(d[;]FIRE); sfx(~_fire~); }else{ attack(d[;]ICE); sfx(~_ice~); };,Ember,NORMAL,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gunkblade,Deal [sword]<d6> damage. If the|enemy has no [poison]poison[;]|also inflict [poison]<d6> poison,2,attack(d); sfxdamage(target|d); if(getstatus(POISON) == 0){ inflict(POISON[;]d); sfx(~_poison~); };,Goop Gun,MAX4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gunkblade_upgraded,Deal [sword]<d6> damage. If the|enemy has no [poison]poison[;]|also inflict [poison]<d6> poison,2,attack(d); sfxdamage(target|d); if(getstatus(POISON) == 0){ inflict(POISON[;]d); sfx(~_poison~); };,Goop Gun,MAX5,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Gunkblade_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Goop Gun,MAX4,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Overblaster,Deal [fire]2 damage|Return the dice[;] but burn it|[gray](Reusable),2,attack(2[;]FIRE); sfx(~_fire~); inflictself(FIRE); givedice(d);,Ember,NORMAL,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Overblaster_upgraded,Deal [fire]3 damage|Return the dice[;] but burn it|[gray](Reusable),2,attack(3[;]FIRE); sfx(~_fire~); inflictself(FIRE); givedice(d);,Ember,NORMAL,,WEAPON,RED,,,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Overblaster_downgraded,Deal [fire]2 damage|Return the dice[;] but burn it,2,attack(2[;]FIRE); sfx(~_fire~); inflictself(FIRE); givedice(d);,Ember,NORMAL,,WEAPON,RED,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Sapping Spores,Deal [sword]<double> damage|Inflict [poison]<d6> poison|Lose [heart]<d6> hp and max hp,2,attack(d*2); inflict(POISON[;]d); self.maxhp = self.maxhp - d; self.hp = self.hp - d; if(self.hp < 0){ self.hp = 1; }; sfx(~_poison~); sfx(~_drain~);,Life Leech,MAX4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sapping Spores_upgraded,Deal [sword]<double> damage|Inflict [poison]<d6> poison|Lose [heart]<d6> hp and max hp,2,attack(d*2); inflict(POISON[;]d); self.maxhp = self.maxhp - d; sfx(~_poison~); sfx(~_drain~);,Life Leech,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sapping Spores_downgraded,Deal [sword]<d6> damage|Inflict [poison]<d6> poison|Lose [heart]<d6> hp and max hp,2,attack(d[;]POISON); inflict(POISON[;]d); self.maxhp = self.maxhp - d; sfx(~_poison~); sfx(~_drain~);,Life Leech,MAX4,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Heat Vent,Reduce CPU counter by 2|,1,adjustrobotcounter(-2); sfx(~_ice~|~~|0.05); /*make the ice sound effect when it gets reduced*/,,DOUBLES|DOUBLES,,ITEM,BRIGHTCYAN,change_power,change_power,,,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Heat Vent_upgraded,Reduce CPU counter by <d6>|,1,adjustrobotcounter(-d); sfx(~_ice~|~~|d/40); /*make the ice sound effect when it gets reduced*/,,DOUBLES|DOUBLES,,ITEM,BRIGHTCYAN,,,,,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Heat Vent_downgraded,Reduce CPU counter by 1|,1,adjustrobotcounter(-1);  sfx(~_ice~|~~|0.025);,,DOUBLES|DOUBLES,,ITEM,BRIGHTCYAN,,,,,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Bottleneck,Lose [heart]health equal to half|your CPU counter (<var:halfcpucounter>)|Set CPU counter to 0,1,pierceattackself(self.getvar(~halfcpucounter~)); adjustrobotcounter(-self.roll_total); sfx(~_drain~);,,ODD,,WEAPON,RED,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~halfcpucounter~|0);,,if(self.roll_total % 2 == 0){self.setvar(~halfcpucounter~|self.roll_total/2);}else{self.setvar(~halfcpucounter~|(self.roll_total-1)/2);};,,,,,
Bottleneck_upgraded,Lose [heart]health equal to half|your CPU counter (<var:halfcpucounter>)|Set CPU counter to 0,1,pierceattackself(self.getvar(~halfcpucounter~)); adjustrobotcounter(-self.roll_total); sfx(~_drain~);,,NORMAL,,WEAPON,RED,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~halfcpucounter~|0);,,if(self.roll_total % 2 == 0){self.setvar(~halfcpucounter~|self.roll_total/2);}else{self.setvar(~halfcpucounter~|(self.roll_total-1)/2);};,,,,,
Bottleneck_downgraded,Lose [heart]health equal to half|your CPU counter (<var:halfcpucounter>)|Reduce CPU counter by half,1,pierceattackself(self.getvar(~halfcpucounter~)); adjustrobotcounter(-self.roll_total); sfx(~_drain~);,,ODD,,WEAPON,RED,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~halfcpucounter~|0);,,if(self.roll_total % 2 == 0){self.setvar(~halfcpucounter~|self.roll_total/2);}else{self.setvar(~halfcpucounter~|(self.roll_total-1)/2);};,,,,,
Shifting Sword,Deal [sword]<d6> damage|Gains a random|effect each turn,2,attack(d); sfxdamage(target|d); var stats = [FIRE|ICE|SHOCK|WEAKEN]; for(x in [1]){var stat = e.getvar(~status~+x); trace(stat); if(stat == 5){attackself(-2); sfx(~_heal~|~~|0.2);}else if(stat == 6){inflictself(SHIELD|3); sfx(~_shield~|~~|0.2);}else if(stat == 4){inflict(POISON|2); sfx(~_poison~|~~|0.2);}else{inflict(stats[stat]); sfx(~_~ + stats[stat].toLowerCase()|~~|0.2);};};,Catapult,MAX5,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+~Gains a random~+e.fulldescription.substr(23[;]1)+~effect each turn~; e.setvar(~status1~|0); e.equipmentcol = 0;,,e.animate(~flashandshake~); sfx(~openchest~); screenshake(); var descs = [~Burn [fire]1 dice~[;]~Inflict [ice]1 freeze~[;]~Shock [shock]1 item~[;]~Inflict [weaken]1 weaken~[;]~Inflict [poison]2 poison~[;]~Restore [heal]2 health~[;]~Gain [shield]3 shield~]; var r = rand([0[;]1[;]2[;]3[;]4[;]5[;]6]); var cols = [2[;]1[;]4[;]9[;]5[;]3[;]9]; e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+descs[r]; e.setvar(~status1~|r); e.equipmentcol = cols[r];,,,e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+~Gains a random~+e.fulldescription.substr(23[;]1)+~effect each turn~; e.setvar(~status1~|0); e.equipmentcol = 0;,,,
Shifting Sword_upgraded,Deal [sword]<d6> damage|Gains 2 random|effects each turn,2,attack(d); sfxdamage(target|d); var stats = [FIRE|ICE|SHOCK|WEAKEN]; for(x in [1|2]){var stat = e.getvar(~status~+x); trace(stat); if(stat == 5){attackself(-2); sfx(~_heal~|~~|0.2*x);}else if(stat == 6){inflictself(SHIELD|3); sfx(~_shield~|~~|0.2*x);}else if(stat == 4){inflict(POISON|2); sfx(~_poison~|~~|0.2*x);}else{inflict(stats[stat]); sfx(~_~ + stats[stat].toLowerCase()|~~|0.2*x);};};,Catapult,MAX5,,WEAPON,GRAY,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+~Gains 2 random~+e.fulldescription.substr(23[;]1)+~effects each turn~; e.setvar(~status1~|~~); e.setvar(~status2~|~~); e.equipmentcol = 0;,,e.animate(~flashandshake~); sfx(~openchest~); screenshake();  var descs = [~Burn [fire]1 dice~[;]~Inflict [ice]1 freeze~[;]~Shock [shock]1 item~[;]~Inflict [weaken]1 weaken~[;]~Inflict [poison]2 poison~[;]~Restore [heal]2 health~[;]~Gain [shield]3 shield~]; var r = rand([0[;]1[;]2[;]3[;]4[;]5[;]6]); var r2 = r; while(r2 == r){ r2=rand([0[;]1[;]2[;]3[;]4[;]5[;]6]); } var cols = [2[;]1[;]4[;]9[;]5[;]3[;]9]; e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+descs[r]+e.fulldescription.substr(23[;]1)+descs[r2]; e.setvar(~status1~|r); e.setvar(~status2~|r2); e.equipmentcol = cols[r];,,,e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+~Gains 2 random~+e.fulldescription.substr(23[;]1)+~effects each turn~; e.setvar(~status1~|~~); e.setvar(~status2~|~~); e.equipmentcol = 0;,,,
Shifting Sword_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Catapult,MAX5,,WEAPON,GRAY,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+~Gains a random~+e.fulldescription.substr(23[;]1)+~effect each turn~; e.setvar(~status1~|~~); e.equipmentcol = 0;,,,,,e.fulldescription = ~Deal [sword]<d6> damage~+e.fulldescription.substr(23[;]1)+~Gains a random~+e.fulldescription.substr(23[;]1)+~effect each turn~; e.setvar(~status1~|~~); e.equipmentcol = 0;,,,
Blessed Bat of Bashing,[sword]<d6> dmg. At the end of|your turn[;] heal [heal]1 hp,1,attack(d); sfxdamage(target|d);,Deep Breath,MAX4,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,e.animate(~flashandshake~); attackself(-1); sfx(~_heal~);,,,
Blessed Bat of Bashing_upgraded,[sword]<d6> dmg. At the end of|your turn[;] heal [heal]2 hp,1,attack(d); sfxdamage(target|d);,Deep Breath,MAX4,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,e.animate(~flashandshake~); attackself(-2); sfx(~_heal~);,,,
Blessed Bat of Bashing_downgraded,[sword]1 dmg. At the end of|your turn[;] heal [heal]1 hp,1,attack(1); sfxdamage(target|d);,Deep Breath,MAX4,,WEAPON,YELLOW,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,attackself(-1); sfx(~_heal~);,,,
Firey Firesword of Fire,Deal [fire]<double> damage|While equipped[;] [fire]ALL of|your dice are burning,2,attack(d*2[;]FIRE); sfx(~_fire~);,Ember,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,inflictself(FIRE[;]ALL); sfx(~_fire~);,,,,,,,
Firey Firesword of Fire_upgraded,Deal [fire]<double> damage|While equipped[;] [fire]ALL of|your dice are burning,2,attack(d*2[;]FIRE); sfx(~_fire~);,Ember,NORMAL|FREE1,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,inflictself(FIRE[;]ALL); sfx(~_fire~);,,,,,,,
Firey Firesword of Fire_downgraded,Deal [fire]<double> damage|While equipped[;] [fire]ALL of|your dice are burning,2,attack(2*d[;]FIRE); sfx(~_fire~);,Ember,MAX3,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,inflictself(FIRE[;]ALL); sfx(~_fire~);,,,,,,,
Soul Stealer,Drain [heart]<d6> health|Does up to double damage|the lower health you are,2,var x = (1 * (1-(self.hp / self.maxhp)))+1; drain(d*x); sfx(~_drain~); sfx(~_cure~);,Life Leech,MAX3,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Soul Stealer_upgraded,Drain [heart]<d6> health|Does up to triple damage|the lower health you are,2,var x = (2 * (1-(self.hp / self.maxhp)))+1; drain(d*x); sfx(~_drain~); sfx(~_cure~);,Life Leech,MAX3,,WEAPON,RED,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Soul Stealer_downgraded,Drain [heart]<d6> health,2,drain(d); sfx(~_drain~); sfx(~_cure~);,Life Leech,MAX3,,WEAPON,RED,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Permafrost,[ice]<double> damage. Next turn[;]|you receive [ice]<d6> freeze,2,attack(d*2[;]ICE); jinx(~Permafrost~|~receive [ice]%VAR% freeze~|~Receive [ice]%VAR% freeze~|~inflict(ICE|%VAR%); sfx(\~_ice\~);~|self|self|1|d); sfx(~_ice~);,Arctic Storm,MAX5,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Permafrost_upgraded,[ice]<double> damage. Next turn[;]|you receive [ice]<d6> freeze,2,attack(d*2[;]ICE); jinx(~Permafrost~|~receive [ice]%VAR% freeze~|~Receive [ice]%VAR% freeze~|~inflict(ICE|%VAR%); sfx(\~_ice\~);~|self|self|1|d); sfx(~_ice~);,Arctic Storm,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Permafrost_downgraded,[ice]<d6> damage. Next turn[;]|you receive [ice]<d6> freeze,2,attack(d*2[;]ICE); jinx(~Permafrost~|~receive [ice]%VAR% freeze~|~Receive [ice]%VAR% freeze~|~inflict(ICE|%VAR%); sfx(\~_ice\~);~|self|self|1|d); sfx(~_ice~);,Arctic Storm,MAX5,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Xiphos,[sword]<d6>[;] enemy gets [thorns]1|,1,attack(d); sfxdamage(target|d); inflict(THORNS); sfx(~_thorns~|~~|0.2);,Bubble Gun,MAX3|FREE2,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Xiphos_upgraded,[sword]<d6>[;] enemy gets [thorns]1|,1,attack(d); sfxdamage(target|d); inflict(THORNS); sfx(~_thorns~|~~|0.2);,Bubble Gun,MAX3|FREE3,,WEAPON,RED,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Xiphos_downgraded,[sword]<d6>[;] enemy gets [thorns]1|,1,attack(d); sfxdamage(target|d); inflict(THORNS); sfx(~_thorns~|~~|0.2);,Bubble Gun,MAX3,,WEAPON,RED,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiked Sword,Deal [sword]<d6> damage|Gain [thorns]1 thorns,2,attack(d); sfxdamage(target|d); inflictself(THORNS); sfx(~_thorns~);,Pinprick,MAX4,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiked Sword_upgraded,Deal [sword]<d6> damage|Gain half of [thorns]<d6> thorns,2,attack(d); sfxdamage(target|d); inflictself(THORNS[;]d/2); sfx(~_thorns~);,Pinprick,MAX4,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiked Sword_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Pinprick,MAX4,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ferrosynthesis,Gain [shield]1 per [heart]3 missing|health you have ([shield]<var:thirdhealthcount>[]),1,inflictself(SHIELD|self.getvar(~thirdhealthcount~)); sfx(~_shield~);,Barricade,COUNTDOWN,6,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,self.setvar(~fifthhealthcount~[;]0); self.setvar(~thirdhealthcount~[;]0); self.setvar(~halfhealthcount~[;]0);,,self.setvar(~fifthhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%5)/5); self.setvar(~thirdhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%3)/3); self.setvar(~halfhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%2)/2);,,self.setvar(~fifthhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%5)/5); self.setvar(~thirdhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%3)/3); self.setvar(~halfhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%2)/2);,,,,,
Ferrosynthesis_upgraded,Gain [shield]1 per [heart]2 missing|health you have ([shield]<var:halfhealthcount>[]),1,inflictself(SHIELD|self.getvar(~halfhealthcount~)); sfx(~_shield~);,Barricade,COUNTDOWN,6,SHIELD,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,self.setvar(~fifthhealthcount~[;]0); self.setvar(~thirdhealthcount~[;]0); self.setvar(~halfhealthcount~[;]0);,,self.setvar(~fifthhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%5)/5); self.setvar(~thirdhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%3)/3); self.setvar(~halfhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%2)/2);,,self.setvar(~fifthhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%5)/5); self.setvar(~thirdhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%3)/3); self.setvar(~halfhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%2)/2);,,,,,
Ferrosynthesis_downgraded,Gain [shield]1 per [heart]5 missing|health you have ([shield]<var:fifthhealthcount>[]),1,inflictself(SHIELD|self.getvar(~fifthhealthcount~)); sfx(~_shield~);,Barricade,COUNTDOWN,6,SHIELD,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,self.setvar(~fifthhealthcount~[;]0); self.setvar(~thirdhealthcount~[;]0); self.setvar(~halfhealthcount~[;]0);,,self.setvar(~fifthhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%5)/5); self.setvar(~thirdhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%3)/3); self.setvar(~halfhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%2)/2);,,self.setvar(~fifthhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%5)/5); self.setvar(~thirdhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%3)/3); self.setvar(~halfhealthcount~|(self.maxhp - self.hp - (self.maxhp - self.hp)%2)/2);,,,,,
Ratula,Flip a dice upside down|Inflict [poison]poison equal|to the new value,2,givedice(7-d); inflict(POISON[;]7-d); sfx(~_poison~);,Goop Gun,MIN4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ratula_upgraded,Flip a dice upside down|Inflict [poison]poison equal|to the new value,2,givedice(7-d); inflict(POISON[;]7-d); sfx(~_poison~);,Goop Gun,MIN3,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ratula_downgraded,Flip a dice upside down|Inflict [poison]1 poison,2,givedice(7-d); inflict(POISON[;]7-d); sfx(~_poison~);,Goop Gun,MIN4,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Splat,Deal [sword]3 damage|Get a new dice,1,attack(3); sfxdamage(target|3); givedice();,Bubble Gun,COUNTDOWN,7,WEAPON,RED,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Splat_upgraded,Deal [sword]3 damage|Get a high dice (4-6),1,attack(3); sfxdamage(target|3); givedice(rand([4|5|6]));,Bubble Gun,COUNTDOWN,7,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Splat_downgraded,Deal [sword]3 damage,1,attack(3); sfxdamage(target|3); ,Bubble Gun,COUNTDOWN,7,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
King Rat,Inflict [poison]10 poison,1,inflict(POISON[;]10); sfx(~_poison~);,Goop Gun,COUNTDOWN,30,WEAPON,PURPLE,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
King Rat_upgraded,Inflict [poison]13 poison,1,inflict(POISON[;]13); sfx(~_poison~);,Goop Gun,COUNTDOWN,30,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
King Rat_downgraded,Inflict [poison]5 poison,1,inflict(POISON[;]5); sfx(~_poison~);,Goop Gun,COUNTDOWN,30,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Doppelice,Double the enemy's|[ice]freeze,1,inflict(ICE[;]getstatus(ICE)); sfx(~_ice~);,Refrigerator,COUNTDOWN,6,MAGIC,BRIGHTCYAN,change_poison,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Doppelice_upgraded,Triple the enemy's|[ice]freeze,1,inflict(ICE[;]getstatus(ICE)*2); sfx(~_ice~);,Refrigerator,COUNTDOWN,6,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Doppelice_downgraded,Freeze [ice]1 dice,1,inflict(ICE[;]1); sfx(~_ice~);,Refrigerator,COUNTDOWN,6,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Mirror,[]+1 dice this fight,1,self.extradice++; sfx(~magic_gaindice~);,Infinity Mirror,COUNTDOWN,9,MAGIC,PURPLE,change_poison,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Mirror_upgraded,[]+1 dice this fight[;] get an|extra dice this turn,1,self.extradice++; sfx(~magic_gaindice~); givedice();,Infinity Mirror,COUNTDOWN,9,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Mirror_downgraded,No effect,1,,Infinity Mirror,COUNTDOWN,9,MAGIC,PURPLE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Armor,Reduce [reduce]1 damage|from each attack,1,inflictself(REDUCE); sfx(~_shield~);,Protection,COUNTDOWN,3,MAGIC,ORANGE,change_poison,change_power,reduce,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Armor_upgraded,Reduce dmg taken by [reduce]1|,1,inflictself(REDUCE); sfx(~_shield~);,Protection,COUNTDOWN,3,MAGIC,ORANGE,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Armor_downgraded,No effect,1,,Protection,COUNTDOWN,3,MAGIC,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Armor?,Block [reduce]1 status effect,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,COUNTDOWN,3,MAGIC,ORANGE,change_poison,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Armor?_upgraded,Block [reduce]1 status effect|,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,COUNTDOWN,3,MAGIC,ORANGE,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Armor?_downgraded,No effect,1,,Pillow Fort,COUNTDOWN,3,MAGIC,ORANGE,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Spatula,Flip all your dice|upside down,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll((7-mydice.basevalue)[;] self.screenposition()[;] c * 0.05); c++; }; }; sfx(~_thinghappens~);,Megaflip,EVEN,,MAGIC,PINK,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Spatula_upgraded,Flip all your dice|upside down,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll((7-mydice.basevalue)[;] self.screenposition()[;] c * 0.05); c++; }; }; sfx(~_thinghappens~);,Megaflip,NORMAL,,MAGIC,PINK,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Spatula_downgraded,Flip all your dice|upside down,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll((7-mydice.basevalue)[;] self.screenposition()[;] c * 0.05); c++; }; }; sfx(~_thinghappens~);,Megaflip,REQUIRE2,,MAGIC,PINK,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Sneeze,Split all your dice in two|(doesn't split ones),1,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } for(mydice in dicelist) { if(mydice.basevalue > 1){ mydice.removedice(self.screenposition()); givedice(split(mydice.basevalue)); }; };,Megaflip,COUNTDOWN,4,MAGIC,PURPLE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Sneeze_upgraded,Split all your dice evenly in 2|(still doesn't split ones),1,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } for(mydice in dicelist) { d = mydice.basevalue; if(d > 1){ mydice.removedice(self.screenposition()); givedice([(d+1)/2[;]d/2]); }; };,Megaflip,COUNTDOWN,4,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Sneeze_downgraded,Split a random dice in two|(also doesn't split ones),1,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue > 1){ dicelist.push(mydice); } } var randdice = rand(dicelist); randdice.removedice(self.screenposition()); givedice(split(randdice.basevalue)); };,Megaflip,COUNTDOWN,4,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Crowpick,Split a dice in two|Reduce all countdowns|by the lower number,1,var s = split(d); if(s[0] > s[1]){ boostcountdowns(s[1]); }else{ boostcountdowns(s[0]); }; givedice(s);,Megaflip,MIN2,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crowpick_upgraded,Split a dice in two|Reduce all countdowns|by the higher number,1,var s = split(d); if(s[0] > s[1]){ boostcountdowns(s[0]); }else{ boostcountdowns(s[1]); }; givedice(s);,Megaflip,MIN2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crowpick_downgraded,Split a dice in two,1,givedice(split(d));,Megaflip,MIN2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Twotool,Split a dice in two|Reduce countdowns by 2,2,givedice(split(d)); boostcountdowns(2);,Magic Lockpick,MIN2,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Twotool_upgraded,Split a dice in two|Reduce countdowns by 2|,2,givedice(split(d)); boostcountdowns(2);,Magic Lockpick,MIN2,,ITEM,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Twotool_downgraded,Reduce countdowns by 2,2,boostcountdowns(2);,Magic Lockpick,MIN2,,ITEM,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiked Hilt,Deal [sword]<d6> damage|On 1[;] gain [thorns]<d6> thorns,2,attack(d); sfxdamage(target|d); if(d == 1){ inflictself(THORNS[;]d); sfx(~_thorns~); };,Pinprick,NORMAL,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiked Hilt_upgraded,Deal [sword]<d6> damage. On 1|or 2[;] gain [thorns]<d6> thorns,2,attack(d); sfxdamage(target|d); if(d <= 2){ inflictself(THORNS[;]d); sfx(~_thorns~); };,Pinprick,NORMAL,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiked Hilt_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Pinprick,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Caltrops,Gain [thorns]1 thorns for every|[shield]3 shield you have,1,inflictself(THORNS[;]getstatusself(SHIELD)/3); sfx(~_thorns~);,Pinprick,COUNTDOWN,10,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Caltrops_upgraded,Gain [thorns]1 thorns for every|[shield]2 shield you have,1,inflictself(THORNS[;]getstatusself(SHIELD)/2); sfx(~_thorns~);,Pinprick,COUNTDOWN,10,SHIELD,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Caltrops_downgraded,Gain [thorns]1 thorns for every|[shield]10 shield you have,1,inflictself(THORNS[;]getstatusself(SHIELD)/10); sfx(~_thorns~);,Pinprick,COUNTDOWN,10,SHIELD,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Fourns,Gain [thorns]4 thorns,2,inflictself(THORNS[;]4); sfx(~_thorns~);,Pinprick,REQUIRE4,,SHIELD,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fourns_upgraded,Gain [thorns]4 thorns|[gray](4 uses this turn),2,inflictself(THORNS[;]4); sfx(~_thorns~);,Pinprick,REQUIRE4,,SHIELD,GREEN,,,,,4,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fourns_downgraded,Gain [thorns]4 thorns,2,inflictself(THORNS[;]4); sfx(~_thorns~);,Pinprick,REQUIRE4|REQUIRE4|REQUIRE4|REQUIRE4,,SHIELD,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bramble,Gain [thorns]<d6> thorns,1,inflictself(THORNS|d); sfx(~_thorns~);,Pinprick,MAX2,,SHIELD,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bramble_upgraded,Gain [thorns]<d6> thorns,1,inflictself(THORNS|d); sfx(~_thorns~);,Pinprick,MAX3,,SHIELD,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bramble_downgraded,Gain [thorns]<d6> thorns,1,inflictself(THORNS|d); sfx(~_thorns~);,Pinprick,REQUIRE1,,SHIELD,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quadrahedron,1: [reduce]1 reduce; 2: [thorns]2 thorns|3: [heal]3 heal; 4: [shield]4 shield,1,var v = actualdice[0].basevalue; if(v == 1){ inflictself(REDUCE[;]d); sfx(~_shield~); }else if(v == 2){ inflictself(THORNS[;]d); sfx(~_thorns~); }else if(v == 3){ attackself(-d); sfx(~_heal~); }else if(v == 4){ inflictself(SHIELD[;]4); sfx(~_shield~); };,Regenerate,MAX4,,MAGIC,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quadrahedron_upgraded,1: [reduce]2 reduce; 2: [thorns]3 thorns|3: [heal]4 heal; 4: [shield]5 shield,1,var v = actualdice[0].basevalue; if(v == 1){ inflictself(REDUCE[;]d); sfx(~_shield~); }else if(v == 2){ inflictself(THORNS[;]d); sfx(~_thorns~); }else if(v == 3){ attackself(-d); sfx(~_heal~); }else if(v == 4){ inflictself(SHIELD[;]4); sfx(~_shield~); };,Regenerate,MAX4,,MAGIC,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Quadrahedron_downgraded,1: [reduce]1 reduce; 2: [thorns]1 thorns|3: [heal]1 heal; 4: [shield]1 shield,1,var v = actualdice[0].basevalue; if(v == 1){ inflictself(REDUCE); sfx(~_shield~); }else if(v == 2){ inflictself(THORNS); sfx(~_thorns~); }else if(v == 3){ attackself(-1); sfx(~_heal~); }else if(v == 4){ inflictself(SHIELD); sfx(~_shield~); };,Regenerate,MAX4,,MAGIC,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Thistle Tea,Restore [heal]4 health|Gain [thorns]2 thorns,1,attackself(-4); inflictself(THORNS[;]2); sfx(~_heal~|~~|0.2); sfx(~_thorns~);,Regenerate,COUNTDOWN,12,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Thistle Tea_upgraded,Restore [heal]5 health|Gain [thorns]3 thorns,1,attackself(-5); inflictself(THORNS[;]3); sfx(~_heal~|~~|0.2); sfx(~_thorns~);,Regenerate,COUNTDOWN,12,MAGIC,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Thistle Tea_downgraded,Restore [heal]2 health|Gain [thorns]1 thorns,1,attackself(-2); inflictself(THORNS[;]1); sfx(~_heal~|~~|0.2); sfx(~_thorns~);,Regenerate,COUNTDOWN,12,MAGIC,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Promotion,1/2/3: Dice value +3|4/5/6: Dice value - 3|[gray](2 uses this turn),2,if(d>3){ givedice(d-3); } else { givedice(d+3); }; sfx(~useitem~);,Magic Dice,NORMAL,,ITEM,GRAY,change_power,change_power,,,2,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Promotion_upgraded,1/2/3: Dice value +3|4/5/6: Dice value - 3|[gray](2 uses this turn),2,if(d>3){ givedice(d-3); } else { givedice(d+3); }; sfx(~useitem~);,Magic Dice,NORMAL,,ITEM,GRAY,,,,,2,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Promotion_downgraded,1/2/3: Dice value +3|4/5/6: Dice value - 3|[gray](2 uses this turn),2,if(d>3){ givedice(d-3); } else { givedice(d+3); }; sfx(~useitem~);,Magic Dice,NORMAL,,ITEM,GRAY,,,,,2,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Partisan,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX3|MIN4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Partisan_upgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX4|MIN3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Partisan_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX2|MIN5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shrapnel,Roll two [fire]burning[] dice|[gray](Reusable),1,var amount = 2; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~fire~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,RED,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Shrapnel_upgraded,Roll three [fire]burning[] dice|[gray](Reusable),1,var amount = 3; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~fire~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,RED,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shrapnel_downgraded,Roll a [fire]burning[] dice|[gray](Reusable),1,var amount = 1; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~fire~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,RED,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Boulder,Deal [sword]20 damage|Countdown is reduced by|3 whenever you use an item,2,attack(20); sfxdamage(target|20);,Catapult,COUNTDOWN,40,WEAPON,ORANGE,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Boulder_upgraded,Deal [sword]20 damage|Countdown is reduced by|5 whenever you use an item,2,attack(20); sfxdamage(target|20);,Catapult,COUNTDOWN,40,WEAPON,ORANGE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Boulder_downgraded,Deal [sword]20 damage|,2,attack(20); sfxdamage(target|20);,Catapult,COUNTDOWN,40,WEAPON,ORANGE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Balisong@temp,Deal [sword]1 damage[;] return|the dice[;] change slots|[gray](Reusable),2,self.textparticle(~Something went wrong~);,,REQUIRE1,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,if(turn == 1){giveequipment(~Balisong~|false|false);};,,,,,,,
Balisong@temp_upgraded,Deal [sword]2 damage[;] return|the dice[;] change slots|[gray](Reusable),2,self.textparticle(~Something went wrong~);,,REQUIRE1,,WEAPON,RED,,,,none,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Balisong@temp_downgraded,Deal [sword]1 damage|Return the dice,2,self.textparticle(~Something went wrong~);,,REQUIRE1,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Balisong,Deal [sword]1 damage[;] return|the dice[;] change slots|[gray](Reusable),2,attack(1); sfxdamage(target|1); if(actualdice.length == 1){givedice(d); e.changeslots([~REQUIRE~+d]);}else{givedice([actualdice[0].basevalue|actualdice[1].basevalue]); e.changeslots([~REQUIRE~+actualdice[0].basevalue|~REQUIRE~+actualdice[1].basevalue]);};,,NORMAL,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Balisong@temp~|false|false~);,e.changeslots([~REQUIRE1~]);,,,,,,,
Balisong_upgraded,Deal [sword]2 damage[;] return|the dice[;] change slots|[gray](Reusable),2,attack(2); sfxdamage(target|1); self.setvar(~change~[;]1); if(actualdice.length == 1){givedice(d);}else{givedice([actualdice[0].basevalue|actualdice[1].basevalue]);};,,NORMAL,,WEAPON,RED,,,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Balisong_downgraded,Deal [sword]1 damage|Return the dice,2,attack(1); sfxdamage(target|1); givedice(d);,,NORMAL,,WEAPON,RED,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Accumulator,<d6> is less than CPU: [sword]<d6>|<d6> equals your CPU: [shield]<d6>|<d6> is more than CPU: [heal]<d6>,1,if(d < self.roll_total ){attack(d); sfxdamage(target|d);}else if(d == self.roll_total){inflictself(SHIELD|d); sfx(~_shield~);}else if(d < self.roll_total){attackself(-d); sfx(~_heal~);};,,MAX5,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,if(d < self.roll_total){e.castdirection = 1;}else{e.castdirection = 0;}; if(d == self.roll_total){e.animate(~error~); sfx(~_curse~);};,,
Accumulator_upgraded,<d6> is less than CPU: [sword]<d6>|<d6> equals your CPU: [shield]<d6>|<d6> is more than CPU: [heal]<d6>,1,if(d < self.roll_total ){attack(d); sfxdamage(target|d);}else if(d == self.roll_total){inflictself(SHIELD|d); sfx(~_shield~);}else if(d < self.roll_total){attackself(-d); sfx(~_heal~);};,,NORMAL,,WEAPON,YELLOW,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,if(d < self.roll_total){e.castdirection = 1;}else{e.castdirection = 0;}; if(d == self.roll_total){e.animate(~error~); sfx(~_curse~);};,,
Accumulator_downgraded,<d6> is less than CPU: [sword]<d6>|<d6> equals your CPU: [shield]<d6>|<d6> is more than CPU: [heal]<d6>,1,if(d < self.roll_total ){attack(d); sfxdamage(target|d);}else if(d == self.roll_total){inflictself(SHIELD|d); sfx(~_shield~);}else if(d < self.roll_total){attackself(-d); sfx(~_heal~);};,,MAX3,,WEAPON,YELLOW,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,if(d < self.roll_total){e.castdirection = 1;}else{e.castdirection = 0;}; if(d == self.roll_total){e.animate(~error~); sfx(~_curse~);};,,
Jack in the Box,Deal [sword]<d6> damage|Can only be played if|this is your leftmost card,2,attack(d); sfxdamage(target|d);,,NORMAL|FREE1,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,if(Deck.getcard(0).equipment == e){ e.changeslots([~NORMAL~[;]~FREE1~]); }else{ e.changeslots([]);  };,,
Jack in the Box_upgraded,Deal [sword]<d6> damage|Can only be played if|this is your leftmost card,2,attack(d); sfxdamage(target|d);,,NORMAL|FREE3,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Jack in the Box_downgraded,Deal [sword]<d6> damage|Can only be played if|this is your leftmost card,2,attack(d); sfxdamage(target|d);,,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Twoplicate,Duplicate a dice|[gray](2 uses this turn),1,givedice([d[;]d]);,Magic Dice,REQUIRE2,,ITEM,GREEN,change_power,change_power,,,2,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Twoplicate_upgraded,Roll two new dice|[gray](2 uses this turn),1,givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6[;]])]);,Magic Dice,REQUIRE2,,ITEM,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Twoplicate_downgraded,Duplicate a dice,1,givedice([d[;]d]);,Magic Dice,REQUIRE2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Electrum Cauldron,Even: [sword]1 dmg[;] get odd dice|Odd: [sword]1 dmg[;] get even dice,1,attack(1); sfxdamage(target|1); if(d%2 == 0){ givedice(rand([1[;]3[;]5])); }else{ givedice(rand([2[;]4[;]6])); };,Magic Dice,NORMAL,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Electrum Cauldron_upgraded,Even: [sword]1 dmg[;] get odd dice|Odd: [sword]1 dmg[;] get even dice|[gray](2 uses this turn),1,attack(1); sfxdamage(target|1); if(d%2 == 0){ givedice(rand([1[;]3[;]5])); }else{ givedice(rand([2[;]4[;]6])); };,Magic Dice,NORMAL,,MAGIC,ORANGE,,,,,2,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Electrum Cauldron_downgraded,Deal [sword]1 damage,1,attack(1); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,ORANGE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Amber Cauldron,Even: [sword]1 dmg[;] get even dice|Odd: [sword]1 dmg[;] get odd dice,1,attack(1); sfxdamage(target|1); if(d%2 == 1){ givedice(rand([1[;]3[;]5])); }else{ givedice(rand([2[;]4[;]6])); };,Magic Dice,NORMAL,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Amber Cauldron_upgraded,Even: [sword]1 dmg[;] get even dice|Odd: [sword]1 dmg[;] get odd dice|[gray](2 uses this turn),1,attack(1); sfxdamage(target|1); if(d%2 == 1){ givedice(rand([1[;]3[;]5])); }else{ givedice(rand([2[;]4[;]6])); };,Magic Dice,NORMAL,,MAGIC,ORANGE,,,,,2,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Amber Cauldron_downgraded,Deal [sword]1 damage,1,attack(1); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,ORANGE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Quartz Cauldron,[sword]1 damage[;] get new dice|(value at least 2 more/less),1,var plist = []; for(x in 1...7){ if(x - d < -1 # x - d  > 1){ plist.push(x); }; }; givedice(rand(plist)); attack(1); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,PINK,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Quartz Cauldron_upgraded,[sword]1 damage[;] get new dice|(value at least 2 more/less)|[gray](2 uses this turn),1,var plist = []; for(x in 1...7){ if(x - d < -1 # x - d  > 1){ plist.push(x); }; }; givedice(rand(plist)); attack(1); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,PINK,,,,,2,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Quartz Cauldron_downgraded,Deal [sword]1 damage,1,attack(1); sfxdamage(target|1);,Magic Dice,NORMAL,,MAGIC,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Lantern Shield,Deal [sword]2 damage|Gain [shield]2 shield,1,inflictself(SHIELD[;]2); sfx(~_shield~); attack(2); sfxdamage(target|2);,Steel Skin,COUNTDOWN,6,SHIELD,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Lantern Shield_upgraded,Deal [sword]3 damage|Gain [shield]3 shield,1,inflictself(SHIELD[;]3); sfx(~_shield~); attack(3); sfxdamage(target|3);,Steel Skin,COUNTDOWN,6,SHIELD,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lantern Shield_downgraded,Deal [sword]1 damage|Gain [shield]1 shield,1,inflictself(SHIELD[;]1); sfx(~_shield~); attack(1); sfxdamage(target|1);,Steel Skin,COUNTDOWN,6,SHIELD,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Targe Charge,Deal [sword]<d6> damage|On 6[;] gain [shield]2 shield,2,attack(d); sfxdamage(target|d); if(d == 6){ inflictself(SHIELD[;]2); sfx(~_shield~); };,Barricade,NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Targe Charge_upgraded,Deal [sword]<d6> damage|On even[;] gain [shield]2 shield,2,attack(d); sfxdamage(target|d); if(d % 2 == 0){ inflictself(SHIELD[;]2); sfx(~_shield~); };,Barricade,NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Targe Charge_downgraded,Deal [sword]<d6> damage|On 3[;] gain [shield]1 shield,2,attack(d); sfxdamage(target|d); if(d == 3){ inflictself(SHIELD[;]1); sfx(~_shield~); };,Barricade,MAX3,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Jolt,Dice value +2,1,givedice(d+2);,Magic Six,MAX4,,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Jolt_upgraded,Dice value +2,1,givedice(d+2);,Magic Six,NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Jolt_downgraded,Dice value +1,1,givedice(d+1);,Magic Six,MAX4,,ITEM,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Jerk,Dice value -2,1,givedice(d-2);,Magic Six,MIN3,,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Jerk_upgraded,Dice value -2|[gray](3 uses this turn),1,givedice(d-2);,Magic Six,MIN3,,ITEM,GREEN,,,,none,3,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Jerk_downgraded,Roll a 1,1,givedice(1);,Magic Six,MIN3,,ITEM,GREEN,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ratchet,Increase the range of MAX|and MIN items by 1 this turn,1,var maxslots = [~MAX1~[;]~MAX2~[;]~MAX3~[;]~MAX4~[;]~MAX5~]; var minslots = [~MIN5~[;]~MIN4~[;]~MIN3~[;]~MIN2~]; var slots = []; for(eq in self.equipment){ if(eq.skillcard == ~~ && eq.countdown == 0){ slots = eq.getslots(); var output = []; for(s in slots){ if(maxslots.indexOf(s) != -1){ if(maxslots.indexOf(s)+1 ==maxslots.length){ output.push(~NORMAL~); }else{ output.push(maxslots[maxslots.indexOf(s) + 1]); }; }else if(minslots.indexOf(s) != -1){ if(minslots.indexOf(s)+1 ==minslots.length){ output.push(~NORMAL~); }else{ output.push(minslots[minslots.indexOf(s) + 1]); }; }else{output.push(s);}; }; if(output.length > 0){ eq.animate(~flashandshake~); eq.changeslots(output); }; }; }; sfx(~_magic~);,Magic Six,NORMAL,,ITEM,GRAY,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,for(eq in self.equipment){ eq.resetslots(); };,,,,for(eq in self.equipment){ eq.resetslots(); };,,,
Ratchet_upgraded,Increase the range of MAX|and MIN items by 1 this turn|,1,var maxslots = [~MAX1~[;]~MAX2~[;]~MAX3~[;]~MAX4~[;]~MAX5~]; var minslots = [~MIN5~[;]~MIN4~[;]~MIN3~[;]~MIN2~]; var slots = []; for(eq in self.equipment){ if(eq.skillcard == ~~ && eq.countdown == 0){ slots = eq.getslots(); var output = []; for(s in slots){ if(maxslots.indexOf(s) != -1){ if(maxslots.indexOf(s)+1 ==maxslots.length){ output.push(~NORMAL~); }else{ output.push(maxslots[maxslots.indexOf(s) + 1]); }; }else if(minslots.indexOf(s) != -1){ if(minslots.indexOf(s)+1 ==minslots.length){ output.push(~NORMAL~); }else{ output.push(minslots[minslots.indexOf(s) + 1]); }; }else{output.push(s);}; }; if(output.length > 0){ eq.animate(~flashandshake~); eq.changeslots(output); }; }; }; sfx(~_magic~);,Magic Six,NORMAL,,ITEM,GRAY,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,for(eq in self.equipment){ eq.resetslots(); };,,,,for(eq in self.equipment){ eq.resetslots(); };,,,
Ratchet_downgraded,Increase the range of MAX|and MIN items by 1 this turn,1,var maxslots = [~MAX1~[;]~MAX2~[;]~MAX3~[;]~MAX4~[;]~MAX5~]; var minslots = [~MIN5~[;]~MIN4~[;]~MIN3~[;]~MIN2~]; var slots = []; for(eq in self.equipment){ if(eq.skillcard == ~~ && eq.countdown == 0){ slots = eq.getslots(); var output = []; for(s in slots){ if(maxslots.indexOf(s) != -1){ if(maxslots.indexOf(s)+1 ==maxslots.length){ output.push(~NORMAL~); }else{ output.push(maxslots[maxslots.indexOf(s) + 1]); }; }else if(minslots.indexOf(s) != -1){ if(minslots.indexOf(s)+1 ==minslots.length){ output.push(~NORMAL~); }else{ output.push(minslots[minslots.indexOf(s) + 1]); }; }else{output.push(s);}; }; if(output.length > 0){ eq.animate(~flashandshake~); eq.changeslots(output); }; }; }; sfx(~_magic~);,Magic Six,NORMAL|NORMAL,,ITEM,GRAY,,,,none,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,for(eq in self.equipment){ eq.resetslots(); };,,,,for(eq in self.equipment){ eq.resetslots(); };,,,
Meteor Hammer,Deal [sword]<d6> damage[;] get a|new dice with lower value,2,attack(d); sfxdamage(target|d); if(actualdice[0].basevalue >= 2){ var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice(rand(t));  };,Magic Lockpick,MIN2,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Meteor Hammer_upgraded,Deal [sword]<d6> damage[;] get a|new dice with lower value,2,attack(d); sfxdamage(target|d); if(actualdice[0].basevalue >= 2){ var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice(rand(t));  };,Magic Lockpick,MIN2|FREE2,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Meteor Hammer_downgraded,Get a new dice|with a lower value,2,var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice(rand(t));,Magic Lockpick,MIN2,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rope Dart,[sword]<d6> damage[;] reduce a|random countdown by <d6>,1,attack(d); sfxdamage(target|d); var poss = []; for(eq in self.equipment){if(eq.skillcard == ~~){if(eq.countdown > 0 && eq.ready && eq.availablethisturn){ poss.push(eq); }; }; }; if(self.stolencard){if(self.stolencard.countdown > 0 && self.stolencard.ready){poss.push(self.stolencard);};}; if(poss.length > 0){ var r = rand(poss); while(d > 6){givedice(6); r.assigndice(self.dicepool[self.dicepool.length - 1]);}; givedice(d); r.assigndice(self.dicepool[self.dicepool.length - 1]);};,Accelerate,EVEN,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rope Dart_upgraded,[sword]<d6> damage[;] reduce a|random countdown by <d6>,1,attack(d); sfxdamage(target|d); var poss = []; for(eq in self.equipment){if(eq.skillcard == ~~){if(eq.countdown > 0 && eq.ready && eq.availablethisturn){ poss.push(eq); }; }; }; if(self.stolencard){if(self.stolencard.countdown > 0 && self.stolencard.ready){poss.push(self.stolencard);};}; if(poss.length > 0){ var r = rand(poss); while(d > 6){givedice(6); r.assigndice(self.dicepool[self.dicepool.length - 1]);}; givedice(d); r.assigndice(self.dicepool[self.dicepool.length - 1]);};,Accelerate,EVEN|FREE2,,WEAPON,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rope Dart_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Accelerate,EVEN,,WEAPON,ORANGE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pogo Stick,Deal [sword]1 damage for every|3 cards in your deck ([sword]<var:thirdcardcount>),2,var dmg = self.getvar(~thirdcardcount~); attack(dmg); sfxdamage(target|dmg);,,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~thirdcardcount~[;]Deck.getcardlist(~all~).length/3); self.setvar(~halfcardcount~[;]Deck.getcardlist(~all~).length/2); self.setvar(~sixthcardcount~[;]Deck.getcardlist(~all~).length/6);,,self.setvar(~thirdcardcount~[;]Deck.getcardlist(~all~).length/3); self.setvar(~halfcardcount~[;]Deck.getcardlist(~all~).length/2); self.setvar(~sixthcardcount~[;]Deck.getcardlist(~all~).length/6);,,,,,
Pogo Stick_upgraded,Deal [sword]1 damage for every|2 cards in your deck ([sword]<var:halfcardcount>),2,var dmg = self.getvar(~halfcardcount~); attack(dmg); sfxdamage(target|dmg);,,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~thirdcardcount~[;]Deck.getcardlist(~all~).length/3); self.setvar(~halfcardcount~[;]Deck.getcardlist(~all~).length/2); self.setvar(~sixthcardcount~[;]Deck.getcardlist(~all~).length/6);,,self.setvar(~thirdcardcount~[;]Deck.getcardlist(~all~).length/3); self.setvar(~halfcardcount~[;]Deck.getcardlist(~all~).length/2); self.setvar(~sixthcardcount~[;]Deck.getcardlist(~all~).length/6);,,,,,
Pogo Stick_downgraded,Deal [sword]1 damage for every|6 cards in your deck ([sword]<var:sixthcardcount>),2,var dmg = self.getvar(~sixthcardcount~); attack(dmg); sfxdamage(target|dmg);,,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~thirdcardcount~[;]Deck.getcardlist(~all~).length/3); self.setvar(~halfcardcount~[;]Deck.getcardlist(~all~).length/2); self.setvar(~sixthcardcount~[;]Deck.getcardlist(~all~).length/6);,,self.setvar(~thirdcardcount~[;]Deck.getcardlist(~all~).length/3); self.setvar(~halfcardcount~[;]Deck.getcardlist(~all~).length/2); self.setvar(~sixthcardcount~[;]Deck.getcardlist(~all~).length/6);,,,,,
Mechanical Charm,Roll two <dicerolled>s[;] increase|value by 1 with each roll,1,var dice = [self.roll_totaldice+1]; while(dice[0] > 6){dice.push(6); dice[0]-=6;}; givedice(dice.concat(dice));,,COUNTDOWN,10,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Mechanical Charm_upgraded,Roll three <dicerolled>s[;] increase|value by 1 with each roll,1,var dice = [self.roll_totaldice+1]; while(dice[0] > 6){dice.push(6); dice[0]-=6;}; givedice(dice.concat(dice.concat(dice)));,,COUNTDOWN,10,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Mechanical Charm_downgraded,Roll one <dicerolled>[;] increase|value by 1 with each roll,1,var dice = [self.roll_totaldice+1]; while(dice[0] > 6){dice.push(6); dice[0]-=6;}; givedice(dice);,,COUNTDOWN,10,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Mechanicalantern,Get a <d6> next turn for|each <d6> you rolled this turn,1,inflictself(~stash~+d[;]self.getvar(~mechanical_lantern~+d)); inflictself(~mechanical_lantern~); sfx(~magic_gaindice~);,,NORMAL,,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,e.setvar(~rollcheck~[;]0); for(x in [1[;]2[;]3[;]4[;]5[;]6]){ self.setvar(~mechanical_lantern~+x[;]0); };,e.setvar(~rollcheck~[;]0); for(x in [1[;]2[;]3[;]4[;]5[;]6]){ self.setvar(~mechanical_lantern~+x[;]0); };,e.setvar(~rollcheck~[;]0); for(x in [1[;]2[;]3[;]4[;]5[;]6]){ self.setvar(~mechanical_lantern~[;]0); };,,while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~[;] e.getvar(~rollcheck~) + 1); e.animate(~flashandshake~); var x = self.dicepool[self.dicepool.length - 1]; self.setvar(~mechanical_lantern~+x[;]self.getvar(~mechanical_lantern~+x)+1); };,,,,,
Mechanicalantern_upgraded,Get a <d6> next turn for|each <d6> you rolled this turn|[gray](2 uses this turn),1,inflictself(~stash~+d[;]self.getvar(~mechanical_lantern~+d)); inflictself(~mechanical_lantern~); sfx(~magic_gaindice~);,,NORMAL,,ITEM,YELLOW,,,,,2,YES,NO,YES,YES,NO,NO,NO,NO,,e.setvar(~rollcheck~[;]0); for(x in [1[;]2[;]3[;]4[;]5[;]6]){ self.setvar(~mechanical_lantern~+x[;]0); };,e.setvar(~rollcheck~[;]0); for(x in [1[;]2[;]3[;]4[;]5[;]6]){ self.setvar(~mechanical_lantern~+x[;]0); };,e.setvar(~rollcheck~[;]0); for(x in [1[;]2[;]3[;]4[;]5[;]6]){ self.setvar(~mechanical_lantern~[;]0); };,,while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~[;] e.getvar(~rollcheck~) + 1); e.animate(~flashandshake~); var x = self.dicepool[self.dicepool.length - 1]; self.setvar(~mechanical_lantern~+x[;]self.getvar(~mechanical_lantern~+x)+1); };,,,,,
Mechanicalantern_downgraded,Get a <d6> next turn,1,inflictself(~stash~+d[;]1); inflictself(~mechanical_lantern~); sfx(~magic_gaindice~);,,NORMAL,,ITEM,YELLOW,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Ballerina Charm,Roll 2 twos,1,givedice([2[;]2]);,Ballerina,COUNTDOWN,4,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ballerina Charm_upgraded,Roll 2 twos|,1,givedice([2[;]2]);,Ballerina,COUNTDOWN,4,ITEM,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ballerina Charm_downgraded,Roll a two,1,givedice(2);,Ballerina,COUNTDOWN,4,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Backlash,Deal [sword]10 damage,1,attack(10); sfxdamage(target|10);,Shuriken,MAX3|MAX4,7,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Backlash_upgraded,Deal [sword]13 damage,1,attack(13); sfxdamage(target|13);,Shuriken,MAX3|MAX4,7,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Backlash_downgraded,Deal [sword]7 damage,1,attack(7); sfxdamage(target|7);,Shuriken,MAX3|MAX4,7,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magma Storm,[fire]2 dmg to you and enemy|[gray](Reusable),1,attack(2[;]FIRE); sfx(~_fire~); boomerang(2[;]FIRE);,Boom!,COUNTDOWN,2,WEAPON,RED,change_power,change_power,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magma Storm_upgraded,[fire]4 dmg to you and enemy|[gray](Reusable),1,attack(4[;]FIRE); sfx(~_fire~); boomerang(4[;]FIRE);,Boom!,COUNTDOWN,2,WEAPON,RED,,,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magma Storm_downgraded,[fire]2 dmg to yourself|[gray](Reusable),1,attackself(2[;]FIRE); sfx(~_fire~);,Boom!,COUNTDOWN,2,WEAPON,RED,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Expose Weakness,For each [sword]5 damage you|do[;] deal [sword]1 damage|,1,attack(1); sfxdamage(target|1); self.setvar(~del~|0);,Protection,,,WEAPON,ORANGE,change_poison,change_power,,none,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,var diff = e.getvar(~enemyhealth~) - target.hp; if(diff > 0){e.setvar(~diff~|e.getvar(~diff~)+diff);}; var c = 0; if(e.getvar(~diff~) >= 5){ e.doequipmentaction(self|target|1|[]|c|true); c+=0.2; e.setvar(~diff~|e.getvar(~diff~)-5);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Expose Weakness_upgraded,For each [sword]4 damage you|do[;] deal [sword]1 damage|,1,attack(1); sfxdamage(target|1); self.setvar(~del~|0);,Protection,,,WEAPON,ORANGE,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,var diff = e.getvar(~enemyhealth~) - target.hp; if(diff > 0){e.setvar(~diff~|e.getvar(~diff~)+diff);}; var c = 0; if(e.getvar(~diff~) >= 4){ e.doequipmentaction(self|target|1|[]|c|true); c+=0.2; e.setvar(~diff~|e.getvar(~diff~)-4);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Expose Weakness_downgraded,For each [sword]5 damage you|do[;] deal [sword]1 damage|,1,attack(1); sfxdamage(target|1); self.setvar(~del~|0);,Protection,,,WEAPON,ORANGE,,,,none,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,var diff = e.getvar(~enemyhealth~) - target.hp; if(diff > 0){e.setvar(~diff~|e.getvar(~diff~)+diff);}; var c = 0; if(e.getvar(~diff~) >= 5){ e.doequipmentaction(self|target|1|[]|c|true); c+=0.2; e.setvar(~diff~|e.getvar(~diff~)-5);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Critical Hit,Attacks have a 25% chance|to deal double damage,1,,Bubble Gun,,,WEAPON,RED,change_poison,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,var odds = 25; if(getstatusself(~luck~) > 0){odds += 25;} else if(getstatusself(~luck+~) > 0){odds = 100;}; var diff = target.hp - e.getvar(~enemyhealth~); if(diff < 0 && chance(odds)){target.hp = target.hp + diff; e.animate(~flashandshake~); self.textparticle(~Critical hit!~); sfx(~_fury~); if(target.hp <= 0){attack(1);}; }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Critical Hit_upgraded,Attacks have a 25% chance|to deal triple damage,1,,Bubble Gun,,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,var odds = 25; if(getstatusself(~luck~) > 0){odds += 25;} else if(getstatusself(~luck+~) > 0){odds = 100;}; var diff = target.hp - e.getvar(~enemyhealth~); if(diff < 0 && chance(odds)){target.hp = target.hp + diff*2; e.animate(~flashandshake~); self.textparticle(~Critical hit!~); sfx(~_fury~); if(target.hp <= 0){attack(1);}; }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Critical Hit_downgraded,Attacks have a 25% chance|to deal +1 damage,1,,Bubble Gun,,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,var odds = 25; if(getstatusself(~luck~) > 0){odds += 25;} else if(getstatusself(~luck+~) > 0){odds = 100;}; var diff = target.hp - e.getvar(~enemyhealth~); if(diff < 0 && chance(odds)){target.hp = target.hp-1; e.animate(~flashandshake~); self.textparticle(~Critical hit!~); sfx(~_fury~); if(target.hp <= 0){attack(1);}; }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Lifesteal,Whenever you use an attack|that deals damage[;] heal [heal]1|[gray](3 uses this turn),1,attackself(-1); sfx(~_heal~);,Blood Sip,,,SHIELD,GREEN,change_power,change_power,,none,4,YES,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~) ){ if(self.hp < self.maxhp){ e.doequipmentaction(self|target|0|[]|0|true);}; }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Lifesteal_upgraded,Whenever you use an attack|that deals damage[;] heal [heal]1|[gray](Reuseable),1,attackself(-1); sfx(~_heal~);,Blood Sip,,,SHIELD,GREEN,,,,none,-1,YES,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~) ){ if(self.hp < self.maxhp){ e.doequipmentaction(self|target|0|[]|0|true);}; }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Lifesteal_downgraded,Whenever you use an attack|that deals damage[;] heal [heal]1|[gray](3 uses this turn),1,attackself(-1); sfx(~_heal~);,Blood Sip,,,SHIELD,GREEN,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~enemyhealth~[;]target.hp);,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~) ){ if(self.hp < self.maxhp){ e.doequipmentaction(self|target|0|[]|0|true);}; }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Preparation,Roll 2 extra dice|on the first turn,1,,Magic Lantern,,,WEAPON,BRIGHTCYAN,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn == 1){ givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]); e.changecolour(~GRAY~); e.animate(~flashandshake~); sfx(~openchest~); };,,,,,,
Preparation_upgraded,Roll 3 extra dice|on the first turn,1,,Magic Lantern,,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn == 1){ givedice([rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]); e.changecolour(~GRAY~); e.animate(~flashandshake~);  sfx(~openchest~);};,,,,,,
Preparation_downgraded,Roll 1 extra dice|on the first turn,1,,Magic Lantern,,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn == 1){ givedice(); e.changecolour(~GRAY~); e.animate(~flashandshake~);  sfx(~openchest~);};,,,,,,
Maintenance,Keep half of any excess|[shield]shield between turns,1,,Revitalize,,,WEAPON,ORANGE,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,var diff = self.maxhp - self.hp; var rem = diff - getstatusself(SHIELD); if(rem < 0){ e.setvar(~remainder~[;](-rem/2)); };,if(e.getvar(~remainder~) > 0){ inflictself(SHIELD[;]e.getvar(~remainder~)); sfx(~_shield~); e.setvar(~remainder~[;]0); e.animate(~flashandshake~);};,,,,,,
Maintenance_upgraded,Keep all excess|[shield]shield between turns,1,,Revitalize,,,WEAPON,ORANGE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,var diff = self.maxhp - self.hp; var rem = diff - getstatusself(SHIELD); if(rem < 0){ e.setvar(~remainder~[;]-rem); };,if(e.getvar(~remainder~) > 0){ inflictself(SHIELD[;]e.getvar(~remainder~)); sfx(~_shield~); e.setvar(~remainder~[;]0); e.animate(~flashandshake~);};,,,,,,
Maintenance_downgraded,No effect,1,,Revitalize,,,WEAPON,ORANGE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Toxic Trebuchet,Inflict [poison]3 poison,1,inflict(POISON[;]3); sfx(~_poison~);,Goop Gun,NORMAL|NORMAL,7,WEAPON,PURPLE,change_poison,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxic Trebuchet_upgraded,Inflict [poison]4 poison,1,inflict(POISON[;]4); sfx(~_poison~);,Goop Gun,NORMAL|NORMAL,7,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxic Trebuchet_downgraded,Inflict [poison]2 poison,1,inflict(POISON[;]2); sfx(~_poison~);,Goop Gun,NORMAL|NORMAL,7,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Precision Blade,Deal [sword]<d6> damage[;] total|lowers with damage dealt,1,attack(d); sfxdamage(target|d);,Catapult,NORMAL|NORMAL,20,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,e.needstotal = 20;,,e.setvar(~enemyhealth~[;]target.hp);,var diff = target.hp - e.getvar(~enemyhealth~); if(diff < 0){ e.needstotal+=diff; if(e.needstotal < 2){e.needstotal = 2;}; e.animate(~flashandshake~); }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Precision Blade_upgraded,Deal [sword]<d6> damage[;] total|lowers with damage dealt,1,attack(d); sfxdamage(target|d);,Catapult,NORMAL|NORMAL,15,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,e.needstotal = 15;,,e.setvar(~enemyhealth~[;]target.hp);,var diff = target.hp - e.getvar(~enemyhealth~); if(diff < 0){ e.needstotal+=diff; if(e.needstotal < 2){e.needstotal = 2;}; e.animate(~flashandshake~); }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Precision Blade_downgraded,Deal [sword]<d6> damage[;] total|lowers with damage dealt,1,attack(d); sfxdamage(target|d);,Catapult,NORMAL,20,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,e.needstotal = 20;,,e.setvar(~enemyhealth~[;]target.hp);,var diff = target.hp - e.getvar(~enemyhealth~); if(diff < 0){ e.needstotal+=diff; if(e.needstotal < 2){e.needstotal = 2;}; e.animate(~flashandshake~); }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Fulcrum Blade,Deal [sword]7 damage|(Slots change each turn),1,attack(7); sfxdamage(target|7);,Shuriken,NORMAL|FREE1,7,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,var target = rand([1|2|3|4|5|6]); var slots = []; for(i in 0...7){ slots.push(~FREE~+i); }; e.changeslots([~NORMAL~|slots[target]]); e.needstotal = target + rand([1|2|3|4|5|6]); e.animate(~flashandshake~);,,,,,,
Fulcrum Blade_upgraded,Deal [sword]10 damage|(Slots change each turn),1,attack(10); sfxdamage(target|10);,Shuriken,NORMAL|FREE1,7,WEAPON,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,var target = rand([1|2|3|4|5|6]); var slots = []; for(i in 0...7){ slots.push(~FREE~+i); }; e.changeslots([~NORMAL~|slots[target]]); e.needstotal = target + rand([1|2|3|4|5|6]); e.animate(~flashandshake~);,,,,,,
Fulcrum Blade_downgraded,Deal [sword]4 damage|(Slots change each turn),1,attack(4); sfxdamage(target|4);,Shuriken,NORMAL|FREE1,7,WEAPON,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,var target = rand([1|2|3|4|5|6]); var slots = []; for(i in 0...7){ slots.push(~FREE~+i); }; e.changeslots([~NORMAL~|slots[target]]); e.needstotal = target + rand([1|2|3|4|5|6]); e.animate(~flashandshake~);,,,,,,
Dainsleif,Reduce the enemy's|maximum hp by [heart]<double>,2,target.maxhp-=d*2; if(target.hp > target.maxhp){ target.hp = target.maxhp; }; sfxdamage(target|d*2); sfx(~_drain~); attack(0); if(getstatus(VAMPIRE) > 0 && target.hp <= 0){target.hp=1; target.maxhp=1;}; if(target.hp <= 0){attack(1);};,Throwing Knife,MAX5,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dainsleif_upgraded,Reduce the enemy's|maximum hp by [heart]<double>,2,target.maxhp-=d*2; if(target.hp > target.maxhp){ target.hp = target.maxhp; }; sfxdamage(target|d*2); sfx(~_drain~); attack(0); if(getstatus(VAMPIRE) > 0 && target.hp <= 0){target.hp=1; target.maxhp=1;}; if(target.hp <= 0){attack(1);};,Throwing Knife,NORMAL,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dainsleif_downgraded,Reduce the enemy's|maximum hp by [heart]<double>,2,target.maxhp-=d*2; if(target.hp > target.maxhp){ target.hp = target.maxhp; }; sfxdamage(target|d*2); sfx(~_drain~); attack(0); if(getstatus(VAMPIRE) > 0 && target.hp <= 0){target.hp=1; target.maxhp=1;}; if(target.hp <= 0){attack(1);};,Throwing Knife,MAX3,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Yoyo,Do [sword]<triple>[;] but you take|[sword]<triple> too in [jinx]<d6> turns,2,attack(d*3); sfxdamage(target|d*3); jinx(~Limbo~|~take [sword]%VAR% damage~|~Take [sword]%VAR% damage~|~attack(%VAR%); sfxdamage(null|%VAR%);~|self|self|d|(d * 3));,Two Handed Knife,MAX4,,WEAPON,PINK,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Yoyo_upgraded,Do [sword]<quadruple>[;] but you take|[sword]<quadruple> too in [jinx]<d6> turns,2,attack(d*4); sfxdamage(target|d*4); jinx(~Limbo~|~take [sword]%VAR% damage~|~Take [sword]%VAR% damage~|~attack(%VAR%); sfxdamage(null|%VAR%);~|self|self|d|(d * 4));,Two Handed Knife,MAX4,,WEAPON,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Yoyo_downgraded,Do [sword]<d6>[;] but you take|[sword]<d6> too in [jinx]<d6> turns,2,attack(d); sfxdamage(target|d); jinx(~Limbo~|~take [sword]%VAR% damage~|~Take [sword]%VAR% damage~|~attack(%VAR%); sfxdamage(null|%VAR%);~|self|self|d|d);,Two Handed Knife,MAX4,,WEAPON,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Garbage Collection,Deal [sword]<double> damage|(Slots grow on each roll),1,attack(d * 2); sfxdamage(target|d*2);,,REQUIRE1,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,e.changeslots([~REQUIRE1~]); e.setvar(~rollcheck~| 0);,e.changeslots([~REQUIRE1~]); e.setvar(~rollcheck~| 0);,e.changeslots([~REQUIRE1~]); e.setvar(~rollcheck~| 0);,,var slots = [~REQUIRE1~]; for(i in 2...6){slots.push(~MAX~+i);}; slots.push(~NORMAL~); while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~ | e.getvar(~rollcheck~) + 1); e.animate(~flashandshake~); if(e.getvar(~rollcheck~) < 6){e.changeslots([slots[e.getvar(~rollcheck~)]]);}else{e.changeslots([~NORMAL~]);};};,,,,,
Garbage Collection_upgraded,Deal [sword]<double> damage|(Slots grow on each roll),1,attack(d * 2); sfxdamage(target|d*2);,,REQUIRE1|FREE1,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,e.changeslots([~REQUIRE1~|~FREE1~]); e.setvar(~rollcheck~| 0);,e.changeslots([~REQUIRE1~|~FREE1~]); e.setvar(~rollcheck~| 0);,e.changeslots([~REQUIRE1~|~FREE1~]); e.setvar(~rollcheck~| 0);,,var slots = [~REQUIRE1~]; for(i in 2...6){slots.push(~MAX~+i);}; slots.push(~NORMAL~); while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~ | e.getvar(~rollcheck~) + 1); e.animate(~flashandshake~); if(e.getvar(~rollcheck~) < 6){e.changeslots([slots[e.getvar(~rollcheck~)]|~FREE1~]);}else{e.changeslots([~NORMAL~|~FREE1~]);};};,,,,,
Garbage Collection_downgraded,Deal [sword]<d6> damage|(Slots grow on each roll),1,attack(d); sfxdamage(target|d);,,REQUIRE1,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,e.changeslots([~REQUIRE1~]); e.setvar(~rollcheck~| 0);,e.changeslots([~REQUIRE1~]); e.setvar(~rollcheck~| 0);,e.changeslots([~REQUIRE1~]); e.setvar(~rollcheck~| 0);,,var slots = [~REQUIRE1~]; for(i in 2...6){slots.push(~MAX~+i);}; slots.push(~NORMAL~); while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~ | e.getvar(~rollcheck~) + 1); e.animate(~flashandshake~); if(e.getvar(~rollcheck~) < 6){e.changeslots([slots[e.getvar(~rollcheck~)]]);}else{e.changeslots([~NORMAL~]);};};,,,,,
Lunar Beam,Start of turn: Do [sword]<var:lunarbeam> dmg|On use: Lunar Beam dmg +1,1,self.setvar(~lunarbeam~[;]self.getvar(~lunarbeam~)+1); sfx(~_cure~); inflictself(~lunarbeam~);,Whelm,ODD,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~lunarbeam~[;]0);,,e.animate(~flashandshake~); attack(self.getvar(~lunarbeam~)); sfxdamage(target|self.getvar(~lunarbeam~));,,,,,,
Lunar Beam_upgraded,Start of turn: Do [sword]<var:lunarbeam> dmg|On use: Lunar Beam dmg +1,1,self.setvar(~lunarbeam~[;]self.getvar(~lunarbeam~)+1); sfx(~_cure~); inflictself(~lunarbeam~);,Whelm,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~lunarbeam~[;]0);,,e.animate(~flashandshake~); attack(self.getvar(~lunarbeam~)); sfxdamage(target|self.getvar(~lunarbeam~));,,,,,,
Lunar Beam_downgraded,Start of turn: Do [sword]<var:lunarbeam> dmg|On use: Lunar Beam dmg +1,1,self.setvar(~lunarbeam~[;]self.getvar(~lunarbeam~)+1); sfx(~_cure~); inflictself(~lunarbeam~);,Whelm,REQUIRE1,,WEAPON,BRIGHTCYAN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~lunarbeam~[;]0);,,e.animate(~flashandshake~); attack(self.getvar(~lunarbeam~)); sfxdamage(target|self.getvar(~lunarbeam~));,,,,,,
Terra Beam,1-3: Terra Beam dmg +<d6>|4-6: Deal [sword]<var:terrabeam> damage,1,var s = self.getvar(~terrabeam~); if(actualdice[0].basevalue < 4){self.setvar(~terrabeam~[;]s+d); sfx(~_magic~); inflictself(~terrabeam~[;]d);}else{attack(s); sfxdamage(target|s); };,Whelm,NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~terrabeam~[;]0);,,,,,,if(d < 4){e.castdirection = 0;}else{e.castdirection = 1;};,,
Terra Beam_upgraded,1-3: Terra Beam dmg +<d6>|4-6: Deal [sword]<var:terrabeam> damage,1,var s = self.getvar(~terrabeam~); if(actualdice[0].basevalue < 4){self.setvar(~terrabeam~[;]s+d); sfx(~_magic~); inflictself(~terrabeam~[;]d);}else{attack(s); sfxdamage(target|s); };,Whelm,NORMAL|FREE1,,WEAPON,ORANGE,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~terrabeam~[;]0);,,,,,,if(d < 5){e.castdirection = 0;}else{e.castdirection = 1;};,,
Terra Beam_downgraded,1-3: Terra Beam dmg +<d6>|4-6: Deal [sword]<var:terrabeam> damage,1,var s = self.getvar(~terrabeam~); if(actualdice[0].basevalue < 4){self.setvar(~terrabeam~[;]s+d); sfx(~_magic~); inflictself(~terrabeam~[;]d);}else{attack(s); sfxdamage(target|s); };,Whelm,EVEN,,WEAPON,ORANGE,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~terrabeam~[;]0);,,,,,,if(d < 4){e.castdirection = 0;}else{e.castdirection = 1;};,,
Pea Pod,Gain [mana]1 mana|[gray](Reusable),1,inflictself(MANA|1); sfx(~_mana~);,,COUNTDOWN,5,MAGIC,GREEN,change_power,change_power,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Pea Pod_upgraded,Gain [mana]2 mana|[gray](Reusable),1,inflictself(MANA|2); sfx(~_mana~);,,COUNTDOWN,5,MAGIC,GREEN,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); inflictself(MANA);,,,,,,
Pea Pod_downgraded,Gain [mana]1 mana|[gray](Reusable),1,inflictself(MANA); sfx(~_mana~);,,COUNTDOWN,5,MAGIC,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bloodroot,Drain [heart]2 health. If above|half health[;] gain [mana]1 mana,1,drain(2); sfx(~_drain~); if(self.hp >= self.maxhp/2){inflictself(MANA); sfx(~_mana~);};,,COUNTDOWN,6,MAGIC,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Bloodroot_upgraded,Drain [heart]2 health|Gain [mana]1 mana,1,drain(2); sfx(~_drain~); inflictself(MANA); sfx(~_mana~);,,COUNTDOWN,6,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bloodroot_downgraded,Drain [heart]2 health,1,drain(2); sfx(~_drain~);,,COUNTDOWN,6,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Stinging Nettle,Deal [sword]<d6> damage[;] twice|if you have [thorns]thorns,1,if(getstatusself(THORNS) > 0){attack(d); attack(d); sfxdamage(target|d*2);}else{attack(d); sfxdamage(d*2);};,Pinprick,MAX4,,MAGIC,GREEN,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Stinging Nettle_upgraded,Deal [sword]<d6> damage[;] twice|if you have [thorns]thorns,1,if(getstatusself(THORNS) > 0){attack(d); attack(d); sfxdamage(target|d*2);}else{attack(d); sfxdamage(d*2);};,Pinprick,MAX5,,MAGIC,GREEN,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Stinging Nettle_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Pinprick,MAX4,,MAGIC,GREEN,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dock Leaf,Deal [sword]2 damage[;] heal|[heal]1 per [thorns] thorn you have,1,attack(2); if(getstatusself(THORNS) > 0){ pierceattackself(-getstatusself(THORNS)); sfx(~_heal~);}; sfxdamage(target|2); ,Pinprick,NORMAL,,MAGIC,GREEN,change_power,change_power,thorns,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Dock Leaf_upgraded,Deal [sword]2 damage[;] heal|[heal]2 per [thorns] thorn you have,1,attack(2); if(getstatusself(THORNS) > 0){ pierceattackself(-getstatusself(THORNS)*2); sfx(~_heal~);}; sfxdamage(target|2); ,Pinprick,NORMAL,,MAGIC,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dock Leaf_downgraded,Deal [sword]2 damage,1,attack(2); sfxdamage(target|2);,Pinprick,NORMAL,,MAGIC,GREEN,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dock Leaf?,Deal [sword]2 damage[;] gains|double healing from [thorns]thorns,1,attack(2); if(getstatusself(THORNS) > 0){ pierceattackself(-getstatusself(THORNS)); sfx(~_heal~);}; sfxdamage(target|2); ,Needle,NORMAL,,MAGIC,GREEN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Dock Leaf?_upgraded,Deal [sword]2 damage[;] gains|triple healing from [thorns]thorns,1,attack(2); if(getstatusself(THORNS) > 0){ pierceattackself(-getstatusself(THORNS)*2); sfx(~_heal~);}; sfxdamage(target|2); ,Needle,NORMAL,,MAGIC,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dock Leaf?_downgraded,Deal [sword]2 damage,1,attack(2); sfxdamage(target|2);,Needle,NORMAL,,MAGIC,GREEN,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hydrangea,Dice value +1|(Cost [mana]1: get a <d6>-1 too),1,var dicearray = [d+1];  if(getstatusself(MANA) > 0){removestatusself(MANA[;]1); dicearray.push(d-1);}; givedice(dicearray);,,RANGE34,,MAGIC,PINK,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Hydrangea_upgraded,Dice value +1|(Cost [mana]1: get a <d6>-1 too),1,var dicearray = [d+1];  if(getstatusself(MANA) > 0){removestatusself(MANA[;]1); dicearray.push(d-1);}; givedice(dicearray);,,RANGE25,,MAGIC,PINK,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hydrangea_downgraded,Dice value +1,1,givedice(d+1);,,RANGE34,,MAGIC,PINK,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rannuncarpus,Using a spell that generates|[mana]mana generates [mana]1 more,1,sfx(~_magic~);,,,,MAGIC,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,2,,,,e.setvar(~mana~[;]getstatusself(MANA));,if(getstatusself(MANA) > e.getvar(~mana~) ){inflictself(MANA); e.animate(~flashandshake~);}; e.setvar(~mana~[;]getstatusself(MANA));,,,,,
Rannuncarpus_upgraded,Using a spell that generates|[mana]mana generates [mana]2 more,1,sfx(~_magic~);,,,,MAGIC,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,e.setvar(~mana~[;]getstatusself(MANA));,if(getstatusself(MANA) > e.getvar(~mana~) ){inflictself(MANA[;]2); e.animate(~flashandshake~);}; e.setvar(~mana~[;]getstatusself(MANA));,,,,,
Rannuncarpus_downgraded,No effect,1,sfx(~_magic~);,,,,MAGIC,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Sunflower,Consume spell in slot <d6>|to gain [mana]8 mana,1,if(Spellbook.isempty(d)) { self.textparticle(~No effect!~); } else { inflictself(MANA[;]8); Spellbook.erase(d); }; sfx(~_cure~);,,NORMAL,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sunflower_upgraded,Consume spell in slot <d6>|to gain [mana]10 mana,1,if(Spellbook.isempty(d)) { self.textparticle(~No effect!~); } else { inflictself(MANA[;]10); Spellbook.erase(d); };  sfx(~_cure~);,,NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sunflower_downgraded,Consume spell in slot <d6>|to gain [mana]<d6> mana,1,if(Spellbook.isempty(d)) { self.textparticle(~No effect!~); } else { inflictself(MANA[;]d); Spellbook.erase(d); }; sfx(~_cure~);,,NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ginger,Inflict [weaken]1 weaken|(If [mana]>=3: +[weaken]1 extra),1,if(getstatusself(MANA) >= 3) {inflict(WEAKEN| 2); } else { inflict(WEAKEN| 1); } ; sfx(~_weaken~);,,ODD,,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Ginger_upgraded,Inflict [weaken]1 weaken|(If [mana]>=3: +[weaken]1 extra),1,if(getstatusself(MANA) >= 3) {inflict(WEAKEN| 2); } else { inflict(WEAKEN| 1); } ; sfx(~_weaken~);,,NORMAL,,MAGIC,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ginger_downgraded,Inflict [weaken]1 weaken|(If [mana]>=3: +[weaken]1 extra),1,if(getstatusself(MANA) >= 3) {inflict(WEAKEN| 2); } else { inflict(WEAKEN| 1); } ; sfx(~_weaken~);,,REQUIRE1,,MAGIC,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Iris,When you deal damage[;] lose|[mana]1 mana but do [sword]2 more,1,,,,,MAGIC,PURPLE,change_poison,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,1,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~)){if(getstatusself(MANA) > 0){target.hp-=2; e.animate(~flashandshake~); removestatusself(MANA);};}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Iris_upgraded,When you deal damage[;] lose|[mana]1 mana but do [sword]3 more,1,,,,,MAGIC,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~)){if(getstatusself(MANA) > 0){target.hp-=3; e.animate(~flashandshake~); removestatusself(MANA);};}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Iris_downgraded,When you deal damage[;] lose|[mana]1 mana but do [sword]1 more,1,,,,,MAGIC,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~)){if(getstatusself(MANA) > 0){target.hp-=1; e.animate(~flashandshake~); removestatusself(MANA);};}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Rosebud,Deal [sword]<d6> damage|On 5[;] gain [thorns]1 thorns,1,attack(d); sfxdamage(target|d); if(d == 5){inflictself(THORNS); sfx(~_thorns~);};,Needle,ODD,,MAGIC,RED,change_poison,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Rosebud_upgraded,Deal [sword]<d6> damage|On 5[;] gain [thorns]1 thorns,1,attack(d); sfxdamage(target|d); if(d == 5){inflictself(THORNS); sfx(~_thorns~);};,Needle,NORMAL,,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosebud_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Needle,ODD,,MAGIC,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blackberry,Restore [heal]2 health|(Cost [mana]2: gain [thorns]2 thorns),1,attackself(-2); sfx(~_heal~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflictself(THORNS|2); sfx(~_cure~);};,,MIN4,,MAGIC,GREEN,change_poison,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blackberry_upgraded,Restore [heal]2 health|(Cost [mana]2: gain [thorns]2 thorns),1,attackself(-2); sfx(~_heal~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflictself(THORNS|2); sfx(~_cure~);};,,NORMAL,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blackberry_downgraded,Restore [heal]2 health|(Cost [mana]2: gain [thorns]2 thorns),1,attackself(-2); sfx(~_heal~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflictself(THORNS|2); sfx(~_cure~);};,,REQUIRE6,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Thermalily,Burn [fire]1 dice|(Cost [mana]2: +[fire]1 extra),1,inflict(FIRE); sfx(~_fire~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflict(FIRE);};,,NORMAL|NORMAL,5,MAGIC,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Thermalily_upgraded,Burn [fire]1 dice|(Cost [mana]2: +[fire]1 extra),1,inflict(FIRE); sfx(~_fire~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflict(FIRE);};,,MAX4|MAX4,,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Thermalily_downgraded,Burn [fire]1 dice,1,inflict(FIRE); sfx(~_fire~);,,NORMAL|NORMAL,5,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Snowdrop,Inflict [ice]1 freeze|(If [mana]>=3: do [ice]<d6> damage),1,inflict(ICE); sfx(~_ice~); if(getstatusself(MANA) >= 3){attack(d|ICE);};,,NORMAL|NORMAL,6,MAGIC,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Snowdrop_upgraded,Inflict [ice]1 freeze|(If [mana]>=3: do [ice]<d6> damage),1,inflict(ICE); sfx(~_ice~); if(getstatusself(MANA) >= 3){attack(d|ICE);};,,NORMAL|NORMAL,8,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Snowdrop_downgraded,Inflict [ice]1 freeze|(If [mana]>=3: do [ice]<d6> damage),1,inflict(ICE); sfx(~_ice~); if(getstatusself(MANA) >= 3){attack(d|ICE);};,,NORMAL|NORMAL,4,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
April Showers,Heal [heal]1 health per [mana]mana[;]|then lose all your [mana]mana,1,attackself(-getstatusself(MANA)); sfx(~_heal~); removestatusself(MANA|ALL);,,ODD,,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
April Showers_upgraded,Heal [heal]1 health per [mana]mana[;]|then lose all your [mana]mana,1,attackself(-getstatusself(MANA)); sfx(~_heal~); removestatusself(MANA|ALL);,,NORMAL,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
April Showers_downgraded,Heal [heal]1 health per [mana]mana[;]|then lose all your [mana]mana,1,attackself(-getstatusself(MANA)); sfx(~_heal~); removestatusself(MANA|ALL);,,REQUIRE5,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Coffee Bean,Gain [mana]1 mana|Roll a new dice,1,inflictself(MANA); givedice(); sfx(~_mana~);,,COUNTDOWN,6,MAGIC,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Coffee Bean_upgraded,Gain [mana]2 mana|Roll a new dice,1,inflictself(MANA|2); givedice(); sfx(~_mana~);,,COUNTDOWN,6,MAGIC,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Coffee Bean_downgraded,Roll a new dice,1,givedice();,,COUNTDOWN,6,MAGIC,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crocus,Deal [sword]3 damage|(If [mana]>=3: gain [mana]1 mana,1,attack(3); sfxdamage(target|3); if(getstatusself(MANA) >= 3){inflictself(MANA); sfx(~_magic~);};,,NORMAL,,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Crocus_upgraded,Deal [sword]3 damage|(If [mana]>=<d6>: gain [mana]1 mana,1,attack(3); sfxdamage(target|3); if(getstatusself(MANA) >= d){inflictself(MANA); sfx(~_magic~);};,,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crocus_downgraded,Deal [sword]3 damage,1,attack(3); sfxdamage(target|3);,,NORMAL,,MAGIC,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Mistletoe,Deal [sword]4 damage|(If [mana]>=4[]: gain [thorns]2 thorns),1,attack(4); sfxdamage(target|4); if(getstatusself(MANA) >= 4) {inflictself(THORNS[;]2); sfx(~_thorns~);};,,EVEN,,MAGIC,GREEN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magic Mistletoe_upgraded,Deal [sword]4 damage|(If [mana]>=4[]: gain [thorns]2 thorns),1,attack(4); sfxdamage(target|4); if(getstatusself(MANA) >= 4) {inflictself(THORNS[;]2); sfx(~_thorns~);};,,NORMAL,,MAGIC,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Mistletoe_downgraded,Deal [sword]4 damage|(If [mana]>=4[]: gain [thorns]2 thorns),1,attack(4); sfxdamage(target|4); if(getstatusself(MANA) >= 4) {inflictself(THORNS[;]2); sfx(~_thorns~);};,,REQUIRE2,,MAGIC,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magnolia,Even: Cost [mana]1[;] do [sword]<double>|Odd: Gain [mana]1[;] do [sword]<d6>,1,if(d%2 == 0){if(getstatusself(MANA) >= 1){removestatusself(MANA); attack(d*2); sfxdamage(target|d*2);};}else{inflictself(MANA); sfx(~_mana~); attack(d);};,,MAX4,,MAGIC,PINK,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magnolia_upgraded,Even: Cost [mana]1[;] do [sword]<triple>|Odd: Gain [mana]1[;] do [sword]<d6>,1,if(d%2 == 0){if(getstatusself(MANA) >= 1){removestatusself(MANA); attack(d*3); sfxdamage(target|d*3);};}else{inflictself(MANA); sfx(~_mana~); attack(d);};,,MAX4,,MAGIC,PINK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magnolia_downgraded,Even: Cost [mana]1[;] do [sword]<d6>|Odd: Gain [mana]1,1,if(d%2 == 0){if(getstatusself(MANA) >= 1){removestatusself(MANA); attack(d); sfxdamage(target|d);};}else{inflictself(MANA); sfx(~_mana~);};,,MAX4,,MAGIC,PINK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Carnation,Cost [mana]3: [sword]<triple> damage|If [mana] less than 3: gain [mana]1,1,if(getstatusself(MANA) >= 3){removestatusself(MANA|3); sfx(~_mana~); attack(d*3); sfxdamage(target|d*3);}; if(getstatusself(MANA) < 3){inflictself(MANA); sfx(~_mana~);};,,MAX4,,MAGIC,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,if(getstatusself(MANA) >= 3){e.castdirection = 1;}else{e.castdirection = 0;};,,
Carnation_upgraded,Cost [mana]3: [sword]<triple> damage|If [mana] less than 3: gain [mana]1,1,if(getstatusself(MANA) >= 3){removestatusself(MANA|3); sfx(~_mana~); attack(d*3); sfxdamage(target|d*3);}; if(getstatusself(MANA) < 3){inflictself(MANA); sfx(~_mana~);};,,MAX5,,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,if(getstatusself(MANA) >= 3){e.castdirection = 1;}else{e.castdirection = 0;};,,
Carnation_downgraded,Cost [mana]3: [sword]<d6> damage|If [mana] less than 3: gain [mana]1,1,if(getstatusself(MANA) >= 3){removestatusself(MANA|3); sfx(~_mana~); attack(d*3); sfxdamage(target|d*3);}; if(getstatusself(MANA) < 3){inflictself(MANA); sfx(~_mana~);};,,MAX4,,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,if(getstatusself(MANA) >= 3){e.castdirection = 1;}else{e.castdirection = 0;};,,
Swingset,Do [sword]<d6> damage. In [jinx]<d6>|turns[;] gain [mana]<d6> mana,1,attack(d); sfxdamage(target|d); sfx(~_thinghappens~|~~|0.2); jinx(~Swingset~|~gain [mana]%VAR% mana~|~Gain [mana]%VAR% mana~|~inflict(MANA[;]%VAR%); sfx(\~_mana\~);~|self|self|d|d);,,NORMAL,,WEAPON,PINK,change_poison,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Swingset_upgraded,Do [sword]<d6> damage. In [jinx]<d6>|turns[;] gain [mana]<double> mana,1,attack(d); sfxdamage(target|d); sfx(~_thinghappens~|~~|0.2); jinx(~Swingset~|~gain [mana]%VAR% mana~|~Gain [mana]%VAR% mana~|~inflict(MANA[;]%VAR%); sfx(\~_mana\~);~|self|self|d|d*2);,,NORMAL,,WEAPON,PINK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Swingset_downgraded,Do [sword]<d6> damage. In [jinx]<d6>|turns[;] gain [mana]<d6> mana,1,attack(d); sfxdamage(target|d); sfx(~_thinghappens~|~~|0.2); jinx(~Swingset~|~gain [mana]%VAR% mana~|~Gain [mana]%VAR% mana~|~inflict(MANA[;]%VAR%); sfx(\~_mana\~);~|self|self|d|d);,,MAX4,,WEAPON,PINK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pear Spear,Restore [heal]4 health|Gain [mana]1 mana,1,pierceattackself(-4); inflictself(MANA); sfx(~_heal~); sfx(~_mana~|~~|0.2);,,REQUIRE6,,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Pear Spear_upgraded,Restore [heal]6 health|Gain [mana]1 mana,1,pierceattackself(-6); inflictself(MANA); sfx(~_heal~);  sfx(~_mana~|~~|0.2);,,REQUIRE6,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pear Spear_downgraded,Restore [heal]2 health|Gain [mana]1 mana,1,pierceattackself(-2); inflictself(MANA); sfx(~_heal~); sfx(~_mana~|~~|0.2);,,REQUIRE6,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pansy,[sword]1[;] add [weaken]1 weaken. Repeat|per [mana]6 mana you have,1,var times = getstatusself(MANA)/6; for(x in 0...times+1){attack(1); inflict(WEAKEN);}; sfxdamage(target|times); sfx(~_weaken~);,,COUNTDOWN,6,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Pansy_upgraded,[sword]1[;] add [weaken]1 weaken. Repeat|per [mana]4 mana you have,1,var times = getstatusself(MANA)/4; for(x in 0...times+1){attack(1); inflict(WEAKEN);}; sfxdamage(target|times); sfx(~_weaken~);,,COUNTDOWN,6,WEAPON,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pansy_downgraded,Do [sword]1 dmg[;] add [weaken]1 weaken,1,attack(1); inflict(WEAKEN); sfxdamage(target|1); sfx(~_weaken~);,,COUNTDOWN,6,WEAPON,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Twolip,Deal [sword]2 damage|Gain [mana]2 mana,1,attack(2); sfxdamage(target|2); inflictself(MANA[;]2); sfx(~_magic~);,,REQUIRE2,,MAGIC,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Twolip_upgraded,Do [sword]2[;] gain [mana]2|,1,attack(2); sfxdamage(target|2); inflictself(MANA[;]2); sfx(~_magic~);,,REQUIRE2,,MAGIC,RED,,,,,2,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Twolip_downgraded,Gain [mana]2 mana,1,inflictself(MANA[;]2); sfx(~_magic~);,,REQUIRE2|REQUIRE2,,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Marigold,Duplicate a dice|(Cost [mana]3: re-equip this),1,givedice([d|d]);,,MAX4,,MAGIC,YELLOW,change_power,change_power,,,-1,YES,NO,YES,NO,NO,NO,NO,YES,1,,,,,,,,if(getstatusself(MANA) >= 3){removestatusself(MANA|3); sfx(~_mana~);}else{e.usesleft = 0;};,,
Marigold_upgraded,Duplicate a dice|(Cost [mana]3: re-equip this),1,givedice([d|d]);,,NORMAL,,MAGIC,YELLOW,,,,,-1,YES,NO,YES,NO,NO,NO,NO,YES,,,,,,,,,if(getstatusself(MANA) >= 3){removestatusself(MANA|3); sfx(~_mana~);}else{e.usesleft = 0;};,,
Marigold_downgraded,Duplicate a dice|(Cost [mana]3: re-equip this),1,givedice([d|d]);,,MAX2,,MAGIC,YELLOW,,,,none,-1,YES,NO,YES,NO,NO,NO,NO,YES,,,,,,,,,if(getstatusself(MANA) >= 3){removestatusself(MANA|3); sfx(~_mana~);}else{e.usesleft = 0;};,,
Lavender,Restore [heal]<d6> health|(Cost [mana]<d6>: +[shield]<d6> shield),1,attackself(-d); sfx(~_heal~); if(getstatusself(MANA) >= d){removestatusself(MANA[;]d); inflictself(SHIELD[;]d);  sfx(~_shield~|~~|0.2);};,,MAX3,,MAGIC,PURPLE,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Lavender_upgraded,Restore [heal]<d6> health|(Cost [mana]<d6>: +[shield]<d6> shield),1,attackself(-d); sfx(~_heal~); if(getstatusself(MANA) >= d){removestatusself(MANA[;]d); inflictself(SHIELD[;]d);  sfx(~_shield~|~~|0.2);};,,MAX4,,MAGIC,PURPLE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Lavender_downgraded,Restore [heal]<d6> health|(Cost [mana]<d6>: +[shield]<d6> shield),1,attackself(-d); sfx(~_heal~); if(getstatusself(MANA) >= d){removestatusself(MANA[;]d); inflictself(SHIELD[;]d);  sfx(~_shield~|~~|0.2);};,,MAX2,,MAGIC,PURPLE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Begonia,[curse]Curse self[;] deal [sword]4|damage per enemy [mana]mana,1,inflictself(CURSE); sfx(~_curse~); if(getstatus(MANA) > 0){attack(getstatus(MANA) * 4); sfxdamage(target|getstatus(MANA) * 4);};,,NORMAL,,MAGIC,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,1,,,,,,,,,,
Begonia_upgraded,[curse]Curse self[;] deal [sword]6|damage per enemy [mana]mana,1,inflictself(CURSE); sfx(~_curse~); if(getstatus(MANA) > 0){attack(getstatus(MANA) * 6); sfxdamage(target|getstatus(MANA) * 6);};,,NORMAL,,MAGIC,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Begonia_downgraded,[curse]Curse self[;] deal [sword]4|damage per enemy [mana]mana,1,inflictself(CURSE); sfx(~_curse~); if(getstatus(MANA) > 0){attack(getstatus(MANA) * 2); sfxdamage(target|getstatus(MANA) * 2);};,,NORMAL,,MAGIC,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Dogwood,Deal [sword]<d6> damage|(If [mana]>=<d6>: do [sword]<d6> more,1,if(getstatusself(MANA) >= d){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,,MAX5,,MAGIC,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Dogwood_upgraded,Deal [sword]<d6> damage|(If [mana]>=<d6>: do [sword]<d6> more,1,if(getstatusself(MANA) >= d){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,,NORMAL,,MAGIC,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dogwood_downgraded,Deal [sword]<d6> damage|(If [mana]>=<d6>: do [sword]<d6> more,1,if(getstatusself(MANA) >= d){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,,MAX3,,MAGIC,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Camellia,Duplicate a dice|(If [mana]>=<d6>: get 1 more copy),1,if(getstatusself(MANA) >=d){givedice([d|d|d]); sfx(~_mana~);}else{givedice([d|d]); sfx(~_thinghappens~);}; ,,MAX4,,MAGIC,RED,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,2,,,,,,,,,,
Camellia_upgraded,Duplicate a dice|(If [mana]>=<d6>: get 1 more copy),1,if(getstatusself(MANA) >=d){givedice([d|d|d]); sfx(~_mana~);}else{givedice([d|d]); sfx(~_thinghappens~);}; ,,NORMAL,,MAGIC,RED,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Camellia_downgraded,Duplicate a dice,1,givedice([d|d]); sfx(~_thinghappens~);,,MAX4,,MAGIC,RED,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Wisteria,Gain [mana]1 mana|On 6[;] get [mana]2 more,1,inflictself(MANA); if(d == 6){inflictself(MANA|2);}; sfx(~_mana~);,,EVEN,,MAGIC,PURPLE,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Wisteria_upgraded,Gain [mana]1 mana|On 6[;] get [mana]2 more,1,inflictself(MANA); if(d == 6){inflictself(MANA|2);}; sfx(~_mana~);,,NORMAL,,MAGIC,PURPLE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Wisteria_downgraded,Gain [mana]1 mana,1,inflictself(MANA); sfx(~_mana~);,,EVEN,,MAGIC,PURPLE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Plurale Tantrum,Fix your items' grammar|(Always offered as scrap),1,for(eq in self.equipment){if(eq.ready && eq.availablethisturn){var d = eq.fulldescription; var l = d.split(~dice~); if(l.length > 1){eq.fulldescription = l.join(~dices~); eq.animate(~flashandshake~);};};}; sfx(~openchest~);,Regenerate,EVEN,,WEAPON,GRAY,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,YES,NO,,,,,,,,,,,
Plurale Tantrum_upgraded,Fix your items' grammar|(Always offered as scrap),1,for(eq in self.equipment){if(eq.ready && eq.availablethisturn){var d = eq.fulldescription; var l = d.split(~dice~); if(l.length > 1){eq.fulldescription = l.join(~dices~); eq.animate(~flashandshake~);};};}; sfx(~openchest~);,Regenerate,NORMAL,,WEAPON,GRAY,,,,,0,YES,NO,YES,NO,NO,NO,YES,NO,,,,,,,,,,,
Plurale Tantrum_downgraded,Fix your items' grammer|(Always offered as scrap),1,for(eq in self.equipment){if(eq.ready && eq.availablethisturn){var d = eq.fulldescription; var l = d.split(~dice~); if(l.length > 1){eq.fulldescription = l.join(~douse~); eq.animate(~flashandshake~);};};}; sfx(~openchest~);,Regenerate,EVEN,,WEAPON,GRAY,,,,,0,YES,NO,YES,NO,NO,NO,YES,NO,,,,,,,,,,,
Blood Regen,Lose [heart]<d6>[;] but heal [heal]2|hp per turn for <d6> turns,1,if(simulation){ bonus(-1000); }else{ pierceattackself(d); sfx(~_drain~); inflictself(~regen~+d|2); };,Regenerate,NORMAL,,ITEM,RED,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Blood Regen_upgraded,Lose [heart]<d6>[;] but heal [heal]2|hp per turn for <double> turns,1,if(simulation){ bonus(-1000); }else{ pierceattackself(d); sfx(~_drain~); inflictself(~regen~+(d*2)|2); };,Regenerate,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Blood Regen_downgraded,Lose [heart]<d6> health,1,if(simulation){ bonus(-1000); }else{ pierceattackself(d); sfx(~_drain~);};,Regenerate,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~rlock~[;]0);,self.setvar(~rlock~[;]0),,,,var h = 0; if (self.getvar(~rlock~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h -= getstatusself(~regen~+i); if (self.getvar(~regen~+i) > 0) { m = i; }; removestatusself(~regen~+i|ALL); if(getstatusself(~regen~+(i+1)) > 0){inflictself(~regen~+i|getstatusself(~regen~+(i+1)));} }; if (h < 0) { sfx(~_heal~); attackself(h); }; } self.setvar(~rlock~[;] 1);,,,
Sprinkler,Bump a random dice[;]|repeats <d6> times,1,var poss = []; for(dice in self.dicepool){if(dice.available() && dice.basevalue < 6){poss.push(dice); };}; var x = 0; while(x < d){if(poss.length == 0){break;};x+=1; var r = rand(poss); r.basevalue = r.basevalue+1; r.animatereroll(r.basevalue|self.screenposition()|0); if(r.basevalue == 6){poss.remove(r);};}; if(d-x > 0){givedice(d-x);};,Megabump,MAX4,,ITEM,GREEN,change_poison,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sprinkler_upgraded,Bump a random dice[;]|repeats <d6> times,1,var poss = []; for(dice in self.dicepool){if(dice.available() && dice.basevalue < 6){poss.push(dice); };}; var x = 0; while(x < d){if(poss.length == 0){break;};x+=1; var r = rand(poss); r.basevalue = r.basevalue+1; r.animatereroll(r.basevalue|self.screenposition()|0); if(r.basevalue == 6){poss.remove(r);};}; if(d-x > 0){givedice(d-x);};,Megabump,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sprinkler_downgraded,Bump a random dice[;]|repeats <d6> times,1,var poss = []; for(dice in self.dicepool){if(dice.available() && dice.basevalue < 6){poss.push(dice);};}; var x = 0; while(x < d){if(poss.length == 0){break;};x+=1; var r = rand(poss); r.basevalue = r.basevalue+1; r.animatereroll(r.basevalue|self.screenposition()|0); if(r.basevalue == 6){poss.remove(r);};}; if(d-x > 0){givedice(d-x);};,Megabump,MAX2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Scales of Justdice,Average all your dice values,1,function floordiv(x|y){var t = 0; while(x > 0){x-=y; t++;};return(t);};var tot = 0; var count = 0; var ava=[]; for(dice in self.dicepool){if(dice.available()){tot+=dice.basevalue; count+=1;ava.push(dice);};}; var del = 0; for(dice in ava){trace(tot);trace(count); trace(~~); del+=0.05; dice.animatereroll(floordiv(tot|count)|self.screenposition()|del); tot-=floordiv(tot|count); count-=1;};,Magic Spanner,COUNTDOWN,5,ITEM,YELLOW,change_power,change_power,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Scales of Justdice_upgraded,Average all your dice values|,1,function floordiv(x|y){var t = 0; while(x > 0){x-=y; t++;};return(t);};var tot = 0; var count = 0; var ava=[]; for(dice in self.dicepool){if(dice.available()){tot+=dice.basevalue; count+=1;ava.push(dice);};}; var del = 0; for(dice in ava){trace(tot);trace(count); trace(~~); del+=0.05; dice.animatereroll(floordiv(tot|count)|self.screenposition()|del); tot-=floordiv(tot|count); count-=1;};,Magic Spanner,COUNTDOWN,5,ITEM,YELLOW,,,,none,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Scales of Justdice_downgraded,No effect,1,,Magic Spanner,COUNTDOWN,5,ITEM,YELLOW,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Swedge,Deal [sword]0 damage[;] twice|[gray](Reusable),1,attack(0); attack(0);  sfxdamage(target|0);,Finger Guns,NORMAL,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Swedge_upgraded,Deal [sword]0 damage[;] 3 times|[gray](Reusable),1,attack(0); attack(0); attack(0); sfxdamage(target|0);,Finger Guns,NORMAL,,WEAPON,RED,,,,none,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Swedge_downgraded,Deal [sword]0 damage,1,attack(0); sfxdamage(target|0);,Finger Guns,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Belated Delivery,In [jinx]<d6> turns[;]|get <d6> new dice,1,var dicearray = []; for(x in 0...d){dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6]));}; jinx(~Delivery!~|~get %VAR% new dice~|~Get %VAR% extra dice~|~for(x in ~+dicearray+~){inflict(\~stash\~+x);}; sfx(\~_thinghappens\~);~|self|target|d|d); sfx(~_magic~);,Magic Six,MAX4,,ITEM,PINK,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Belated Delivery_upgraded,In [jinx]<d6> turns[;]|get <d6> new dice,1,var dicearray = []; for(x in 0...d){dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6]));}; jinx(~Delivery!~|~get %VAR% new dice~|~Get %VAR% extra dice~|~for(x in ~+dicearray+~){inflict(\~stash\~+x);}; sfx(\~_thinghappens\~);~|self|target|d|d); sfx(~_magic~);,Magic Six,NORMAL,,ITEM,PINK,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Belated Delivery_downgraded,In [jinx]<d6> turns[;]|get <d6> new dice,1,var dicearray = []; for(x in 0...d){dicearray.push(rand([1[;]2[;]3[;]4[;]5[;]6]));}; jinx(~Delivery!~|~get %VAR% new dice~|~Get %VAR% extra dice~|~for(x in ~+dicearray+~){inflict(\~stash\~+x);}; sfx(\~_thinghappens\~);~|self|target|d|d); sfx(~_magic~);,Magic Six,MAX2,,ITEM,PINK,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Auto Turret,Deal [sword]3 damage at the|start of each turn,1,attack(3); sfxdamage(target|3);,Bubble Gun,,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.doequipmentaction(self|target|e.castdirection|[]|0|true);,,,,,,
Auto Turret_upgraded,Deal [sword]4 damage at the|start of each turn,1,attack(4); sfxdamage(target|4);,Bubble Gun,,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.doequipmentaction(self|target|e.castdirection|[]|0|true);,,,,,,
Auto Turret_downgraded,Deal [sword]2 damage at the|start of each turn,1,attack(2); sfxdamage(target|2);,Bubble Gun,,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.doequipmentaction(self|target|e.castdirection|[]|0|true);,,,,,,
Crescent Pendant,Roll a six[;] return lower dice,1,var x = actualdice[0].basevalue; if(actualdice[1].basevalue < x){x = actualdice[1].basevalue;}; givedice([6|x]);,Magic Six,NORMAL|NORMAL,6,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crescent Pendant_upgraded,Roll a six[;] return first dice,1,givedice([6|actualdice[0].basevalue]);,Magic Six,NORMAL|NORMAL,6,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crescent Pendant_downgraded,Roll a six,1,givedice([6]);,Magic Six,NORMAL|NORMAL,6,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cleaver,Deal [sword]10 damage|Cooldown of 1 turn,1,attack(10); sfxdamage(target|10); e.availablenextturn = false;,Throwing Knife,COUNTDOWN,10,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Cleaver_upgraded,Deal [sword]13 damage|Cooldown of 1 turn,1,attack(13); sfxdamage(target|13); e.availablenextturn = false;,Throwing Knife,COUNTDOWN,10,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Cleaver_downgraded,Deal [sword]5 damage|Cooldown of 1 turn,1,attack(5); sfxdamage(target|5); e.availablenextturn = false;,Throwing Knife,COUNTDOWN,10,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Splutter,Split one dice in two|Return the other,1,var r = rand([0|1]); var dicearr = []; dicearr.push(actualdice[r].basevalue); dicearr = dicearr.concat(split(actualdice[1-r].basevalue|2)); givedice(dicearr);,Magic Lockpick,MIN2|MIN2,,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Splutter_upgraded,Split first dice in two|Return the other,1,givedice(split(actualdice[0].basevalue|2).concat(actualdice[1].basevalue));,Magic Lockpick,MIN2|MIN2,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Splutter_downgraded,Split one dice in two,1,givedice(split(actualdice[rand([0|1])].basevalue));,Magic Lockpick,MIN2|MIN2,,MAGIC,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kalis,Deal [sword]1 damage[;] twice|[gray](Reusable),1,attack(1); attack(1); sfxdamage(target|2);,Bubble Gun,NORMAL|NORMAL,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kalis_upgraded,Deal [sword]1 damage[;] 3 times|[gray](Reusable),1,attack(1);  attack(1); attack(1); sfxdamage(target|3);,Bubble Gun,NORMAL|NORMAL,,WEAPON,RED,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kalis_downgraded,Deal [sword]1 damage|[gray](Reusable),1,attack(1); sfxdamage(target|1);,Bubble Gun,NORMAL|NORMAL,,WEAPON,RED,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Swizzle,Dice value +1[;] then|flip it upside down,1,if(d == 6){givedice([1[;]1]);}else{givedice(6-d);};,Magic Lantern,MAX5,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Swizzle_upgraded,Dice value -1[;] then|flip it upside down,1,givedice(8-d);,Magic Lantern,MIN2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Swizzle_downgraded,Dice value +1[;] then|flip it upside down,1,if(d == 6){givedice([1[;]1]);}else{givedice(6-d);};,Magic Lantern,MAX2,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cup of Tea,Restore [heal]4 health|Gain [shield]4 shield,1,pierceattackself(-4); inflictself(SHIELD|4); sfx(~_cure~);,Revitalize,COUNTDOWN,16,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cup of Tea_upgraded,Restore [heal]5 health|Gain [shield]5 shield,1,pierceattackself(-5); inflictself(SHIELD|5); sfx(~_cure~);,Revitalize,COUNTDOWN,16,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cup of Tea_downgraded,Restore [heal]2 health|Gain [shield]2 shield,1,pierceattackself(-2); inflictself(SHIELD|2); sfx(~_cure~);,Revitalize,COUNTDOWN,16,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Unsettling Dream,Halve the enemy's health,1,pierceattack(target.hp/2); sfxdamage(target|target.hp/2);,Throwing Knife,COUNTDOWN,50,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Unsettling Dream_upgraded,Deal damage equal to half|of enemy's max health,1,pierceattack(target.maxhp/2); sfxdamage(target|target.maxhp/2);,Throwing Knife,COUNTDOWN,50,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Unsettling Dream_downgraded,Reduce enemy health|by a quarter,1,pierceattack(target.hp/4); sfxdamage(target|target.hp/4);,Throwing Knife,COUNTDOWN,50,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Megaclone,Duplicate all your dice,1,var dicearray = []; for(dice in self.dicepool){if(dice.available()){dicearray.push(dice.basevalue);};}; givedice(dicearray);,Clone Device,COUNTDOWN,30,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Megaclone_upgraded,Get 2 copies of|all of your dice,1,var dicearray = []; for(dice in self.dicepool){if(dice.available()){dicearray.push(dice.basevalue); dicearray.push(dice.basevalue);};}; givedice(dicearray);,Clone Device,COUNTDOWN,30,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Megaclone_downgraded,Duplicate one of your dice,1,var dicearray = []; for(dice in self.dicepool){if(dice.available()){dicearray.push(dice.basevalue);};}; givedice(rand(dicearray));,Clone Device,COUNTDOWN,30,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Weapons Hot,Gain [thorns]2 thorns[;] inflict|[weaken]2 weaken[;] gain [fury]Fury,2,inflictself(THORNS|2); inflict(WEAKEN|2); inflictself(FURY); sfx(~_fury~); sfx(~_cure~);,Fury,COUNTDOWN,25,ITEM,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Weapons Hot_upgraded,Gain [thorns]3 thorns[;] inflict|[weaken]3 weaken[;] gain [fury]Fury,2,inflictself(THORNS|3); inflict(WEAKEN|3); inflictself(FURY); sfx(~_fury~); sfx(~_cure~);,Fury,COUNTDOWN,25,ITEM,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Weapons Hot_downgraded,Gain [thorns]1 thorns[;] inflict|[weaken]1 weaken[;] gain [fury]Fury,2,inflictself(THORNS|1); inflict(WEAKEN|1); inflictself(FURY); sfx(~_fury~); sfx(~_cure~);,Fury,COUNTDOWN,25,ITEM,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Threeken,Inflict [weaken]3 weaken,2,inflict(WEAKEN|3); sfx(~_weaken~);,Burrower,REQUIRE3,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Threeken_upgraded,Inflict [weaken]3 weaken|[gray](3 uses this turn),2,inflict(WEAKEN|3); sfx(~_weaken~);,Burrower,REQUIRE3,,WEAPON,ORANGE,,,,,3,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Threeken_downgraded,Inflict [weaken]3 weaken,2,inflict(WEAKEN|3); sfx(~_weaken~);,Burrower,REQUIRE3|REQUIRE3|REQUIRE3,,WEAPON,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crown and Anchor,Even: Inflict [weaken]1 weaken|Odd: Gain [thorns]1 thorns,1,if(d%2 == 0){inflict(WEAKEN); sfx(~_weaken~);}else{inflictself(THORNS); sfx(~_thorns~);};,Pinprick,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,SPIKEDSHIELD,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crown and Anchor_upgraded,Even: [weaken]1 [;] Odd: [thorns]1 |[gray](Reusable),1,if(d%2 == 0){inflict(WEAKEN); sfx(~_weaken~);}else{inflictself(THORNS); sfx(~_thorns~);};,Pinprick,NORMAL,,ITEM,GREEN,,,,,-1,SPIKEDSHIELD,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crown and Anchor_downgraded,Even: Inflict [weaken]1 weaken|Odd: Gain [thorns]1 thorns,1,if(d%2 == 0){inflict(WEAKEN); sfx(~_weaken~);}else{inflictself(THORNS); sfx(~_thorns~);};,Pinprick,MAX3,,ITEM,GREEN,,,,,0,SPIKEDSHIELD,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Surfive,Survive the next fatal blow,1,inflictself(SURVIVE); sfx(~_survive~);,Phoenix Down,REQUIRE5,,ITEM,PINK,change_power,change_power,survive,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Surfive_upgraded,Survive the next fatal blow,1,inflictself(SURVIVE); sfx(~_survive~);,Phoenix Down,MIN5,,ITEM,PINK,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Surfive_downgraded,Survive the next fatal blow,1,inflictself(SURVIVE); sfx(~_survive~);,Phoenix Down,REQUIRE5|REQUIRE5,,ITEM,PINK,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Surfive?,Survive for 3 turns...|[gray](once per battle),1,inflictself(SURVIVE); sfx(~_survive~);,Phoenix Down?,REQUIRE5,,ITEM,PINK,change_power,change_power,,,0,YES,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Surfive?_upgraded,Survive for 3 turns...|[gray](once per battle),1,inflictself(SURVIVE); sfx(~_survive~);,Phoenix Down?,MIN5,,ITEM,PINK,,,,,0,YES,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Surfive?_downgraded,Survive for 3 turns...|[gray](once per battle),1,inflictself(SURVIVE); sfx(~_survive~);,Phoenix Down?,REQUIRE5|REQUIRE5,,ITEM,PINK,,,,,0,YES,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Illumineight,Get both dice next turn,1,inflictself(~illuminate~); for(x in [0|1]){inflictself(~stash~+actualdice[x].basevalue);}; sfx(~magic_gaindice~);,Magic Lantern,NORMAL|NORMAL,8,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Illumineight_upgraded,Get both dice next turn|,1,inflictself(~illuminate~); for(x in [0|1]){inflictself(~stash~+actualdice[x].basevalue);}; sfx(~magic_gaindice~);,Magic Lantern,NORMAL|NORMAL,8,ITEM,YELLOW,,,,,8,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Illumineight_downgraded,Get both dice next turn|,1,inflictself(~illuminate~); for(x in [0|1]){inflictself(~stash~+actualdice[x].basevalue);}; sfx(~magic_gaindice~);,Magic Lantern,ODD|ODD,8,ITEM,YELLOW,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Curseven,Inflict [curse]7 curses,1,inflict(CURSE|7); sfx(~_curse~);,Ragnarok,COUNTDOWN,77,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Curseven_upgraded,Inflict [curse]7 curses|,1,inflict(CURSE|7); sfx(~_curse~);,Ragnarok,COUNTDOWN,77,MAGIC,PURPLE,,,,,7,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Curseven_downgraded,[curse]Curse the enemy,1,inflict(CURSE); sfx(~_curse~);,Ragnarok,COUNTDOWN,77,MAGIC,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tesseract,Gain a blessing 4 times|([heal]3[;] [shield]4[;] [dodge]1[;] [thorns]1[;] [reduce]1[]),1,var shield = false; var dodge = false; var heal = false; for(x in 0...4){var r = rand([0|1|2|3|4]); if(r == 0){attackself(-3); heal = true;}else if(r == 1){inflictself(SHIELD|4); shield = true;}else if(r == 2){inflictself(DODGE); dodge = true;}else if(r == 3){inflictself(THORNS); shield = true;}else if(r == 4){inflictself(REDUCE); shield = true;};}; if(shield){sfx(~_shield~);}; if(heal){sfx(~_heal~);}; if(dodge){sfx(~_dodge~);};,Power Up,COUNTDOWN,40,MAGIC,YELLOW,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tesseract_upgraded,Gain a blessing 6 times|([heal]3[;] [shield]4[;] [dodge]1[;] [thorns]1[;] [reduce]1[]),1,var shield = false; var dodge = false; var heal = false; for(x in 0...6){var r = rand([0|1|2|3|4]); if(r == 0){attackself(-3); heal = true;}else if(r == 1){inflictself(SHIELD|4); shield = true;}else if(r == 2){inflictself(DODGE); dodge = true;}else if(r == 3){inflictself(THORNS); shield = true;}else if(r == 4){inflictself(REDUCE); shield = true;};}; if(shield){sfx(~_shield~);}; if(heal){sfx(~_heal~);}; if(dodge){sfx(~_dodge~);};,Power Up,COUNTDOWN,40,MAGIC,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tesseract_downgraded,Gain a blessing 2 times|([heal]3[;] [shield]4[;] [dodge]1[;] [thorns]1[;] [reduce]1[]),1,var shield = false; var dodge = false; var heal = false; for(x in 0...2){var r = rand([0|1|2|3|4]); if(r == 0){attackself(-3); heal = true;}else if(r == 1){inflictself(SHIELD|4); shield = true;}else if(r == 2){inflictself(DODGE); dodge = true;}else if(r == 3){inflictself(THORNS); shield = true;}else if(r == 4){inflictself(REDUCE); shield = true;};}; if(shield){sfx(~_shield~);}; if(heal){sfx(~_heal~);}; if(dodge){sfx(~_dodge~);};,Power Up,COUNTDOWN,40,MAGIC,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Locktrick,Dice value +1[;] then|split it in two,1,if(d == 6){givedice(rand([[1|6]|[2|5]|[3|4]|[4|3]|[5|2]|[6|1]]));}else{givedice(split(d+1));};,Magic Lockpick,ODD,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Locktrick_upgraded,Dice value +1[;] then|split it in two,1,if(d == 6){givedice(rand([[1|6]|[2|5]|[3|4]|[4|3]|[5|2]|[6|1]]));}else{givedice(split(d+1));};,Magic Lockpick,MAX5,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Locktrick_downgraded,Split a dice in two,1,givedice(split(d));,Magic Lockpick,ODD,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Momentum,Take an extra turn[;]|immediately,1,inflictself(EXTRATURN);  if(self.getvar(~furytest~) == 0){self.endturnnow();}; sfx(~_fury~); ,Time Stop,COUNTDOWN,60,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,self.setvar(~furytest~|getstatusself(FURY));,,donothing();
Momentum_upgraded,Take an extra turn[;]|after you end this one,1,inflictself(EXTRATURN); sfx(~_fury~);,Time Stop,COUNTDOWN,60,ITEM,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,donothing();
Momentum_downgraded,Roll an extra dice,1,givedice();,Time Stop,COUNTDOWN,60,ITEM,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,donothing();
Death Penalty,Deal [sword]<d6> damage|10% chance to curse enemy,1,var odds = 10; if(getstatusself(~luck~) > 0){ odds += 10; } else if(getstatusself(~luck+~) > 0){ odds = 100; } attack(d); sfxdamage(d); if(chance(odds)) { self.textparticle(~Success!~); inflict(CURSE); sfx(~_curse~); },Dramatic Pause,MAX5,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Death Penalty_upgraded,Deal [sword]<d6> damage|25% chance to curse enemy,1,var odds = 25; if(getstatusself(~luck~) > 0){ odds += 10; } else if(getstatusself(~luck+~) > 0){ odds = 100; } attack(d); sfxdamage(d); if(chance(odds)) { self.textparticle(~Success!~); inflict(CURSE); sfx(~_curse~); },Dramatic Pause,MAX5,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Death Penalty_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(d);,Dramatic Pause,MAX5,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Full House,Roll a 1[;] 2[;] 3[;] 4[;] 5 and 6,1,givedice([1[;]2[;]3[;]4[;]5[;]6]);,Clone Device,COUNTDOWN,42,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Full House_upgraded,Roll a 1[;] 2[;] 3[;] 4[;] 5 and 6|[gray](2 uses this turn),1,givedice([1[;]2[;]3[;]4[;]5[;]6]);,Clone Device,COUNTDOWN,42,ITEM,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Full House_downgraded,Roll a 1[;] 2[;] and 3,1,givedice([1[;]2[;]3]);,Clone Device,COUNTDOWN,42,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hairpin,Dice value +1[;] 50%|chance to get -1 instead,1,var odds = 50; if(getstatusself(~luck~) > 0){ odds += 50; } else if(getstatusself(~luck+~) > 0){ odds = 100; }; if(chance(odds)) { self.textparticle(~Success?~); if(d > 1){givedice(d-1);};}else{givedice(d+1);};,Megabump,NORMAL,,WEAPON,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hairpin_upgraded,Dice value +1[;] 50%|chance to get -1 instead|[gray](3 uses per turn),1,var odds = 50; if(getstatusself(~luck~) > 0){ odds += 50; } else if(getstatusself(~luck+~) > 0){ odds = 100; }; if(chance(odds)) { self.textparticle(~Success?~); if(d > 1){givedice(d-1);};}else{givedice(d+1);};,Megabump,NORMAL,,WEAPON,GREEN,,,,,3,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hairpin_downgraded,Dice value -1,1,givedice(d-1);,Megabump,NORMAL,,WEAPON,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Limited Moon,Do [sword]<double>[;] 50% chance|to hit you for [sword]<double> too,1,var odds = 50; if(getstatusself(~luck~) > 0){ odds += 50; } else if(getstatusself(~luck+~) > 0){ odds = 100; }; attack(d*2); sfxdamage(d*2); if(chance(odds)) { self.textparticle(~Success?~); boomerang(d*2);},Two Handed Knife,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Limited Moon_upgraded,Do [sword]<double>[;] 50% chance|to hit you for [sword]<d6> too,1,var odds = 50; if(getstatusself(~luck~) > 0){ odds += 50; } else if(getstatusself(~luck+~) > 0){ odds = 100; }; attack(d*2); sfxdamage(d*2); if(chance(odds)) { self.textparticle(~Success?~); boomerang(d);},Two Handed Knife,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Limited Moon_downgraded,Do [sword]<d6>[;] 50% chance|to hit you for [sword]<double> too,1,var odds = 50; if(getstatusself(~luck~) > 0){ odds += 50; } else if(getstatusself(~luck+~) > 0){ odds = 100; }; attack(d); sfxdamage(target|d); if(chance(odds)) { self.textparticle(~Success?~); boomerang(d*2);},Two Handed Knife,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Conformer,Dice value = half of|your CPU counter (<var:halfcpucounter>),1,givedice(self.getvar(~halfcpucounter~));,,EVEN,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~halfcpucounter~|0);,,if(self.roll_total % 2 == 0){self.setvar(~halfcpucounter~|self.roll_total/2);}else{self.setvar(~halfcpucounter~|(self.roll_total-1)/2);};,,,,,
Conformer_upgraded,Dice value = half of|your CPU counter (<var:halfcpucounter>),1,givedice(self.getvar(~halfcpucounter~));,,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~halfcpucounter~|0);,,if(self.roll_total % 2 == 0){self.setvar(~halfcpucounter~|self.roll_total/2);}else{self.setvar(~halfcpucounter~|(self.roll_total-1)/2);};,,,,,
Conformer_downgraded,Dice value = half of|your CPU counter (<var:halfcpucounter>),1,givedice(self.getvar(~halfcpucounter~));,,REQUIRE6,,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~halfcpucounter~|0);,,if(self.roll_total % 2 == 0){self.setvar(~halfcpucounter~|self.roll_total/2);}else{self.setvar(~halfcpucounter~|(self.roll_total-1)/2);};,,,,,
Marvellous Cheer,[sword]3 damage. On jackpot[;]|drain [heart]3 hp instead,1,if(self.roll_jackpot > 0){drain(3); sfx(~_drain~);}else{attack(3); sfxdamage(target|3);};,,COUNTDOWN,7,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Marvellous Cheer_upgraded,[sword]3 damage. On jackpot[;]|drain [heart]3 hp as well,1,attack(3); if(self.roll_jackpot > 0){drain(3); sfx(~_drain~|~~|0.2);}; sfxdamage(target|3);,,COUNTDOWN,7,WEAPON,RED,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Marvellous Cheer_downgraded,Deal [sword]3 damage,1,attack(3); sfxdamage(target|3);,,COUNTDOWN,7,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Solder,Combine dice|[gray](Reusable),1,givedice(6);,Magic Six,NORMAL|NORMAL,6,ITEM,GREEN,change_power,change_power,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Solder_upgraded,Combine dice|[gray](Reusable),1,givedice(6);,Magic Six,NORMAL|NORMAL,6,ITEM,GREEN,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Solder_downgraded,Combine dice,1,givedice(6);,Magic Six,NORMAL|NORMAL,6,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Velcro,Average the dice values,1,givedice([(actualdice[0].basevalue + actualdice[1].basevalue) / 2[;](actualdice[0].basevalue + actualdice[1].basevalue + 1) / 2]);,Magic Six,NORMAL|NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Velcro_upgraded,Average the dice values|[gray](3 uses this turn),1,givedice([(actualdice[0].basevalue + actualdice[1].basevalue) / 2[;](actualdice[0].basevalue + actualdice[1].basevalue + 1) / 2]);,Magic Six,NORMAL|NORMAL,,ITEM,GREEN,,,,,3,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Velcro_downgraded,Average the dice values,1,givedice([(actualdice[0].basevalue + actualdice[1].basevalue) / 2[;](actualdice[0].basevalue + actualdice[1].basevalue + 1) / 2]);,Magic Six,MAX3|MAX3,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tin Snips,Combine dice[;] then|split total in three,1,if(d == 1){givedice(1);}else if(d == 2){givedice([1|1]); self.textparticle(~Nice try~);}else if(d < 13){var values = [[[]][;][[]][;][[1[;]1[;]1]][;][[1[;]1[;]2]][;][[1[;]2[;]2][;][1[;]1[;]3]][;][[1[;]1[;]4][;][1[;]2[;]3][;][2[;]2[;]2]][;][[1[;]1[;]5][;][1[;]2[;]4][;][1[;]3[;]3][;][2[;]2[;]3]][;][[1[;]1[;]6][;][1[;]2[;]5][;][1[;]3[;]4][;][2[;]2[;]4][;][2[;]3[;]3]][;][[1[;]2[;]6][;][1[;]3[;]5][;][1[;]4[;]4][;][2[;]3[;]4][;][3[;]3[;]3]][;][[1[;]3[;]6][;][1[;]4[;]5][;][2[;]2[;]6][;][2[;]3[;]5][;][2[;]4[;]4][;][3[;]3[;]4]][;][[1[;]4[;]6][;][1[;]5[;]5][;][2[;]4[;]5][;][3[;]3[;]5][;][3[;]4[;]4]][;][[1[;]5[;]6][;][2[;]4[;]6][;][3[;]3[;]6][;][3[;]4[;]5][;][4[;]4[;]4]]]; var idxs = [[0[;]1[;]2][;][0[;]2[;]1][;][1[;]0[;]2][;][1[;]2[;]0][;][2[;]0[;]1][;][2[;]1[;]0]]; var val = rand(values[d-1]); var idx = rand(idxs); givedice([val[idx[0]]|val[idx[1]]|val[idx[2]]]);}else{givedice(d);}; //consider trying your own split function?,Magic Six,MIN2|MIN2,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tin Snips_upgraded,Combine then split into 3|[gray](2 uses this turn),1,if(d == 1){givedice(1);}else if(d == 2){givedice([1|1]); self.textparticle(~Nice try~);}else if(d < 13){var values = [[[]][;][[]][;][[1[;]1[;]1]][;][[1[;]1[;]2]][;][[1[;]2[;]2][;][1[;]1[;]3]][;][[1[;]1[;]4][;][1[;]2[;]3][;][2[;]2[;]2]][;][[1[;]1[;]5][;][1[;]2[;]4][;][1[;]3[;]3][;][2[;]2[;]3]][;][[1[;]1[;]6][;][1[;]2[;]5][;][1[;]3[;]4][;][2[;]2[;]4][;][2[;]3[;]3]][;][[1[;]2[;]6][;][1[;]3[;]5][;][1[;]4[;]4][;][2[;]3[;]4][;][3[;]3[;]3]][;][[1[;]3[;]6][;][1[;]4[;]5][;][2[;]2[;]6][;][2[;]3[;]5][;][2[;]4[;]4][;][3[;]3[;]4]][;][[1[;]4[;]6][;][1[;]5[;]5][;][2[;]4[;]5][;][3[;]3[;]5][;][3[;]4[;]4]][;][[1[;]5[;]6][;][2[;]4[;]6][;][3[;]3[;]6][;][3[;]4[;]5][;][4[;]4[;]4]]]; var idxs = [[0[;]1[;]2][;][0[;]2[;]1][;][1[;]0[;]2][;][1[;]2[;]0][;][2[;]0[;]1][;][2[;]1[;]0]]; var val = rand(values[d-1]); var idx = rand(idxs); givedice([val[idx[0]]|val[idx[1]]|val[idx[2]]]);}else{givedice(d);}; //consider trying your own split function?,Magic Six,MIN2|MIN2,,ITEM,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Tin Snips_downgraded,Split a dice in three,1,givedice(split(d|3|false));,Magic Six,MIN3,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Triskaidekaphobia,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d);,Shuriken,NORMAL|NORMAL|NORMAL,13,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Triskaidekaphobia_upgraded,Deal [sword]<d6> damage[;]|return first dice,1,attack(d); sfxdamage(target|d); givedice(actualdice[0].basevalue);,Shuriken,NORMAL|NORMAL|NORMAL,13,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Triskaidekaphobia_downgraded,Deal [sword]7 damage,1,attack(7); sfxdamage(target|7);,Shuriken,NORMAL|NORMAL|NORMAL,13,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Hexatomb,Lose [heart]<d6> health|Gain [fury] Fury,1,pierceattackself(d); inflictself(FURY); sfx(~_drain~); sfx(~_fury~);,Steel Skin,NORMAL,,WEAPON,RED,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Hexatomb_upgraded,Lose [heart]<d6> hp[;] gain [fury] Fury|[gray](2 uses this turn),1,pierceattackself(d); inflictself(FURY); sfx(~_drain~); sfx(~_fury~);,Steel Skin,NORMAL,,WEAPON,RED,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Hexatomb_downgraded,Lose [heart]<d6> health|Gain [fury] Fury,1,pierceattackself(d); inflictself(FURY); sfx(~_drain~); sfx(~_fury~);,Steel Skin,MIN4,,WEAPON,RED,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Bowsaw,Chop the higher dice so both|are equal (keep the excess),1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a == b){givedice([a|b]);}else{var max = a; var min = b; if(b > a){max = b; min = a;}; givedice([min|min|max-min]);};,Magic Six,NORMAL|NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bowsaw_upgraded,Chop the higher dice so both|are equal (keep the excess)|[gray](2 uses this turn),1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a == b){givedice([a|b]);}else{var max = a; var min = b; if(b > a){max = b; min = a;}; givedice([min|min|max-min]);};,Magic Six,NORMAL|NORMAL,,ITEM,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bowsaw_downgraded,Set the higher dice equal|to the lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a == b){givedice([a|b]);}else{var max = a; var min = b; if(b > a){max = b; min = a;}; givedice([min|min]);};,Magic Six,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Belt Sander,Split 1s from the higher|dice until they're equal,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var max = a; var min = b; if(b > a){max = b; min = a;}; var dicearray = [min|min]; if(max-min > 0){for(x in 0...max-min){dicearray.push(1);};}; givedice(dicearray);,Magic Six,MIN4|MIN4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Belt Sander_upgraded,Split 1s from the higher|dice until they're equal,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var max = a; var min = b; if(b > a){max = b; min = a;}; var dicearray = [min|min]; if(max-min > 0){for(x in 0...max-min){dicearray.push(1);};}; givedice(dicearray);,Magic Six,MIN3|MIN3,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Belt Sander_downgraded,Return 2 ones,1,givedice([1|1]);,Magic Six,MIN4|MIN4,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blind Rage,Gain [fury] fury[;] but|also [curse] curse yourself,1,inflictself(FURY); sfx(~_fury~); inflictself(CURSE); sfx(~_curse~);,Dramatic Pause,EVEN,,ITEM,PURPLE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Blind Rage_upgraded,Gain [fury] fury and [curse] curse|[gray](3 uses this turn),1,inflictself(FURY); sfx(~_fury~); inflictself(CURSE); sfx(~_curse~);,Dramatic Pause,EVEN,,ITEM,PURPLE,,,,,3,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Blind Rage_downgraded,[curse] Curse yourself,1,inflictself(CURSE); sfx(~_curse~);,Dramatic Pause,EVEN,,ITEM,PURPLE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Crystal Skull,Deal [sword]<triple> damage|([curse]Curse yourself each turn),1,attack(d*3); sfxdamage(target|d*3);,Dramatic Pause,MAX5,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,inflictself(CURSE); sfx(~_curse~); e.animate(~flashandshake~);,,,,,,
Crystal Skull_upgraded,Deal [sword]<triple> damage|([curse]Curse yourself each turn),1,attack(d*3); sfxdamage(target|d*3);,Dramatic Pause,NORMAL,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,inflictself(CURSE); sfx(~_curse~); e.animate(~flashandshake~);,,,,,,
Crystal Skull_downgraded,Deal [sword]<d6> damage|([curse]Curse yourself each turn),1,attack(d); sfxdamage(target|d);,Dramatic Pause,MAX5,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,inflictself(CURSE); sfx(~_curse~); e.animate(~flashandshake~);,,,,,,
Jail Bat,Deal [sword]<d6> damage|(Receive [lock]1 lock each turn),1,attack(d); sfxdamage(target|d);,Shuriken,MAX4|MAX4,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,inflictself(LOCK); sfx(~_lock~); ,e.animate(~flashandshake~); sfx(~_lock~);,,,,,,
Jail Bat_upgraded,Deal [sword]<d6> damage|(Receive [lock]1 lock each turn),1,attack(d); sfxdamage(target|d);,Shuriken,MAX5|MAX5,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,inflictself(LOCK); sfx(~_lock~); ,e.animate(~flashandshake~); sfx(~_lock~);,,,,,,
Jail Bat_downgraded,Deal [sword]<double> damage|(Receive [lock]1 lock each turn),1,attack(d); sfxdamage(target|d);,Shuriken,MAX2|MAX2,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,inflictself(LOCK); sfx(~_lock~); ,e.animate(~flashandshake~); sfx(~_lock~);,,,,,,
Baseball Bat,Deal [sword]<double> damage[;] give|enemy the dice next turn,1,attack(d*2); sfxdamage(target|d*2); inflict(~stash~+d); inflict(~batted~);,Magic Lantern,MAX5,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Baseball Bat_upgraded,Deal [sword]<double> damage[;] give|enemy the dice next turn,1,attack(d*2); sfxdamage(target|d*2); inflict(~stash~+d); inflict(~batted~);,Magic Lantern,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Baseball Bat_downgraded,Deal [sword]<double> damage[;] give|enemy the dice next turn,1,attack(d*2); sfxdamage(target|d*2); inflict(~stash~+d); inflict(~batted~);,Magic Lantern,MAX3,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Super Spatula,Flip a dice[;] twice!|(Always offered as scrap),1,givedice(d);,Megaflip,NORMAL,,ITEM,GRAY,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,YES,NO,,,,,,,,,,,
Super Spatula_upgraded,Flip a dice [red]FOUR[] times!|(Always offered as scrap),1,givedice(d);,Megaflip,NORMAL,,ITEM,GRAY,,,,,0,YES,NO,YES,NO,NO,NO,YES,NO,,,,,,,,,,,
Super Spatula_downgraded,Flip a dice[;] twice!|(Always offered as scrap),1,givedice(d);,Megaflip,MAX3,,ITEM,GRAY,,,,,0,YES,NO,YES,NO,NO,NO,YES,NO,,,,,,,,,,,
One Weird Tip,Roll [red]THREE[] extra dice!|The results will [yellow]SHOCK[] you!,1,givedice([1|1|1]); var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){rand(poss).animate(~shock~);}else{jinx(~Malware~|~prepare to be shocked!~|~Prepare to be shocked!~|~inflict(SHOCK); sfx(\~_shock\~);~|self|self|1|d); };,GADGET.PDF.EXE,COUNTDOWN,6,ITEM,GREEN,change_power,change_power,shock,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
One Weird Tip_upgraded,Roll [red]FOUR[] extra dice!|The results will [yellow]SHOCK[] you!,1,givedice([1|1|1|1]); var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){rand(poss).animate(~shock~);}else{jinx(~Malware~|~prepare to be shocked!~|~Prepare to be shocked!~|~inflict(SHOCK); sfx(\~_shock\~);~|self|self|1|d); };,GADGET.PDF.EXE,COUNTDOWN,6,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
One Weird Tip_downgraded,Roll [red]TWO[] extra dice!|The results will [yellow]SHOCK[] you!,1,givedice([1|1]); var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){rand(poss).animate(~shock~);}else{jinx(~Malware~|~prepare to be shocked!~|~Prepare to be shocked!~|~inflict(SHOCK); sfx(\~_shock\~);~|self|self|1|d); };,GADGET.PDF.EXE,COUNTDOWN,6,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
One Weird Tip?,Roll [red]THREE[] extra dice!|The results will [yellow]SHOCK[] you!,1,givedice([1|1|1]); var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){rand(poss).animate(~alternate_shock~);}else{jinx(~Malware~|~prepare to be shocked!~|~Prepare to be shocked!~|~inflict(SHOCK); sfx(\~_shock\~);~|self|self|1|d); };,GADGET.PDF.EXE,COUNTDOWN,6,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
One Weird Tip?_upgraded,Roll [red]FOUR[] extra dice!|The results will [yellow]SHOCK[] you!,1,givedice([1|1|1|1]); var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){rand(poss).animate(~alternate_shock~);}else{jinx(~Malware~|~prepare to be shocked!~|~Prepare to be shocked!~|~inflict(SHOCK); sfx(\~_shock\~);~|self|self|1|d); };,GADGET.PDF.EXE,COUNTDOWN,6,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
One Weird Tip?_downgraded,Roll [red]TWO[] extra dice!|The results will [yellow]SHOCK[] you!,1,givedice([1|1]); var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; if(poss.length > 0){rand(poss).animate(~alternate_shock~);}else{jinx(~Malware~|~prepare to be shocked!~|~Prepare to be shocked!~|~inflict(SHOCK); sfx(\~_shock\~);~|self|self|1|d); };,GADGET.PDF.EXE,COUNTDOWN,6,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dynamo,Increase Focus[;] Solar[;] Lunar|and Terra Beam dmg by 1,1,var beams = [~focusbeam~|~solarbeam~|~lunarbeam~|~terrabeam~]; for(x in beams){ self.setvar(x[;]self.getvar(x)+1);}; inflictself(~dynamo~); sfx(~_magic~); for(eq in self.equipment){if(eq.name == ~Focus Beam~ # eq.name == ~Solar Beam~ # eq.name == ~Lunar Beam~ # eq.name == ~Terra Beam~){eq.animate(~flashandshake~);};};,Stardust,COUNTDOWN,6,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Dynamo_upgraded,Increase Focus[;] Solar[;] Lunar|and Terra Beam dmg by 1|[gray](Reuseable),1,var beams = [~focusbeam~|~solarbeam~|~lunarbeam~|~terrabeam~]; for(x in beams){ self.setvar(x[;]self.getvar(x)+1);}; inflictself(~dynamo~); sfx(~_magic~); for(eq in self.equipment){if(eq.name == ~Focus Beam~ # eq.name == ~Solar Beam~ # eq.name == ~Lunar Beam~ # eq.name == ~Terra Beam~){eq.animate(~flashandshake~);};};,Stardust,COUNTDOWN,6,ITEM,GREEN,,,,,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Dynamo_downgraded,No effect,1,,Stardust,COUNTDOWN,6,ITEM,GREEN,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Radical Wrench,Combine dice[;]|rolls over at 4,1,var dicearray = []; var x = d; while(x > 4){dicearray.push(4); x = x - 4;}; dicearray.push(x); givedice(dicearray);,Magic Spanner,MAX5|MAX5,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Radical Wrench_upgraded,Combine dice[;]|rolls over at 3,1,var dicearray = []; var x = d; while(x > 3){dicearray.push(3); x = x - 3;}; dicearray.push(x); givedice(dicearray);,Magic Spanner,MAX5|MAX5,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Radical Wrench_downgraded,Combine dice,1,givedice(d);,Magic Spanner,MAX5|MAX5,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rodela,Deal [sword] equal to higher dice|Gain [shield] equal to lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var max = a; var min = b; if(b > max){min = a; max = b;}; attack(max); inflictself(SHIELD|min); sfxdamage(target|max); sfx(~_shield~);,Steel Skin,NORMAL|NORMAL,7,SHIELD,ORANGE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rodela_upgraded,Deal [sword] equal to first dice|Gain [shield] equal to second dice,1,attack(actualdice[0].basevalue); inflictself(SHIELD|actualdice[1].basevalue); sfxdamage(target|actualdice[0].basevalue); sfx(~_shield~);,Steel Skin,NORMAL|NORMAL,7,SHIELD,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rodela_downgraded,Deal [sword] equal to lower dice|Gain [shield] equal to lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var max = a; var min = b; if(b > max){min = a; max = b;}; attack(min); inflictself(SHIELD|min); sfxdamage(target|min); sfx(~_shield~);,Steel Skin,NORMAL|NORMAL,7,SHIELD,ORANGE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Triangle Wave,Odd: Both dice values +1|Even: Both dice values -1,1,if(d%2 == 0){ givedice([d-1|d-1]); } else { givedice([d+1|d+1]); };,Megabump,DOUBLES|DOUBLES,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Triangle Wave_upgraded,Odd: both +1[;] Even: both -1|[grey](3 uses this turn),1,if(d%2 == 0){ givedice([d-1|d-1]); } else { givedice([d+1|d+1]); };,Megabump,DOUBLES|DOUBLES,,ITEM,GREEN,,,,,3,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Triangle Wave_downgraded,Both dice values -1,1,givedice([d-1|d-1]);,Megabump,DOUBLES|DOUBLES,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Square Wave,1-3: Roll two ones|4-6: Roll two sixes,1,if(d < 4){givedice([1|1]);}else{givedice([6|6]);};,Megabump,DOUBLES|DOUBLES,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Square Wave_upgraded,1-3: Roll a 1[;] 4-6: Roll a 6|,1,if(d < 4){givedice(1);}else{givedice(6);};,Megabump,NORMAL,,ITEM,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Square Wave_downgraded,1-3: Roll a 1|4-6: Roll a 6,1,if(d < 4){givedice(1);}else{givedice(6);};,Megabump,DOUBLES|DOUBLES,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kerfuffle,Do [sword] equal to one dice|Duplicate the other,2,var r = rand([0|1]); attack(actualdice[r].basevalue); sfxdamage(target|actualdice[r].basevalue); givedice([actualdice[1-r].basevalue|actualdice[1-r].basevalue]);,Shuriken,MAX4|MAX4,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kerfuffle_upgraded,Do [sword] equal to one dice|Duplicate the other,2,var r = rand([0|1]); attack(actualdice[r].basevalue); sfxdamage(target|actualdice[r].basevalue); givedice([actualdice[1-r].basevalue|actualdice[1-r].basevalue]);,Shuriken,NORMAL|NORMAL,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Kerfuffle_downgraded,Do [sword] equal to one dice,2,var r = rand([0|1]); attack(actualdice[r].basevalue); sfxdamage(target|actualdice[r].basevalue);,Shuriken,MAX4|MAX4,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Slice And Dice,Deal [sword]<d6> damage|Inflict <d6> turns of Bleed,1,if(simulation){ bonus(-1000); }else{ attack(d); sfxdamage(target|d); inflict(~bleed~+d);};,Bubble Gun,MAX4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Slice And Dice_upgraded,Deal [sword]<d6> damage|Inflict <d6> turns of Bleed,1,if(simulation){ bonus(-1000); }else{ attack(d); sfxdamage(target|d); inflict(~bleed~+d);};,Bubble Gun,MAX5,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Slice And Dice_downgraded,Deal [sword]<d6> damage|Inflict <d6> turns of Bleed,1,if(simulation){ bonus(-1000); }else{ attack(d); sfxdamage(target|d); inflict(~bleed~+d);};,Bubble Gun,MAX2,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Blunt Sword,Deal [sword]<d6> damage. On 6[;]|inflict 3 turns of Bleed,2,if(simulation){ bonus(-1000); }else{ attack(d); sfxdamage(target|d); if(d == 6){inflict(~bleed3~);};};,Bubble Gun,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Blunt Sword_upgraded,Deal [sword]<d6> damage. On 6[;]|inflict 4 turns of Bleed,2,if(simulation){ bonus(-1000); }else{ attack(d); sfxdamage(target|d); if(d == 6){inflict(~bleed4~);};};,Bubble Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Blunt Sword_downgraded,Deal [sword]<d6> damage,2,if(simulation){ bonus(-1000); }else{ attack(d); sfxdamage(target|d); };,Bubble Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Blunt Dagger,[sword]1[;] add <d6> turns of Bleed|[gray](Reuseable),1,if(simulation){ bonus(-1000); }else{ attack(1); sfxdamage(target|d); inflict(~bleed~+d);};,Bubble Gun,MAX3,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Blunt Dagger_upgraded,[sword]1[;] add <d6> turns of Bleed|[gray](Reuseable),1,if(simulation){ bonus(-1000); }else{ attack(1); sfxdamage(target|d); inflict(~bleed~+d);};,Bubble Gun,MAX5,,WEAPON,RED,,,,none,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Blunt Dagger_downgraded,Deal [sword]1 damage|[gray](Reusable),1,if(simulation){ bonus(-1000); }else{ attack(2); sfxdamage(target|d); };,Bubble Gun,MAX3,,WEAPON,RED,,,,none,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,self.setvar(~block~[;]0);,self.setvar(~block~[;]0),,,,var h = 0; if (self.getvar(~block~) == 0) { var h = 0; var m = 0; for (i in 1...13) { h += getstatus(~bleed~+i); if (self.getvar(~bleed~+i) > 0) { m = i; }; removestatus(~bleed~+i|ALL); if(getstatus(~bleed~+(i+1)) > 0){inflict(~bleed~+i|getstatus(~bleed~+(i+1)));} }; if (h > 0) { sfxdamage(target|h); pierceattack(h); }; } self.setvar(~block~[;] 1);,,,
Blood to Dice,Lose [heart]<d6> health. On 6[;]|get +1 dice this fight,1,pierceattackself(d); sfx(~_drain~); if(d == 6){self.extradice+=1; sfx(~magic_gaindice~|~~|0.2);};,Steel Skin,NORMAL,,ITEM,RED,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood to Dice_upgraded,Lose [heart]<d6> health. On 4-6[;]|get +1 dice this fight,1,pierceattackself(d); sfx(~_drain~); if(d >= 4){self.extradice+=1; sfx(~magic_gaindice~|~~|0.2);};,Steel Skin,NORMAL,,ITEM,RED,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood to Dice_downgraded,Lose [heart]<d6> health,1,pierceattackself(d); sfx(~_drain~);,Steel Skin,NORMAL,,ITEM,RED,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Helium Balloon,Roll 3 more dice[;] but fill|all your dice with helium,1,var amount = 3; if(e.getvar(~stop~) != 1){if(e.getvar(~time~) == 0){var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); inflictself(~helium~); self.equipmentused+=1;}; e.setvar(~time~|e.getvar(~time~)+1); for(mydice in self.dicepool){if(mydice.available()){if(mydice.y < 50){mydice.animate(~disappear~);}else{mydice.kick(-90|rand([8|10|12]));};};};   e.doequipmentaction(self|target|e.castdirection|[]|-1|true); self.equipmentused-=1; e.playinganimation = false; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};};,Magic Six,COUNTDOWN,6,ITEM,PINK,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~stop~|0); e.setvar(~time~|0);,,,,e.setvar(~stop~|1); e.setvar(~time~|0);,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.preventdefault = true; e.maintainfury = true;
Helium Balloon_upgraded,Roll 4 more dice[;] but fill|all your dice with helium,1,var amount = 4; if(e.getvar(~stop~) != 1){if(e.getvar(~time~) == 0){var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); inflictself(~helium~); self.equipmentused+=1;}; e.setvar(~time~|e.getvar(~time~)+1); for(mydice in self.dicepool){if(mydice.available()){if(mydice.y < 50){mydice.animate(~disappear~);}else{mydice.kick(-90|rand([8|10|12]));};};};   e.doequipmentaction(self|target|e.castdirection|[]|-1|true); self.equipmentused-=1; e.playinganimation = false; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};};,Magic Six,COUNTDOWN,6,ITEM,PINK,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~stop~|0); e.setvar(~time~|0);,,,,e.setvar(~stop~|1); e.setvar(~time~|0);,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.preventdefault = true; e.maintainfury = true;
Helium Balloon_downgraded,Roll 2 more dice[;] but fill|all your dice with helium,1,var amount = 2; if(e.getvar(~stop~) != 1){if(e.getvar(~time~) == 0){var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); inflictself(~helium~); self.equipmentused+=1;}; e.setvar(~time~|e.getvar(~time~)+1); for(mydice in self.dicepool){if(mydice.available()){if(mydice.y < 50){mydice.animate(~disappear~);}else{mydice.kick(-90|rand([8|10|12]));};};};   e.doequipmentaction(self|target|e.castdirection|[]|-1|true); self.equipmentused-=1; e.playinganimation = false; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};};,Magic Six,COUNTDOWN,6,ITEM,PINK,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~stop~|0); e.setvar(~time~|0);,,,,e.setvar(~stop~|1); e.setvar(~time~|0);,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.preventdefault = true; e.maintainfury = true;
Powerfield,Gain [reduce]1 reduce. On jackpot[;]|gain [dodge]1 dodge as well,1,if(self.roll_jackpot > 0){inflictself(DODGE); sfx(~_dodge~|~~|0.2);}; inflictself(REDUCE); sfx(~_shield~); ,Pillow Fort,REQUIRE3,,ITEM,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Powerfield_upgraded,Gain [reduce]2 reduce. On jackpot[;]|gain [dodge]1 dodge as well,1,if(self.roll_jackpot > 0){inflictself(DODGE); sfx(~_dodge~|~~|0.2);}; inflictself(REDUCE|2); sfx(~_shield~); ,Pillow Fort,REQUIRE3,,ITEM,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Powerfield_downgraded,Gain [reduce]1 reduce,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,REQUIRE3,,ITEM,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Virtual Memory,Reduce CPU counter by <d6>|On jackpot[;] heal [heal]<d6> hp,1,if(self.roll_jackpot > 0){attackself(-d); sfx(~_heal~);}else{adjustrobotcounter(-d);};,,MAX4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Virtual Memory_upgraded,Reduce CPU counter by <d6>|On jackpot[;] heal [heal]<d6> hp,1,if(self.roll_jackpot > 0){attackself(-d); sfx(~_heal~);}else{adjustrobotcounter(-d);};,,MAX5,,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Virtual Memory_downgraded,Reduce CPU counter by <d6>|On jackpot[;] heal [heal]<d6> hp,1,if(self.roll_jackpot > 0){attackself(-d); sfx(~_heal~);}else{adjustrobotcounter(-d);};,,MAX2,,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Chronomancy,Heal [heal]5 hp. On jackpot[;]|take an extra turn instead,1,if(self.roll_jackpot > 0){inflictself(EXTRATURN); sfx(~_magic~|~~|0.3);}else{attackself(-5); sfx(~_heal~);};,,COUNTDOWN,24,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Chronomancy_upgraded,Heal [heal]5 hp. On jackpot[;]|take an extra turn instead|Immune to errors,1,if(self.roll_jackpot > 0){inflictself(EXTRATURN); sfx(~_magic~|~~|0.3);}else{attackself(-5); sfx(~_heal~);};,,COUNTDOWN,24,ITEM,GREEN,,,,,0,YES,NO,YES,YES,YES,NO,NO,NO,,,,,,,,,,,
Chronomancy_downgraded,Heal [heal]5 health,1,attackself(-5); sfx(~_heal~);,,COUNTDOWN,24,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Crystal Rock,Deal [sword]<d6> damage|[gray](once per battle),1,attack(d); sfxdamage(target|d);,Throwing Knife,MAX3|FREE6,,WEAPON,RED,change_power,change_power,,none,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crystal Rock_upgraded,Deal [sword]<d6> damage|[gray](once per battle),1,attack(d); sfxdamage(target|d);,Throwing Knife,NORMAL|FREE6,,WEAPON,RED,,,,none,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Crystal Rock_downgraded,Deal [sword]<d6> damage|[gray](once per battle),1,attack(d); sfxdamage(target|d);,Throwing Knife,MAX3|FREE3,,WEAPON,RED,,,,none,0,NO,YES,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bingo,Hit Jackpot[;] but get no|dice or rewards from it,1,self.roll_jackpot = 1; sfx(~_magic~);,,MIN4,,WEAPON,YELLOW,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Bingo_upgraded,Hit Jackpot[;] but get no|dice or rewards from it,1,self.roll_jackpot = 1; sfx(~_magic~);,,NORMAL,,WEAPON,YELLOW,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Bingo_downgraded,Hit Jackpot[;] but get no|dice or rewards from it,1,self.roll_jackpot = 1; sfx(~_magic~);,,MIN5,,WEAPON,YELLOW,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Copy Paste,Duplicate a dice|(not sure which one though),1,givedice([e.getvar(~firstdice~)|e.getvar(~firstdice~)]);,Replicate,ODD,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~firstdice~|self.dicepool[0].basevalue);,,,,,,
Copy Paste_upgraded,Duplicate a dice|(not sure which one though),1,givedice([e.getvar(~firstdice~)|e.getvar(~firstdice~)]);,Replicate,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~firstdice~|self.dicepool[0].basevalue);,,,,,,
Copy Paste_downgraded,Duplicate a dice|(not sure which one though),1,givedice([e.getvar(~firstdice~)|e.getvar(~firstdice~)]);,Replicate,REQUIRE5,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~firstdice~|self.dicepool[0].basevalue);,,,,,,
Cauldron Cauldron,Do [sword]1[;] get a new dice[;]|get a new cauldron,1,var cauldrons = [~Gold~|~Silver~|~Iron~|~Copper~|~Electrum~|~Amber~|~Quartz~|~Blood~|~Glass~|~Ash~|~Stash~|~Mossy~|~Trash~|~Hat~]; attack(1); sfxdamage(target|1); givedice();  if(e.getvar(~nope~) == 1){e.setvar(~nope~|0);}else{giveequipment(rand(cauldrons)+~ Cauldron~);}; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};,Magic Lockpick,NORMAL,,MAGIC,GRAY,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.setvar(~nope~|1);
Cauldron Cauldron_upgraded,Do [sword]2[;] get 2 new dice[;]|get a new cauldron,1,var cauldrons = [~Gold~|~Silver~|~Iron~|~Copper~|~Electrum~|~Amber~|~Quartz~|~Blood~|~Glass~|~Ash~|~Stash~|~Mossy~|~Trash~|~Hat~]; attack(2); sfxdamage(target|2); givedice([rand([1|2|3|4|5|6])|rand([1|2|3|4|5|6])]);  if(e.getvar(~nope~) == 1){e.setvar(~nope~|0);}else{giveequipment(rand(cauldrons)+~ Cauldron+~); }; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};,Magic Lockpick,NORMAL|NORMAL,,MAGIC,GRAY,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.setvar(~nope~|1);
Cauldron Cauldron_downgraded,Deal [sword]1 damage[;] get|a new cauldron,1,var cauldrons = [~Gold~|~Silver~|~Iron~|~Copper~|~Electrum~|~Amber~|~Quartz~|~Blood~|~Glass~|~Ash~|~Stash~|~Mossy~|~Trash~|~Hat~]; attack(1); sfxdamage(target|1);  if(e.getvar(~nope~) == 1){e.setvar(~nope~|0);}else{giveequipment(rand(cauldrons)+~ Cauldron~); }; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};,Magic Lockpick,NORMAL,,MAGIC,GRAY,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.setvar(~nope~|1);
Scrap Cauldron,Do [sword]1[;] get a [quote]new[quote] dice|(Always offered as scrap),1,attack(1); givedice(d); sfxdamage(target|1);,Bubble Gun,NORMAL,,MAGIC,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,YES,NO,,,,,,,,,,,
Scrap Cauldron_upgraded,Do [sword]2[;] get 2 [quote]new[quote] dice|(Always offered as scrap),1,attack(2); givedice([actualdice[0].basevalue|actualdice[1].basevalue]); sfxdamage(target|2);,Bubble Gun,NORMAL|NORMAL,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,YES,NO,,,,,,,,,,,
Scrap Cauldron_downgraded,Deal [sword]1 damage|(Always offered as scrap),1,attack(1); sfxdamage(target|1);,Bubble Gun,NORMAL,,MAGIC,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,YES,NO,,,,,,,,,,,
Bayonet,Deal [sword]<d6> damage[;]|reusable on 3 or less,2,attack(d); sfxdamage(target|d);,Bubble Gun,MAX5,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(d > 3) { e.usesleft= 0; };,,
Bayonet_upgraded,Deal [sword]<d6> damage[;]|reusable on 3 or less,2,attack(d); sfxdamage(target|d);,Bubble Gun,NORMAL,,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(d > 3) { e.usesleft= 0; };,,
Bayonet_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Bubble Gun,MAX5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Phaser,Deal [sword]<d6> damage[;]|reusable on jackpot,1,attack(d); sfxdamage(target|d); if(self.roll_jackpot > 0){sfx(~_magic~);};,Bubble Gun,MAX4,,WEAPON,YELLOW,change_power,change_power,,,-1,NO,NO,NO,YES,NO,NO,NO,YES,,,,,,,,,if(self.roll_jackpot == 0) { e.usesleft = 0; };,,
Phaser_upgraded,Deal [sword]<d6> damage[;]|reusable on jackpot,1,attack(d); sfxdamage(target|d); if(self.roll_jackpot > 0){sfx(~_magic~);};,Bubble Gun,MAX5,,WEAPON,YELLOW,,,,,-1,NO,NO,NO,YES,NO,NO,NO,YES,,,,,,,,,if(self.roll_jackpot == 0) { e.usesleft = 0; };,,
Phaser_downgraded,Deal [sword]<d6> damage[;]|reusable on jackpot,1,attack(d); sfxdamage(target|d); if(self.roll_jackpot > 0){sfx(~_magic~);};,Bubble Gun,MAX2,,WEAPON,YELLOW,,,,,-1,NO,NO,NO,YES,NO,NO,NO,YES,,,,,,,,,if(self.roll_jackpot == 0) { e.usesleft = 0; };,,
Flamecrower,Reduce countdowns by <d6>|[gray](once per battle),1,for(x in actualdice){boostcountdowns(x.basevalue);}; sfx(~_thinghappens~);,Accelerate,NORMAL|NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flamecrower_upgraded,Reduce countdowns by <d6>|[gray](once per battle),2,for(x in actualdice){boostcountdowns(x.basevalue);}; sfx(~_thinghappens~);,Accelerate,NORMAL|NORMAL|NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flamecrower_downgraded,Reduce countdowns by <d6>|[gray](once per battle),1,for(x in actualdice){boostcountdowns(x.basevalue);}; sfx(~_thinghappens~);,Accelerate,MAX3|MAX3,,ITEM,GREEN,,,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Canesword,Deal [sword]<d6> dmg. On 6[;] next|item has +1 use this turn,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2);};,Efficiency,EVEN,,WEAPON,GREEN,change_power,change_power,reequipnext,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Canesword_upgraded,Deal [sword]<d6> dmg. On 6[;] next|item has +1 use this turn,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2);};,Efficiency,NORMAL,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Canesword_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Efficiency,EVEN,,WEAPON,GREEN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Canesword?,[sword]<d6> damage. On 6[;]|keep the next dice you use,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2);};,Efficiency,EVEN,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Canesword?_upgraded,[sword]<d6> damage. On 6[;]|keep the next dice you use,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(REEQUIPNEXT); sfx(~_recycle~|~~|0.2);};,Efficiency,NORMAL,,WEAPON,GREEN,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Canesword?_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Efficiency,EVEN,,WEAPON,GREEN,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Unnamed Tool,Set all of your|countdowns to 16,1,for(eq in self.equipment){if(eq.remainingcountdown != 0){eq.remainingcountdown = 16; eq.animate(~flashandshake~);};}; sfx(~openchest~);,Accelerate,NORMAL|NORMAL,8,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Unnamed Tool_upgraded,Set all of your|countdowns to 16,1,for(eq in self.equipment){if(eq.remainingcountdown != 0){eq.remainingcountdown = 16; eq.animate(~flashandshake~);};}; sfx(~openchest~);,Accelerate,NORMAL|NORMAL,7,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Unnamed Tool_downgraded,Set all of your|countdowns to 16,1,for(eq in self.equipment){if(eq.remainingcountdown != 0){eq.remainingcountdown = 16; eq.animate(~flashandshake~);};}; sfx(~openchest~);,Accelerate,NORMAL|NORMAL,10,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Crackleslash,Deal [sword]<d6> damage[;] reusable|if <d6> isn't your uptick,2,attack(d); sfxdamage(target|d);,,RANGE25,,WEAPON,BRIGHTCYAN,change_power,change_power,,none,-1,NO,NO,NO,YES,NO,NO,NO,YES,,,,,,,,,if(d == self.getvar(~uptick~)) { e.usesleft = 0; };,,
Crackleslash_upgraded,Deal [sword]<d6> damage[;] reusable|if <d6> isn't your uptick,2,attack(d); sfxdamage(target|d);,,NORMAL,,WEAPON,BRIGHTCYAN,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,YES,,,,,,,,,if(d == self.getvar(~uptick~)) { e.usesleft = 0; };,,
Crackleslash_downgraded,Deal [sword]<d6> damage[;] reusable|if <d6> isn't your uptick,2,attack(d); sfxdamage(target|d);,,RANGE34,,WEAPON,BRIGHTCYAN,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,YES,,,,,,,,,if(d == self.getvar(~uptick~)) { e.usesleft = 0; };,,
Virtual Machine,Your first calculation each|turn instead only increases|the CPU counter by 2,1,,,,,ITEM,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~RED~); e.setvar(~done~|0);,,if(e.getvar(~done~) == 0){if(self.roll_totaldice == 1){e.setvar(~done~|1); adjustrobotcounter(-self.roll_total + 2); e.changecolour(~GRAY~); e.animate(~flashandshake~);};};,,,,,
Virtual Machine_upgraded,Your first calculation each|turn doesn't increase|the CPU counter,1,,,,,ITEM,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changecolour(~RED~); e.setvar(~done~|0);,,if(e.getvar(~done~) == 0){if(self.roll_totaldice == 1){e.setvar(~done~|1); adjustrobotcounter(-self.roll_total); e.changecolour(~GRAY~); e.animate(~flashandshake~);};};,,,,,
Virtual Machine_downgraded,No effect,1,,,,,ITEM,GRAY,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Junkblaster,Do [sword]1 dmg[;] roll a 1|Immune to errors|,1,givedice(1); attack(1); sfxdamage(target|1);,Snake Eyes,COUNTDOWN,4,WEAPON,GRAY,change_power,change_power,,none,-1,NO,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Junkblaster_upgraded,Do [sword]2 dmg[;] roll a 1|Immune to errors|,1,givedice(1); attack(2); sfxdamage(target|2);,Snake Eyes,COUNTDOWN,4,WEAPON,GRAY,,,,none,-1,NO,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Junkblaster_downgraded,Deal [sword]1 damage|Immune to errors|,1,attack(1); sfxdamage(target|1);,Snake Eyes,COUNTDOWN,4,WEAPON,GRAY,,,,none,-1,NO,NO,NO,NO,YES,NO,NO,NO,,,,,,,,,,,
Oven Gloves,Gain [reduce]2 reduce for|your turn only,1,inflictself(REDUCE|2); sfx(~_shield~); self.setvar(~removereduce~|self.getvar(~removereduce~)+2);,Pillow Fort,NORMAL,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~removereduce~|0);,,,,removestatusself(REDUCE|self.getvar(~removereduce~)); self.setvar(~removereduce~|0);,,,
Oven Gloves_upgraded,Gain [reduce]5 reduce for|your turn only,1,inflictself(REDUCE|5); sfx(~_shield~); self.setvar(~removereduce~|self.getvar(~removereduce~)+2);,Pillow Fort,NORMAL,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~removereduce~|0);,,,,removestatusself(REDUCE|self.getvar(~removereduce~)); self.setvar(~removereduce~|0);,,,
Oven Gloves_downgraded,Gain [reduce]1 reduce for|your turn only,1,inflictself(REDUCE|1); sfx(~_shield~); self.setvar(~removereduce~|self.getvar(~removereduce~)+2);,Pillow Fort,NORMAL,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~removereduce~|0);,,,,removestatusself(REDUCE|self.getvar(~removereduce~)); self.setvar(~removereduce~|0);,,,
Electric Fence,Always starts [shock]shocked|Gain [shield]<d6> shield,1,inflictself(SHIELD|d); sfx(~_shield~);,Static Shock,NORMAL,,WEAPON,ORANGE,change_power,change_power,shock,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,e.animate(SHOCK);,,,,,,,
Electric Fence_upgraded,Always starts [shock]shocked|Gain [shield]<d6> shield,1,inflictself(SHIELD|d); sfx(~_shield~);,Static Shock,NORMAL|FREE1,,WEAPON,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,e.animate(SHOCK);,,,,,,,
Electric Fence_downgraded,Always starts [shock]shocked|Gain [shield]<d6> shield,1,inflictself(SHIELD|d); sfx(~_shield~);,Static Shock,MAX3,,WEAPON,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,e.animate(SHOCK);,,,,,,,
Electric Fence?,Always starts [shock]shocked|Gain [shield]<d6> shield,1,inflictself(SHIELD|d); sfx(~_shield~);,Static Shock,NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.animate(~alternate_shock~);,,,,,,,
Electric Fence?_upgraded,Always starts [shock]shocked|Gain [shield]<d6> shield,1,inflictself(SHIELD|d); sfx(~_shield~);,Static Shock,NORMAL|FREE1,,WEAPON,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.animate(~alternate_shock~);,,,,,,,
Electric Fence?_downgraded,Always starts [shock]shocked|Gain [shield]<d6> shield,1,inflictself(SHIELD|d); sfx(~_shield~);,Static Shock,MAX3,,WEAPON,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.animate(~alternate_shock~);,,,,,,,
Graphics Card,Set CPU counter to 0,1,adjustrobotcounter(-self.roll_total); ,,LOCKED6,,ITEM,PINK,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Graphics Card_upgraded,Set CPU counter to 0,1,adjustrobotcounter(-self.roll_total); ,,LOCKED5,,ITEM,PINK,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Graphics Card_downgraded,Set CPU counter to 0,1,adjustrobotcounter(-self.roll_total); ,,LOCKED7,,ITEM,PINK,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Ultimeh Weapon,Do [sword]<d6> damage[;] double on|jackpot[;] immune to errors,1,if (self.roll_jackpot > 0){ attack(d * 2); sfxdamage(target|d*2);} else { attack(d); sfxdamage(target|d);},,MAX4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Ultimeh Weapon_upgraded,Do [sword]<d6> damage[;] double on|jackpot[;] immune to errors,1,if (self.roll_jackpot > 0){ attack(d * 2); sfxdamage(target|d*2);} else { attack(d); sfxdamage(target|d);},,MAX4|FREE2,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Ultimeh Weapon_downgraded,Do [sword]<d6> damage[;] double on|jackpot[;] immune to errors,1,if (self.roll_jackpot > 0){ attack(d * 2); sfxdamage(target|d*2);} else { attack(d); sfxdamage(target|d);},,MAX2,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Even Buster Sword,Do [sword]<d6>[;] double on error|Immune to errors,1,if(self.roll_total > self.roll_target){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,,MAX4,,WEAPON,GRAY,change_power,change_power,,none,0,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Even Buster Sword_upgraded,Do [sword]<d6>[;] double on error|Immune to errors,1,if(self.roll_total > self.roll_target){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,,MAX5,,WEAPON,GRAY,,,,none,0,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Even Buster Sword_downgraded,Deal [sword]<d6> damage,1,if(self.roll_total > self.roll_target){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,,MAX4,,WEAPON,GRAY,,,,none,0,NO,NO,NO,YES,YES,NO,NO,NO,,,,,,,,,,,
Bang Snaps,Deal [sword]3 damage|[gray](2 uses this turn),1,attack(3); sfxdamage(target|3);,Bubble Gun,NORMAL,,WEAPON,YELLOW,change_power,change_power,,none,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bang Snaps_upgraded,Deal [sword]4 damage|[gray](2 uses this turn),1,attack(4); sfxdamage(target|4);,Bubble Gun,NORMAL,,WEAPON,YELLOW,,,,none,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bang Snaps_downgraded,Deal [sword]1 damage|[gray](2 uses this turn),1,attack(1); sfxdamage(target|1);,Bubble Gun,NORMAL,,WEAPON,YELLOW,,,,none,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Firecracker,Duplicate a dice[;] but|burn both copies,1,inflictself(FIRE|2); givedice([d|d]);,Boom!,MAX4,,WEAPON,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Firecracker_upgraded,Duplicate a dice[;] but|burn both copies,1,inflictself(FIRE|2); givedice([d|d]);,Boom!,NORMAL,,WEAPON,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Firecracker_downgraded,Duplicate a dice[;] but|burn both copies,1,inflictself(FIRE|2); givedice([d|d]);,Boom!,MAX2,,WEAPON,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sparkler,Deal [sword]1 damage[;]|heal [heal]2 when snapped,1,attack(1); sfxdamage(target|1);,Revitalize,NORMAL,,WEAPON,GREEN,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,for(x in 0...snap){attackself(-2);}; sfx(~_heal~|~~|0.4);,
Sparkler_upgraded,Deal [sword]3 damage[;]|heal [heal]2 when snapped,1,attack(3); sfxdamage(target|1);,Revitalize,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,for(x in 0...snap){attackself(-2);}; sfx(~_heal~|~~|0.4);,
Sparkler_downgraded,No effect|Heal [heal]2 when snapped,1,,Revitalize,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,for(x in 0...snap){attackself(-2);}; sfx(~_heal~|~~|0.4);,
Rose Bush,Deal [sword]1 damage|(Start of turn: gain [thorns]1[]),1,attack(1); sfxdamage(target|2);,Bubble Gun,NORMAL,,WEAPON,GREEN,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(i in 0...3){ if(Deck.getcard(i) != null){ if(Deck.getcard(i).equipment == e){ e.animate(~flashandshake~); inflictself(THORNS|1); sfx(~_thorns~); }; }; };,,,,,,
Rose Bush_upgraded,Deal [sword]1 damage|(Start of turn: gain [thorns]2[]),1,attack(1); sfxdamage(target|2);,Bubble Gun,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(i in 0...3){ if(Deck.getcard(i) != null){ if(Deck.getcard(i).equipment == e){ e.animate(~flashandshake~); inflictself(THORNS|2); sfx(~_thorns~); }; }; };,,,,,,
Rose Bush_downgraded,No effect|(Start of turn: gain [thorns]1),1,,Bubble Gun,NORMAL,,WEAPON,GREEN,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(i in 0...3){ if(Deck.getcard(i) != null){ if(Deck.getcard(i).equipment == e){ e.animate(~flashandshake~); inflictself(THORNS|1); sfx(~_thorns~); }; }; };,,,,,,
Crown of Thorns,Gain [shield]1 shield per|[thorns] thorn you have,1,inflictself(SHIELD|getstatusself(THORNS)); sfx(~_shield~);,Barricade,NORMAL,,WEAPON,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Crown of Thorns_upgraded,Gain [shield]2 shield per|[thorns] thorn you have,1,inflictself(SHIELD|getstatusself(THORNS)*2); sfx(~_shield~);,Barricade,NORMAL,,WEAPON,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Crown of Thorns_downgraded,Gain [shield]1 shield per|[thorns] thorn you have,1,inflictself(SHIELD|getstatusself(THORNS)); sfx(~_shield~);,Barricade,EVEN,,WEAPON,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Spiked Drink,Lose [heart]3 health|(Start of turn: heal [heal]3[]),2,pierceattackself(3); sfx(~_drain~);,Steel Skin,NORMAL,,WEAPON,PURPLE,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,for(i in 0...3){ if(Deck.getcard(i) != null){ if(Deck.getcard(i).equipment == e){ e.animate(~flashandshake~); attackself(-3); sfx(~_heal~); }; }; };,,,,,,
Spiked Drink_upgraded,Lose [heart]3 health|(Start of turn: heal [heal]4[]),2,pierceattackself(3); sfx(~_drain~);,Steel Skin,NORMAL,,WEAPON,PURPLE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,for(i in 0...3){ if(Deck.getcard(i) != null){ if(Deck.getcard(i).equipment == e){ e.animate(~flashandshake~); attackself(-4); sfx(~_heal~); }; }; };,,,,,,
Spiked Drink_downgraded,Lose [heart]3 health|(Start of turn: heal [heal]3[]),2,pierceattackself(3); sfx(~_drain~);,Steel Skin,EVEN,,WEAPON,PURPLE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,for(i in 0...3){ if(Deck.getcard(i) != null){ if(Deck.getcard(i).equipment == e){ e.animate(~flashandshake~); attackself(-3); sfx(~_heal~); }; }; };,,,,,,
Twinkle,Get an extra dice next turn,1,inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lightstatus~); sfx(~magic_gaindice~); var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);};  self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2);  self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,Magic Lantern,EVEN,,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Twinkle_upgraded,Get an extra dice next turn,1,inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lightstatus~); sfx(~magic_gaindice~); var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);};  self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2);  self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,Magic Lantern,NORMAL,,ITEM,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Twinkle_downgraded,Get an extra dice next turn,1,inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lightstatus~); sfx(~magic_gaindice~); var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);};  self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2);  self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,Magic Lantern,EVEN|EVEN,,ITEM,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dazzling Light,Deal [sword]3 damage for each|dice stashed for next turn|(currently: [sword]<var:triplestashcount> damage),1,var total = 0; for(x in 1...7){ total+=getstatusself(~stash~+x); }; attack(total*3); sfxdamage(target|total*3);,Magic Lantern,NORMAL,,MAGIC,YELLOW,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0); self.setvar(~doublestashcount~[;]0); self.setvar(~triplestashcount~[;]0); self.setvar(~quadruplestashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2); self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,,,,,
Dazzling Light_upgraded,Deal [sword]4 damage for each|dice stashed for next turn|(currently: [sword]<var:quadruplestashcount> damage),1,var total = 0; for(x in 1...7){ total+=getstatusself(~stash~+x); }; attack(total*4); sfxdamage(target|total*4);,Magic Lantern,NORMAL,,MAGIC,YELLOW,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0); self.setvar(~doublestashcount~[;]0); self.setvar(~triplestashcount~[;]0); self.setvar(~quadruplestashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2); self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,,,,,
Dazzling Light_downgraded,Deal [sword]1 damage for each|dice stashed for next turn|(currently: [sword]<var:stashcount> damage),1,var total = 0; for(x in 1...7){ total+=getstatusself(~stash~+x); }; attack(total); sfxdamage(target|total);,Magic Lantern,NORMAL,,MAGIC,YELLOW,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0); self.setvar(~doublestashcount~[;]0); self.setvar(~triplestashcount~[;]0); self.setvar(~quadruplestashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2); self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,,,,,
Solar Blessing,Heal [heal]1 health for each|dice stashed for next turn|(currently: [heal]<var:stashcount> health),1,var total = 0; for(x in 1...7){ total+=getstatusself(~stash~+x); }; attackself(-total); sfx(~_heal~);,Magic Lantern,NORMAL,,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0); self.setvar(~doublestashcount~[;]0); self.setvar(~triplestashcount~[;]0); self.setvar(~quadruplestashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2); self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,,,,,
Solar Blessing_upgraded,Heal [heal]2 health for each|dice stashed for next turn|(currently: [heal]<var:doublestashcount> health),1,var total = 0; for(x in 1...7){ total+=getstatusself(~stash~+x); }; attackself(-total*2); sfx(~_heal~);,Magic Lantern,NORMAL,,MAGIC,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0); self.setvar(~doublestashcount~[;]0); self.setvar(~triplestashcount~[;]0); self.setvar(~quadruplestashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2); self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,,,,,
Solar Blessing_downgraded,Heal [heal]1 health for each|dice stashed for next turn|(currently: [heal]<var:stashcount> health),1,var total = 0; for(x in 1...7){ total+=getstatusself(~stash~+x); }; attackself(-total); sfx(~_heal~);,Magic Lantern,EVEN,,MAGIC,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~stashcount~[;]0); self.setvar(~doublestashcount~[;]0); self.setvar(~triplestashcount~[;]0); self.setvar(~quadruplestashcount~[;]0);,,var total = 0; for(x in 1...7){total = total+ getstatusself(~stash~+x);}; self.setvar(~stashcount~[;]total); self.setvar(~doublestashcount~[;]total*2); self.setvar(~triplestashcount~[;]total*3); self.setvar(~quadruplestashcount~[;]total*4);,,,,,
Rusty Broadsword,Deal [sword]<d6> damage[;] double|if your health is 50% or less,2,if(self.hp * 2 <= self.maxhp){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Bubble Gun,MAX5,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Broadsword_upgraded,Deal [sword]<d6> damage[;] double|if your health is 50% or less,2,if(self.hp * 2 <= self.maxhp){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Bubble Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Broadsword_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Bubble Gun,MAX5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Shield,Gain [shield]<d6> shield[;] double|if your health is 50% or less,2,if(self.hp * 2 <= self.maxhp){inflictself(SHIELD|d*2);}else{inflictself(SHIELD|d);}; sfx(~_shield~);,Barricade,MAX4,,WEAPON,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Shield_upgraded,Gain [shield]<d6> shield[;] double|if your health is 50% or less,2,if(self.hp * 2 <= self.maxhp){inflictself(SHIELD|d*2);}else{inflictself(SHIELD|d);}; sfx(~_shield~);,Barricade,MAX5,,WEAPON,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rusty Shield_downgraded,Gain [shield]<d6> shield,2,inflictself(SHIELD|d); sfx(~_shield~);,Barricade,MAX4,,WEAPON,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Boss,Gain [shield]4 shield,2,inflictself(SHIELD|4); sfx(~_shield~);,Coin Clippers,REQUIRE1,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Boss_upgraded,Gain [shield]4 shield|Return the dice,2,inflictself(SHIELD|4); sfx(~_shield~); givedice(d);,Coin Clippers,REQUIRE1,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Boss_downgraded,Gain [shield]<d6> shield,2,inflictself(SHIELD|d); sfx(~_shield~);,Coin Clippers,REQUIRE1,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Star Shooter,Inflict a random status|[gray](Reuseable),1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase());,Stardust,COUNTDOWN,6,ITEM,PINK,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Star Shooter_upgraded,Inflict 2x a random status|[gray](Reuseable),1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus|2); sfx(~_~ + randstatus.toLowerCase());,Stardust,COUNTDOWN,6,ITEM,PINK,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Star Shooter_downgraded,Inflict a random status,1,var randstatus = rand([FIRE|POISON|BLIND]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase());,Stardust,COUNTDOWN,6,ITEM,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starsword,Deal [sword]<d6> damage. On 6[;]|inflict a random status,2,attack(d); sfxdamage(target|d); if(d == 6){var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);};,Stardust,NORMAL,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Starsword_upgraded,Deal [sword]<d6> damage. On 6[;]|inflict 2x a random status,2,attack(d); sfxdamage(target|d); if(d == 6){var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus|2); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);};,Stardust,NORMAL,,WEAPON,PINK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Starsword_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Stardust,NORMAL,,WEAPON,PINK,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Starspike,[sword]<d6>[;] add random status|[gray](Reuseable),1,attack(d); sfxdamage(target|d); var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Stardust,REQUIRE1|REQUIRE1,,WEAPON,PINK,change_power,change_power,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Starspike_upgraded,[sword]<double>[;] add random status|[gray](Reuseable),1,attack(d*2); sfxdamage(target|d*2); var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Stardust,REQUIRE1|REQUIRE1,,WEAPON,PINK,,,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Starspike_downgraded,Add a random status|,1,attack(d); sfxdamage(target|d);,Stardust,REQUIRE1|REQUIRE1,,WEAPON,PINK,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Spatuplicate,Flip a dice upside down[;]|and return the original,1,givedice([7-d|d]);,Megaflip,MIN4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Spatuplicate_upgraded,Flip a dice upside down[;]|and return the original,1,givedice([7-d|d]);,Megaflip,MIN3,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spatuplicate_downgraded,Flip a dice upside down[;]|and return the original,1,givedice([7-d|d]);,Megaflip,MIN5,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starshine,Inflict a random status,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase());,Stardust,NORMAL,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Starshine_upgraded,Inflict 2 random statuses,1,for(x in [0|0.2]){var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|x);};,Stardust,NORMAL,,WEAPON,PINK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Starshine_downgraded,Inflict a random status,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase());,Stardust,MAX3,,WEAPON,PINK,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Berserker Rage,Whenever you attack[;] lose|[heart]3 and roll an extra dice,1,pierceattackself(3); sfx(~_drain~); givedice();,Steel Skin,,,WEAPON,RED,change_poison,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~)){ e.doequipmentaction(self|target|e.castdirection|[]|0|true); }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Berserker Rage_upgraded,Whenever you attack[;] lose|[heart]2 and roll an extra dice,1,pierceattackself(2); sfx(~_drain~); givedice();,Steel Skin,,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~)){ e.doequipmentaction(self|target|e.castdirection|[]|0|true); }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Berserker Rage_downgraded,Whenever you attack[;] lose|[heart]6 and roll an extra dice,1,pierceattackself(6); sfx(~_drain~); givedice();,Steel Skin,,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp < e.getvar(~enemyhealth~)){ e.doequipmentaction(self|target|e.castdirection|[]|0|true); }; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Defibrilator,Lose [heart]2[;] reactivate gadgets|[gray](Reuseable),1,pierceattackself(2); sfx(~_drain~); Gadget.reactivate(self| ALL);,Blood Sip,EVEN,,ITEM,PURPLE,change_poison,change_power,,,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Defibrilator_upgraded,Lose [heart]2[;] reactivate gadgets|[gray](Reuseable),1,pierceattackself(2); sfx(~_drain~); Gadget.reactivate(self| ALL);,Blood Sip,NORMAL,,ITEM,PURPLE,,,,,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Defibrilator_downgraded,Lose [heart]2[;] reactivate gadgets|[gray](Reuseable),1,pierceattackself(2); sfx(~_drain~); Gadget.reactivate(self| ALL);,Blood Sip,EVEN|EVEN,,ITEM,PURPLE,,,,,-1,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Slapjack,Next turn[;] discarding cards|gives you dice in return,2,jinx(~Slapjack~|~discard generates dice as well~|~Discard generates dice this turn~|~Deck.snapstyle = (\~dice\~); sfx(\~_magic\~);~|self|self|1|d); sfx(~_thinghappens~);,Regenerate,NORMAL|NORMAL,,FINAL,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Slapjack_upgraded,Next turn[;] discarding cards|gives you dice in return,2,jinx(~Slapjack~|~discard generates dice as well~|~Discard generates dice this turn~|~Deck.snapstyle = (\~dice\~); sfx(\~_magic\~);~|self|self|1|d); sfx(~_thinghappens~);,Regenerate,NORMAL,,FINAL,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Slapjack_downgraded,Next turn[;] discarding cards|gives you dice in return,2,jinx(~Slapjack~|~discard generates dice as well~|~Discard generates dice this turn~|~Deck.snapstyle = (\~dice\~); sfx(\~_magic\~);~|self|self|1|d); sfx(~_thinghappens~);,Regenerate,NORMAL|NORMAL|NORMAL|NORMAL,,FINAL,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
6 Years Bad Luck,Enemy loses 1 dice this fight|(minimum of 1),2,if(target.dice + target.extradice > 1){target.extradice--; sfx(~_curse~); screenshake();}else{target.textparticle(~No effect!~);};,Infinity Mirror,REQUIRE1,,FINAL,ORANGE,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
6 Years Bad Luck_upgraded,Enemy loses 1 dice this fight|(minimum of 1),2,if(target.dice + target.extradice > 1){target.extradice--; sfx(~_curse~); screenshake();}else{target.textparticle(~No effect!~);};,Infinity Mirror,ODD,,FINAL,ORANGE,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
6 Years Bad Luck_downgraded,Enemy loses 1 dice this fight|(minimum of 1),2,if(target.dice + target.extradice > 1){target.extradice--; sfx(~_curse~); screenshake();}else{target.textparticle(~No effect!~);};,Infinity Mirror,REQUIRE1|REQUIRE1,,FINAL,ORANGE,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Star of the Show,Inflict a random status|[gray](Reuseable),2,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase());,Infinity Mirror,COUNTDOWN,4,FINAL,ORANGE,change_power,change_power,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Star of the Show_upgraded,Inflict 2x a random status|[gray](Reuseable),2,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus|2); sfx(~_~ + randstatus.toLowerCase());,Infinity Mirror,COUNTDOWN,4,FINAL,ORANGE,,,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Star of the Show_downgraded,Inflict a random status,2,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase());,Infinity Mirror,COUNTDOWN,4,FINAL,ORANGE,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Emergency Barricade,Gain [shield]1 shield|[gray](Reuseable),2,inflictself(SHIELD); sfx(~_shield~);,Magic Dice,NORMAL,,FINAL,ORANGE,change_power,change_power,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Emergency Barricade_upgraded,Gain [shield]1[;] heal [heal]1|[gray](Reuseable),2,inflictself(SHIELD); attackself(-1); sfx(~_heal~); sfx(~_shield~|~~|0.3);,Magic Dice,NORMAL,,FINAL,ORANGE,,,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Emergency Barricade_downgraded,Gain [shield]1 shield|[gray](Reuseable),2,inflictself(SHIELD); sfx(~_shield~);,Magic Dice,EVEN,,FINAL,ORANGE,,,,,-1,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Drill Bit,Reactivate your gadgets,1,Gadget.reactivate(self| ALL); sfx(~_thinghappens~);,Efficiency,COUNTDOWN,5,ITEM,PURPLE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Drill Bit_upgraded,Reactivate your gadgets|,1,Gadget.reactivate(self| ALL); sfx(~_thinghappens~);,Efficiency,COUNTDOWN,5,ITEM,PURPLE,,,,,3,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Drill Bit_downgraded,No effect,1,,Efficiency,COUNTDOWN,5,ITEM,PURPLE,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Really Spiky Shield,Gain [shield]<d6> shield|(Enemy has [thorns]1 each turn),2,inflictself(SHIELD|d); sfx(~_shield~);,Coin Clippers,MAX4|FREE2,,SHIELD,ORANGE,change_power,change_power,thorns,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,inflict(THORNS);,e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Really Spiky Shield_upgraded,Gain [shield]<d6> shield|(Enemy has [thorns]1 each turn),2,inflictself(SHIELD|d); sfx(~_shield~);,Coin Clippers,MAX5|FREE2,,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,inflict(THORNS);,e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Really Spiky Shield_downgraded,Gain [shield]<d6> shield|(Enemy has [thorns]1 each turn),2,inflictself(SHIELD|d); sfx(~_shield~);,Coin Clippers,MAX4,,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,inflict(THORNS);,e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Really Spiky Shield?,Gain [shield]<d6> shield|(Enemy has [thorns]1 each turn),2,inflictself(SHIELD|d); sfx(~_shield~);,Coin Clippers,MAX4|FREE2,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,inflict(THORNS);,e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Really Spiky Shield?_upgraded,Gain [shield]<d6> shield|(Enemy has [thorns]1 each turn),2,inflictself(SHIELD|d); sfx(~_shield~);,Coin Clippers,MAX5|FREE2,,SHIELD,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,inflict(THORNS);,e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Really Spiky Shield?_downgraded,Gain [shield]<d6> shield|(Enemy has [thorns]1 each turn),2,inflictself(SHIELD|d); sfx(~_shield~);,Coin Clippers,MAX4,,SHIELD,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,inflict(THORNS);,e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Pandora's Box,Roll 3 extra dice|Receive [vanish] Vanish,1,var dicearray = []; for(x in 0...3){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); inflictself(VANISH); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,ITEM,PINK,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Pandora's Box_upgraded,Roll 4 extra dice|Receive [vanish] Vanish,1,var dicearray = []; for(x in 0...4){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); inflictself(VANISH); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,ITEM,PINK,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Pandora's Box_downgraded,Roll an extra dice|Receive [vanish] Vanish,1,givedice(); inflictself(VANISH); sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,ITEM,PINK,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Primal Slash,If enemy's health is a prime|number[;] do [sword]<double> damage,1,var h = target.hp; var flag = true; if(h == 1){flag = false; target.textparticle(~1 is not a prime!~);}; for(x in 2...h){if(h%x == 0){flag = false;};}; if(h == 2){flag = true;}; if(flag){attack(2*d); sfxdamage(target|2*d);}else{target.textparticle(~No effect!~);};,Catapult,MAX5,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Primal Slash_upgraded,If enemy's health is a prime|number[;] do [sword]<double> damage,1,var h = target.hp; var flag = true; if(h == 1){flag = false; target.textparticle(~1 is not a prime!~);}; for(x in 2...h){if(h%x == 0){flag = false;};}; if(h == 2){flag = true;}; if(flag){attack(2*d); sfxdamage(target|2*d);}else{target.textparticle(~No effect!~);};,Catapult,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Primal Slash_downgraded,If enemy's health is a prime|number[;] do [sword]<d6> damage,1,var h = target.hp; var flag = true; if(h == 1){flag = false; target.textparticle(~1 is not a prime!~);}; for(x in 2...h){if(h%x == 0){flag = false;};}; if(h == 2){flag = true;}; if(flag){attack(d); sfxdamage(target|d);}else{target.textparticle(~No effect!~);};,Catapult,MAX5,,WEAPON,RED,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Super Lockpick,Split a dice in two|Receive [vanish] Vanish|,1,givedice(split(d)); inflictself(VANISH);,Magic Lockpick,NORMAL,,ITEM,GREEN,change_power,change_power,vanish,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Super Lockpick_upgraded,Split a dice in three|Receive [vanish] Vanish|,1,givedice(split(d|3)); inflictself(VANISH);,Magic Lockpick,NORMAL,,ITEM,GREEN,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Super Lockpick_downgraded,Split a dice in two|Receive [vanish] Vanish,1,givedice(split(d));,Magic Lockpick,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Super Lockpick?,Split a dice in two|Receive unblockable [vanish] vanish|,1,givedice(split(d)); var r = getstatusself(REDUCE); removestatusself(REDUCE|ALL); inflictself(VANISH); inflictself(REDUCE|r);,Magic Lockpick,NORMAL,,ITEM,GREEN,change_power,change_power,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Super Lockpick?_upgraded,Split a dice in three|Receive unblockable [vanish] vanish|,1,givedice(split(d)|3); var r = getstatusself(REDUCE); removestatusself(REDUCE|ALL); inflictself(VANISH); inflictself(REDUCE|r);,Magic Lockpick,NORMAL,,ITEM,GREEN,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Super Lockpick?_downgraded,Split a dice in two|Receive unblockable [vanish] vanish,1,givedice(split(d)); var r = getstatusself(REDUCE); removestatusself(REDUCE|ALL); inflictself(VANISH); inflictself(REDUCE|r);,Magic Lockpick,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rockfall,Roll two dice that are|lower than <d6>,1,if(actualdice[0].basevalue >= 2){ var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice([rand(t)|rand(t)]);  };,Magic Dice,MIN3,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rockfall_upgraded,Roll three dice that are|lower than <d6>,1,if(actualdice[0].basevalue >= 2){ var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice([rand(t)|rand(t)|rand(t)]);  };,Magic Dice,MIN3,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rockfall_downgraded,Roll a dice that is|lower than <d6>,1,if(actualdice[0].basevalue >= 2){ var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice(rand(t));  };,Magic Dice,MIN3,,ITEM,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Bucket of Water,Set CPU counter to 0|Shock [shock]all your items,1,sfx(~_shock~); adjustrobotcounter(-self.roll_total); inflictself(SHOCK|ALL); self.applyequipmentcurses();,,EVEN,,ITEM,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Bucket of Water_upgraded,Set CPU counter to 0|Shock [shock]all your items,1,sfx(~_shock~); adjustrobotcounter(-self.roll_total); inflictself(SHOCK|ALL); self.applyequipmentcurses();,,NORMAL,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Bucket of Water_downgraded,Reduce CPU counter by half|Shock [shock]all your items,1,sfx(~_shock~); adjustrobotcounter(-(self.roll_total/2)); inflictself(SHOCK|ALL); self.applyequipmentcurses();,,EVEN,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Starstream,Each attack of [sword]4 or more|also inflicts a random status|,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Stardust,,,ITEM,PINK,change_power,change_power,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp + 3 < e.getvar(~enemyhealth~)){ e.doequipmentaction(self|target|e.castdirection|[]|0|true);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Starstream_upgraded,Each attack of [sword]4 or more|also inflicts 2x random status|,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus|2); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Stardust,,,ITEM,PINK,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp + 3 < e.getvar(~enemyhealth~)){ e.doequipmentaction(self|target|e.castdirection|[]|0|true);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Starstream_downgraded,Each attack of [sword]8 or more|also inflicts a random status|,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Stardust,,,ITEM,PINK,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp + 7 < e.getvar(~enemyhealth~)){ e.doequipmentaction(self|target|e.castdirection|[]|0|true);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Envenomate,Each attack of [sword]3 or more|also inflicts [poison]1 poison|,1,inflict(POISON); sfx(~_poison~);,Goop Gun,,,ITEM,PURPLE,change_power,change_power,,,3,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp + 2 < e.getvar(~enemyhealth~)){e.doequipmentaction(self|target|e.castdirection|[]|0|true);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Envenomate_upgraded,Each attack of [sword]3 or more|also inflicts [poison]1 poison|,1,inflict(POISON); sfx(~_poison~);,Goop Gun,,,ITEM,PURPLE,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp + 2 < e.getvar(~enemyhealth~)){e.doequipmentaction(self|target|e.castdirection|[]|0|true);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Envenomate_downgraded,Each attack of [sword]5 or more|also inflicts [poison]1 poison,1,inflict(POISON); sfx(~_poison~);,Goop Gun,,,ITEM,PURPLE,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,e.setvar(~enemyhealth~[;]target.hp);,if(target.hp + 4 < e.getvar(~enemyhealth~)){e.doequipmentaction(self|target|e.castdirection|[]|0|true);}; e.setvar(~enemyhealth~[;]target.hp);,,,,,
Breakthrough,Deal [sword]<d6> damage|On 6[;] gain [reduce]1 reduce,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(REDUCE); sfx(~_shield~|~~|0.2);};,Protection,NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Breakthrough_upgraded,Deal [sword]<d6> damage|On 6[;] gain [reduce]2 reduce,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(REDUCE|2); sfx(~_shield~|~~|0.2);};,Protection,NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Breakthrough_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Protection,NORMAL,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Amplify,Duplicate all other|<d6>s you have,1,var dicearray = []; for(mydice in self.dicepool){if(mydice.basevalue == d && mydice != actualdice[0]){dicearray.push(d);};}; givedice(dicearray);,Clone Device,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Amplify_upgraded,Duplicate all other <d6>s you|have[;] and return this dice,1,var dicearray = []; for(mydice in self.dicepool){if(mydice.basevalue == d){dicearray.push(d);};}; givedice(dicearray);,Clone Device,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Amplify_downgraded,Duplicate all other|<d6>s you have,1,var dicearray = []; for(mydice in self.dicepool){if(mydice.basevalue == d && mydice != actualdice[0]){dicearray.push(d);};}; givedice(dicearray);,Clone Device,MAX3,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reboot,Reroll this dice[;] and|all other <d6>s you have,1,var c = 0; for(mydice in self.dicepool){if(mydice.basevalue == d && mydice.available()){mydice.animatereroll(rand([1|2|3|4|5|6])[;] self.screenposition()[;] c * 0.05); c+=1; };}; givedice();,Magic Spanner,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reboot_upgraded,Reroll this and other <d6>s|[gray](2 uses this turn),1,var c = 0; for(mydice in self.dicepool){if(mydice.basevalue == d && mydice.available()){mydice.animatereroll(rand([1|2|3|4|5|6])[;] self.screenposition()[;] c * 0.05); c+=1; };}; givedice();,Magic Spanner,NORMAL,,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reboot_downgraded,Reroll all other <d6>s you have,1,var c = 0; for(mydice in self.dicepool){if(mydice.basevalue == d && mydice.available()){mydice.animatereroll(rand([1|2|3|4|5|6])[;] self.screenposition()[;] c * 0.05); c+=1; };};,Magic Spanner,NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sticky Sword,Deal [sword]<d6> damage|On 7[;] lock [lock]1 dice,2,attack(d); sfxdamage(target|d); if(d == 7){inflict(LOCK); sfx(~_lock~|~~|0.2);};,Padlock,EVEN|ODD,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sticky Sword_upgraded,Deal [sword]<d6> damage|On 7[;] lock [lock]1 dice,2,attack(d); sfxdamage(target|d); if(d == 7){inflict(LOCK); sfx(~_lock~|~~|0.2);};,Padlock,MIN2|MAX5,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sticky Sword_downgraded,Deal [sword]<d6> damage|On 7[;] lock [lock]1 dice,2,attack(d); sfxdamage(target|d); if(d == 7){inflict(LOCK); sfx(~_lock~|~~|0.2);};,Padlock,EVEN|ODD,7,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lancestave,[sword]<d6>[;] add status on doubles:|1:[shock] 2:[weaken] 3:[ice] 4:[fire],2,attack(d); sfxdamage(target|d); if(actualdice[0].basevalue == actualdice[1].basevalue){var effs = [SHOCK[;]WEAKEN[;]ICE[;]FIRE];inflict(effs[(d/2)-1]); var sounds=[~_shock~[;]~_weaken~[;]~_ice~[;]~_fire~]; sfx(sounds[(d/2)-1]|~~|0.2); };,Stardust,MAX4|MAX4,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lancestave_upgraded,[sword]<d6>[;] 2x status on doubles:|1:[shock] 2:[weaken] 3:[ice] 4:[fire],2,attack(d); sfxdamage(target|d); if(actualdice[0].basevalue == actualdice[1].basevalue){var effs = [SHOCK[;]WEAKEN[;]ICE[;]FIRE];inflict(effs[(d/2)-1]|2); var sounds=[~_shock~[;]~_weaken~[;]~_ice~[;]~_fire~]; sfx(sounds[(d/2)-1]|~~|0.2); };,Stardust,MAX4|MAX4,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lancestave_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d); ,Stardust,MAX4|MAX4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Helmet Headbutt,Deal [sword]<d6> damage|Gain [reduce]1 reduce,2,attack(d); sfxdamage(target|d); inflictself(REDUCE); sfx(~_shield~|~~|0.2);,Pillow Fort,EVEN,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Helmet Headbutt_upgraded,[sword]<d6> dmg[;] gain [reduce]1 reduce|,2,attack(d); sfxdamage(target|d); inflictself(REDUCE); sfx(~_shield~|~~|0.2);,Pillow Fort,EVEN,,WEAPON,ORANGE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Helmet Headbutt_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Pillow Fort,EVEN,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sundew,Deal [sword]<d6> damage|Restore half of [heal]<d6> health,2,attack(d); attackself(-d/2); sfxdamage(target|d); sfx(~_heal~|~~|0.2);,Regenerate,MAX5,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sundew_upgraded,Deal [sword]<d6> damage|Restore half of [heal]<d6> health,2,attack(d); attackself(-d/2); sfxdamage(target|d); sfx(~_heal~|~~|0.2);,Regenerate,NORMAL,,WEAPON,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sundew_downgraded,Deal [sword]<d6> damage|Restore half of [heal]<d6> health,2,attack(d); attackself(-d/2); sfxdamage(target|d); sfx(~_heal~|~~|0.2);,Regenerate,MAX3,,WEAPON,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Zap Cannon,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d); sfx(~_plasma~);,Plasma Gun,MIN3,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Zap Cannon_upgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d); sfx(~_plasma~);,Plasma Gun,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Zap Cannon_downgraded,Deal [sword]3 damage,1,attack(3); sfxdamage(target|3); sfx(~_plasma~);,Plasma Gun,MIN3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glaive,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,ODD,,WEAPON,RED,change_power,change_power,,none,3,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Glaive_upgraded,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,ODD|FREE1,,WEAPON,RED,,,,none,3,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Glaive_downgraded,Deal [sword]<d6> damage|,2,attack(d); sfxdamage(target|d);,Plasma Gun,REQUIRE5,,WEAPON,RED,,,,none,3,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Sarissa,Deal [sword]<d6> damage[;]|reusable on evens,2,attack(d); sfxdamage(target|d);,Shuriken,MAX5,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(d % 2 == 1) { e.usesleft= 0; };,,
Sarissa_upgraded,Deal [sword]<d6> damage[;]|reusable on odds,2,attack(d); sfxdamage(target|d);,Shuriken,MAX5,,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(d % 2 == 0) { e.usesleft= 0; };,,
Sarissa_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Shuriken,MAX5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hoplon,Gain [shield]<d6> shield|Reuseable on 1,1,inflictself(SHIELD|d); sfx(~_shield~);,Barricade,MAX3,,SHIELD,ORANGE,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(actualdice[0].basevalue != 1) { e.usesleft= 0; };,,
Hoplon_upgraded,Gain [shield]<d6> shield|Reuseable on 2,1,inflictself(SHIELD|d); sfx(~_shield~);,Barricade,MAX3|FREE1,,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(actualdice[0].basevalue != 1) { e.usesleft= 0; };,,
Hoplon_downgraded,Gain [shield]<d6> shield|Reuseable on 1,1,inflictself(SHIELD|d); sfx(~_shield~);,Barricade,MAX2,,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(actualdice[0].basevalue != 1) { e.usesleft= 0; };,,
Clipeus,Gain [shield]3 shield|Reuseable on 6,1,inflictself(SHIELD|3); sfx(~_shield~);,Barricade,MIN4,,SHIELD,ORANGE,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(d != 6) { e.usesleft= 0; };,,
Clipeus_upgraded,Gain [shield]3 shield|Reuseable on 6,1,inflictself(SHIELD|3); sfx(~_shield~);,Barricade,NORMAL,,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(d != 6) { e.usesleft= 0; };,,
Clipeus_downgraded,Gain [shield]2 shield|Reuseable on 6,1,inflictself(SHIELD|2); sfx(~_shield~);,Barricade,MIN4,,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,if(d != 6) { e.usesleft= 0; };,,
Sunder,Do [sword]<double> the higher dice|Take [sword]<d6> the lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var max = a; var min = b; if(b > max){min = a; max = b;}; attack(max*2); boomerang(min); sfxdamage(target|max*2);,Bubble Gun,MAX5|MAX5,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sunder_upgraded,Do [sword]<double> the higher dice|Take [sword]<d6> the lower dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var max = a; var min = b; if(b > max){min = a; max = b;}; attack(max*2); boomerang(min); sfxdamage(target|max*2);,Bubble Gun,NORMAL|NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sunder_downgraded,Do [sword]<double> the lower dice|Take [sword]<d6> the higher dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var max = a; var min = b; if(b > max){min = a; max = b;}; attack(min*2); boomerang(max); sfxdamage(target|min*2);,Bubble Gun,MAX5|MAX5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Petrification Spell,An enemy item can only be|activated with a <slotdoubles> next turn,1,var freeslots = [~FREE1~|~FREE2~|~FREE3~|~FREE4~|~FREE5~|~FREE6~]; var poss = []; var lowpriority = []; var petrifieditems = self.getvar(~petrifieditems~); var petrifieditemslots = self.getvar(~petrifieditemslots~); for(eq in target.equipment){if(eq.countdown == 0 && !eq.needsdoubles){if(eq.getslots()[0].indexOf(~REQUIRE~) > -1){lowpriority.push(eq);}else{poss.push(eq);};};}; if(poss.length == 0){poss = lowpriority;}; if(poss.length > 0){var r = rand(poss); petrifieditems.push(r); petrifieditemslots.push(r.getslots()); var modifier = []; for(s in r.getslots()){if(freeslots.indexOf(s) > -1){modifier.push(s);};};  r.changeslots([~REQUIRE~+d].concat(modifier)); sfx(~_weaken~);  sfx(~_lock~|~~|0.3); inflict(~petrified~+d);}else{target.textparticle(~No effect!~); sfx(~_dodge~);}; self.setvar(~petrifieditems~|petrifieditems); self.setvar(~petrifieditemslots~|petrifieditemslots); ,Padlock,DOUBLES|DOUBLES,,ITEM,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~petrifieditems~|[]); self.setvar(~petrifieditemslots~|[]);,,var items = self.getvar(~petrifieditems~); var slots = self.getvar(~petrifieditemslots~); var x = 0; while(x < items.length){items[x].changeslots(slots[x]); x = x+1; }; self.setvar(~petrifieditems~|[]); self.setvar(~petrifieditemslots~|[]);,,,,,,,
Petrification Spell_upgraded,An enemy item can only be|activated with a <d6> next turn,1,var freeslots = [~FREE1~|~FREE2~|~FREE3~|~FREE4~|~FREE5~|~FREE6~]; var poss = []; var lowpriority = []; var petrifieditems = self.getvar(~petrifieditems~); var petrifieditemslots = self.getvar(~petrifieditemslots~); for(eq in target.equipment){if(eq.countdown == 0 && !eq.needsdoubles){if(eq.getslots()[0].indexOf(~REQUIRE~) > -1){lowpriority.push(eq);}else{poss.push(eq);};};}; if(poss.length == 0){poss = lowpriority;}; if(poss.length > 0){var r = rand(poss); petrifieditems.push(r); petrifieditemslots.push(r.getslots()); var modifier = []; for(s in r.getslots()){if(freeslots.indexOf(s) > -1){modifier.push(s);};};  r.changeslots([~REQUIRE~+d].concat(modifier)); sfx(~_weaken~);  sfx(~_lock~|~~|0.3); inflict(~petrified~+d);}else{target.textparticle(~No effect!~); sfx(~_dodge~);}; self.setvar(~petrifieditems~|petrifieditems); self.setvar(~petrifieditemslots~|petrifieditemslots);,Padlock,NORMAL,,ITEM,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~petrifieditems~|[]); self.setvar(~petrifieditemslots~|[]);,,var items = self.getvar(~petrifieditems~); var slots = self.getvar(~petrifieditemslots~); var x = 0; while(x < items.length){items[x].changeslots(slots[x]); x = x+1; }; self.setvar(~petrifieditems~|[]); self.setvar(~petrifieditemslots~|[]);,,,,,,,
Petrification Spell_downgraded,An enemy item can only be|activated with a 6 next turn,1,var freeslots = [~FREE1~|~FREE2~|~FREE3~|~FREE4~|~FREE5~|~FREE6~]; var poss = []; var lowpriority = []; var petrifieditems = self.getvar(~petrifieditems~); var petrifieditemslots = self.getvar(~petrifieditemslots~); for(eq in target.equipment){if(eq.countdown == 0 && !eq.needsdoubles){if(eq.getslots()[0].indexOf(~REQUIRE~) > -1){lowpriority.push(eq);}else{poss.push(eq);};};}; if(poss.length == 0){poss = lowpriority;}; if(poss.length > 0){var r = rand(poss); petrifieditems.push(r); petrifieditemslots.push(r.getslots()); var modifier = []; for(s in r.getslots()){if(freeslots.indexOf(s) > -1){modifier.push(s);};};  r.changeslots([~REQUIRE6~].concat(modifier)); sfx(~_weaken~);  sfx(~_lock~|~~|0.3); inflict(~petrified6~);}else{target.textparticle(~No effect!~); sfx(~_dodge~);}; self.setvar(~petrifieditems~|petrifieditems); self.setvar(~petrifieditemslots~|petrifieditemslots);,Padlock,REQUIRE6|REQUIRE6,,ITEM,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~petrifieditems~|[]); self.setvar(~petrifieditemslots~|[]);,,var items = self.getvar(~petrifieditems~); var slots = self.getvar(~petrifieditemslots~); var x = 0; while(x < items.length){items[x].changeslots(slots[x]); x = x+1; }; self.setvar(~petrifieditems~|[]); self.setvar(~petrifieditemslots~|[]);,,,,,,,
Polymorph,Replace an enemy item|with another random item,1,var poss = []; for(eq in target.equipment){if(eq.skillcard == ~~){poss.push(eq);};}; var r = rand(poss); var itemcount = -1; for(x in poss){if(x.name == r.name){itemcount+=1;};}; if(r.size == 1){removeequipment(r.name[;] target); giveenemyequipment(rand(getparticularequipment(['small']))|false|false);}else{removeequipment(r.name[;] target); giveenemyequipment(rand(getparticularequipment(['large']))|false|false);}; if(itemcount > 0){for(x in 0...itemcount){giveenemyequipment(r.name|false|false);};}; sfx(~_thinghappens~); inflict(~polymorph~);,Mass Polymorph,COUNTDOWN,12,ITEM,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Polymorph_upgraded,Replace ALL enemy items|with other random items,1,var items = []; var newitems = []; for(eq in target.equipment){if(eq.skillcard == ~~){items.push(eq);};}; for(eq in items){removeequipment(eq.name|target); var neweq = ~~; if(eq.size == 1){neweq = rand(getparticularequipment(['small'])); while(neweq == eq.name){neweq = rand(getparticularequipment(['small']));};}else{neweq = rand(getparticularequipment(['large'])); while(neweq == eq.name){neweq = rand(getparticularequipment(['small']));};}; newitems.push(neweq);}; giveenemyequipment(newitems|false|false); sfx(~_thinghappens~); inflict(~polymorphall~);,Mass Polymorph,COUNTDOWN,12,ITEM,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Polymorph_downgraded,Replace an enemy item|with an upgraded random item,1,var poss = []; for(eq in target.equipment){if(eq.skillcard == ~~){poss.push(eq);};}; var r = rand(poss); var itemcount = -1; for(x in poss){if(x.name == r.name){itemcount+=1;};}; if(r.size == 1){removeequipment(r.name[;] target); giveenemyequipment(rand(getparticularequipment(['small'])+~+~)|false|false);}else{removeequipment(r.name[;] target); giveenemyequipment(rand(getparticularequipment(['large'])+~+~)|false|false);}; if(itemcount > 0){for(x in 0...itemcount){giveenemyequipment(r.name|false|false);};}; sfx(~_thinghappens~); inflict(~polymorph~);,Mass Polymorph,COUNTDOWN,12,ITEM,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pencil,Roll an extra dice,1,givedice();,Magic Dice,COUNTDOWN,6,ITEM,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pencil_upgraded,Roll an extra dice|[gray](2 uses this turn),1,givedice();,Magic Dice,COUNTDOWN,6,ITEM,BRIGHTCYAN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pencil_downgraded,Roll a 1,1,givedice(1);,Magic Dice,COUNTDOWN,6,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vent Steam,Calculate again[;] do [ice]dmg|equal to number calculated,1,robotroll(); var d = 0; for (mydice in self.dicepool){ if (mydice.available()){ d = mydice.basevalue; } }; attack(d[;]ICE); sfx(~_ice~);,,COUNTDOWN,3,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Vent Steam_upgraded,Calculate again[;] do [ice]dmg|equal to number calculated|,1,robotroll(); var d = 0; for (mydice in self.dicepool){ if (mydice.available()){ d = mydice.basevalue; } }; attack(d[;]ICE); sfx(~_ice~);,,COUNTDOWN,3,WEAPON,BRIGHTCYAN,,,,,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Vent Steam_downgraded,Calculate again[;] deal|[ice]1 damage,1,robotroll(); attack(1[;]ICE); sfx(~_ice~);,,COUNTDOWN,3,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Freezing Trap,Deal [shock]4 damage[;] shock|[shock]1 item[;] freeze [ice]1 dice,1,attack(4[;]SHOCK); sfx(~_ice~); inflict(SHOCK); inflict(ICE[;]1); sfx(~_shock~);,Flashbang,COUNTDOWN,12,WEAPON,YELLOW,change_power,change_power,ice,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Freezing Trap_upgraded,Deal [shock]4 damage[;] stun|[shock]1 item[;] freeze [ice]2 dice,1,attack(4[;]SHOCK); sfx(~_ice~); inflict(ICE[;]2); var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;}; inflict(~mf_stun~); sfx(~_shock~);,Flashbang,COUNTDOWN,12,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Freezing Trap_downgraded,Deal 4 damage,1,attack(4); sfxdamage(target|4);,Flashbang,COUNTDOWN,12,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Freezing Trap?,Deal [shock]4 damage[;] shock|[shock]1 item[;] inflict [ice]1 freeze,1,attack(4[;]SHOCK); sfx(~_ice~); inflict(SHOCK); inflict(ICE[;]1); sfx(~_shock~);,Flashbang,COUNTDOWN,12,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Freezing Trap?_upgraded,Deal [shock]4 damage[;] stun|[shock]1 item[;] inflict [ice]2 freeze,1,attack(4[;]SHOCK); sfx(~_ice~); inflict(ICE[;]2); target.bonusdice-=1; inflict(~alternate_mf_stun~); sfx(~_shock~);,Flashbang,COUNTDOWN,12,WEAPON,YELLOW,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Freezing Trap?_downgraded,Deal 4 damage,1,attack(4); sfxdamage(target|4);,Flashbang,COUNTDOWN,12,WEAPON,YELLOW,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Siphon,Drain [heart]3 health for each|[ice]frozen enemy dice,1,drain(getstatus(ICE)*3); sfx(~_drain~); sfx(~_ice~);,Life Leech,COUNTDOWN,10,WEAPON,BRIGHTCYAN,change_power,change_power,ice,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Frost Siphon_upgraded,Drain [heart]4 health for each|[ice]frozen enemy dice,1,drain(getstatus(ICE)*4); sfx(~_drain~); sfx(~_ice~);,Life Leech,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Siphon_downgraded,Drain [heart]2 health for each|[ice]frozen enemy dice,1,drain(getstatus(ICE)*2); sfx(~_drain~); sfx(~_ice~);,Life Leech,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Siphon?,Drain [heart]3 health for each|[ice]freeze on enemy,1,drain(getstatus(ICE)*3); sfx(~_drain~); sfx(~_ice~);,Life Leech,COUNTDOWN,10,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Frost Siphon?_upgraded,Drain [heart]4 health for each|[ice]freeze on enemy,1,drain(getstatus(ICE)*4); sfx(~_drain~); sfx(~_ice~);,Life Leech,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Siphon?_downgraded,Drain [heart]2 health for each|[ice]freeze on enemy,1,drain(getstatus(ICE)*2); sfx(~_drain~); sfx(~_ice~);,Life Leech,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Glaciate,Freeze [ice]all of|everyone's dice,1,inflict(ICE[;]ALL); var t = 0; for(mydice in self.dicepool){ if (mydice.available()){ mydice.animate(~ice~|t); t+=0.1;}; };,Blowtorch,COUNTDOWN,12,MAGIC,BRIGHTCYAN,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Glaciate_upgraded,[ice]Freeze everyone's dice[;] do|[ice]1 dmg per dice frozen,1,var total = 0; total+=target.dice; total+=target.extradice; inflict(ICE[;]ALL); var t = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animate(~ice~|t); t+=0.2;}; }; attack(total[;]ICE); sfxdamage(target|total); sfx(~_ice~);,Blowtorch,COUNTDOWN,12,MAGIC,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glaciate_downgraded,Freeze [ice]all of|your dice,1,var t = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animate(~ice~|t); t+=0.1;}; },Blowtorch,COUNTDOWN,12,MAGIC,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryoshock,[ice]10 dmg + [ice]2 freeze|[gray](once per battle),1,attack(10[;]ICE); inflict(ICE[;]2); sfx(~_ice~);,Blowtorch,COUNTDOWN,10,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Cryoshock_upgraded,[ice]13 dmg + [ice]4 freeze|[gray](once per battle),1,attack(13[;]ICE); inflict(ICE[;]4); sfx(~_ice~);,Blowtorch,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Cryoshock_downgraded,[ice]5 dmg + [ice]1 freeze|[gray](once per battle),1,attack(5[;]ICE); inflict(ICE[;]1); sfx(~_ice~);,Blowtorch,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Ice Lash,1-3: freeze [ice]<d6> dice|4-6: do [ice]<d6> damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(ICE[;]d); }else{ attack(d[;]ICE); }; sfx(~_ice~);,Blowtorch,NORMAL,,WEAPON,BRIGHTCYAN,change_power,change_power,ice,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ice Lash_upgraded,1-3: freeze [ice]3 dice|4-6: do [ice]6 damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(ICE[;]3); }else{ attack(6[;]ICE); }; sfx(~_ice~);,Blowtorch,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ice Lash_downgraded,1-3: freeze [ice]<d6> dice|4-6: do [ice]<d6> damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(ICE[;]d); }else{ attack(d[;]ICE); }; sfx(~_ice~);,Blowtorch,EVEN,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ice Lash?,1-3: inflict [ice]<d6> freeze|4-6: do [ice]<d6> damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(ICE[;]d); }else{ attack(d[;]ICE); }; sfx(~_ice~);,Blowtorch,NORMAL,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ice Lash?_upgraded,1-3: inflict [ice]3 freeze|4-6: do [ice]6 damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(ICE[;]3); }else{ attack(6[;]ICE); }; sfx(~_ice~);,Blowtorch,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Ice Lash?_downgraded,1-3: inflict [ice]<d6> freeze|4-6: do [ice]<d6> damage,2,var x = actualdice[0].basevalue; if(x < 4){ inflict(ICE[;]d); }else{ attack(d[;]ICE); }; sfx(~_ice~);,Blowtorch,EVEN,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryocautery,Freeze [ice]2 dice[;]|inflict [poison]2 poison,1,inflict(ICE[;]2); sfx(~_ice~); inflict(POISON[;]2); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,BRIGHTCYAN,change_power,change_power,ice,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cryocautery_upgraded,Freeze [ice]3 dice[;]|inflict [poison]3 poison,1,inflict(ICE[;]3); sfx(~_ice~); inflict(POISON[;]3); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryocautery_downgraded,Freeze [ice]1 dice[;]|inflict [poison]1 poison,1,inflict(ICE[;]1); sfx(~_ice~); inflict(POISON[;]1); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryocautery?,Inflict [ice]2 freeze[;]|inflict [poison]2 poison,1,inflict(ICE[;]2); sfx(~_ice~); inflict(POISON[;]2); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cryocautery?_upgraded,Inflict [ice]3 freeze[;]|inflict [poison]3 poison,1,inflict(ICE[;]3); sfx(~_ice~); inflict(POISON[;]3); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryocautery?_downgraded,Inflict [ice]1 freeze[;]|inflict [poison]1 poison,1,inflict(ICE[;]1); sfx(~_ice~); inflict(POISON[;]1); sfx(~_poison~);,Goop Gun,COUNTDOWN,10,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Green Dragon's Blade,Deal [sword]<d6> damage|Freeze [ice]1 dice for each|damage over 5 this does,2,var h = target.hp; attack(d); sfxdamage(target|d); h-=target.hp; if(h > 5){ inflict(ICE[;]h - 5); sfx(~_ice~); };,Ember,MAX5,,WEAPON,GREEN,change_power,change_power,ice,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Green Dragon's Blade_upgraded,Deal [sword]<d6> damage|Freeze [ice]1 dice for each|damage over 5 this does,2,var h = target.hp; attack(d); sfxdamage(target|d); h-=target.hp; if(h > 6){ inflict(ICE[;]h - 6); sfx(~_ice~); };,Ember,MAX5|FREE1,,WEAPON,GREEN,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Green Dragon's Blade_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Ember,MAX5,,WEAPON,GREEN,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Green Dragon's Blade?,Deal [sword]<d6> damage|Inflict [ice]1 freeze for each|damage over 5 this does,2,var h = target.hp; attack(d); sfxdamage(target|d); h-=target.hp; sfxdamage(target|d); if(h > 5){ inflict(ICE[;]h - 5); sfx(~_ice~); };,Ember,MAX5,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Green Dragon's Blade?_upgraded,Deal [sword]<d6> damage|Inflict [ice]1 freeze for each|damage over 6 this does,2,var h = target.hp; attack(d); sfxdamage(target|d); h-=target.hp; sfxdamage(target|d); if(h > 6){ inflict(ICE[;]h - 6); sfx(~_ice~); };,Ember,MAX5|FREE1,,WEAPON,GREEN,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Green Dragon's Blade?_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Ember,MAX5,,WEAPON,GREEN,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Frost Fling,Deal [ice]2 damage[;] roll a 1|[gray](Reusable),2,attack(2[;]ICE); sfx(~_ice~); givedice(1);,Ember,MIN2,,WEAPON,BRIGHTCYAN,change_power,change_power,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Fling_upgraded,Deal [ice]3 damage[;] roll a 1|[gray](Reusable),2,attack(3[;]ICE); sfx(~_ice~); givedice(1);,Ember,MIN2,,WEAPON,BRIGHTCYAN,,,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Fling_downgraded,Deal [ice]2 damage[;] roll a 1,2,attack(2[;]ICE); sfx(~_ice~); givedice(1);,Ember,MIN2,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Icy Iceblade of Iciness,Deal [ice]<double> damage|While equipped[;] [ice]ALL of|your dice are frozen,2,attack(d*2[;]ICE); sfx(~_ice~);,Ember,NORMAL,,WEAPON,BRIGHTCYAN,change_power,change_power,ice,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,inflictself(ICE[;]ALL); sfx(~_ice~);,,,,,,,
Icy Iceblade of Iciness_upgraded,Deal [ice]<double> damage|While equipped[;] [ice]ALL of|your dice are frozen,2,attack(d*2[;]ICE); sfx(~_ice~);,Ember,NORMAL|FREE1,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,inflictself(ICE[;]ALL); sfx(~_ice~);,,,,,,,
Icy Iceblade of Iciness_downgraded,Deal [ice]<double> damage|While equipped[;] [ice]ALL of|your dice are frozen,2,attack(d*2[;]ICE); sfx(~_ice~);,Ember,MAX3,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,inflictself(ICE[;]ALL); sfx(~_ice~);,,,,,,,
Icy Iceblade of Iciness?,Deal [ice]<double> damage|While equipped[;] [ice]ALL of|your dice are frozen,2,attack(d*2[;]ICE); sfx(~_ice~);,Ember,NORMAL,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,inflictself(ICE[;]6); sfx(~_ice~);,,,,,,,
Icy Iceblade of Iciness?_upgraded,Deal [ice]<double> damage|While equipped[;] [ice]ALL of|your dice are frozen,2,attack(d*2[;]ICE); sfx(~_ice~);,Ember,NORMAL|FREE1,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,inflictself(ICE[;]6); sfx(~_ice~);,,,,,,,
Icy Iceblade of Iciness?_downgraded,Deal [ice]<double> damage|While equipped[;] [ice]ALL of|your dice are frozen,2,attack(d*2[;]ICE); sfx(~_ice~);,Ember,MAX3,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,inflictself(ICE[;]6); sfx(~_ice~);,,,,,,,
Splinters,Roll two [ice]frozen[] dice|[gray](Reusable),1,var amount = 2; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~ice~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,BRIGHTCYAN,change_power,change_power,ice,,-1,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Splinters_upgraded,Roll three [ice]frozen[] dice|[gray](Reusable),1,var amount = 3; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~ice~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,BRIGHTCYAN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Splinters_downgraded,Roll a [ice]frozen[] dice|[gray](Reusable),1,var amount = 1; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~ice~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,BRIGHTCYAN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Splinters?,Roll two [ice]frozen[] dice|[gray](Reusable),1,var amount = 2; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~alternate_ice~|(x*1.0)/5+0.5); sfx(~_ice~|~~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,BRIGHTCYAN,change_power,change_power,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Splinters?_upgraded,Roll three [ice]frozen[] dice|[gray](Reusable),1,var amount = 3; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~alternate_ice~|(x*1.0)/5+0.5); sfx(~_ice~|~~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,BRIGHTCYAN,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Splinters?_downgraded,Roll a [ice]frozen[] dice|[gray](Reusable),1,var amount = 1; var dicearray = []; for(x in 0...amount){dicearray.push(rand([1|2|3|4|5|6]));}; givedice(dicearray); for(x in 0...amount){ self.dicepool[self.dicepool.length-(amount-x)].animate(~alternate_ice~|(x*1.0)/5+0.5); sfx(~_ice~|~~|(x*1.0)/5+0.5);};,Snake Eyes,COUNTDOWN,8,ITEM,BRIGHTCYAN,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Comet Storm,[ice]2 dmg to you and enemy|[gray](Reusable),1,attack(2[;]ICE); sfx(~_ice~); boomerang(2[;]ICE);,Boom!,COUNTDOWN,2,WEAPON,BRIGHTCYAN,change_power,change_power,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Comet Storm_upgraded,[ice]4 dmg to you and enemy|[gray](Reusable),1,attack(4[;]ICE); sfx(~_ice~); boomerang(4[;]ICE);,Boom!,COUNTDOWN,2,WEAPON,BRIGHTCYAN,,,,,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Comet Storm_downgraded,[ice]2 dmg to yourself|[gray](Reusable),1,attackself(2[;]ICE); sfx(~_ice~);,Boom!,COUNTDOWN,2,WEAPON,BRIGHTCYAN,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryolily,Freeze [ice]1 dice|(Cost [mana]2: +[ice]1 extra),1,inflict(ICE); sfx(~_ice~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflict(ICE);};,,NORMAL|NORMAL,5,MAGIC,BRIGHTCYAN,change_power,change_power,ice,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cryolily_upgraded,Freeze [ice]1 dice|(Cost [mana]2: +[ice]1 extra),1,inflict(ICE); sfx(~_ice~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflict(ICE);};,,MAX4|MAX4,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryolily_downgraded,Freeze [ice]1 dice,1,inflict(ICE); sfx(~_ice~);,,NORMAL|NORMAL,5,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryolily?,Inflict [ice]1 freeze|(Cost [mana]2: +[ice]1 extra),1,inflict(ICE); sfx(~_ice~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflict(ICE);};,,NORMAL|NORMAL,5,MAGIC,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cryolily?_upgraded,Inflict [ice]1 freeze|(Cost [mana]2: +[ice]1 extra),1,inflict(ICE); sfx(~_ice~); if(getstatusself(MANA) >= 2){removestatusself(MANA|2); inflict(ICE);};,,MAX4|MAX4,,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cryolily?_downgraded,Inflict [ice]1 freeze,1,inflict(ICE); sfx(~_ice~);,,NORMAL|NORMAL,5,MAGIC,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Smoke,[fire]Burn yourself[;]|restore [heal]<d6> health,1,inflictself(FIRE); attackself(-d); sfx(~_fire~); sfx(~_heal~);,,MAX5,,ITEM,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Smoke_upgraded,[fire]Burn yourself[;]|restore [heal]<d6> health,1,inflictself(FIRE); attackself(-d); sfx(~_fire~); sfx(~_heal~);,,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magic Smoke_downgraded,[fire]Burn yourself[;]|restore [heal]<d6> health,1,inflictself(FIRE); attackself(-d); sfx(~_fire~); sfx(~_heal~);,,MAX3,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Firewall,[lock]Lock all [fire]burning|enemy dice,2,inflict(LOCK[;]getstatus(FIRE)); sfx(~_fire~); sfx(~_lock~);,Padlock,EVEN,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Firewall_upgraded,[lock]Lock all [fire]burning|enemy dice,2,inflict(LOCK[;]getstatus(FIRE)); sfx(~_fire~); sfx(~_lock~);,Padlock,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Firewall_downgraded,[lock]Lock up to 1 [fire]burning|enemy dice,2,if(getstatus(FIRE) > 0){ inflict(LOCK[;]1); }; sfx(~_fire~); sfx(~_lock~);,Padlock,EVEN,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chimney Fire,Inflict [weaken]1 weaken[;] [fire]1|burn and [poison]2 poison,1,inflict(FIRE[;]1); inflict(WEAKEN[;]1); inflict(POISON[;]2); sfx(~_fire~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,ITEM,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Chimney Fire_upgraded,Inflict [weaken]1 weaken[;] [fire]2|burn and [poison]3 poison,1,inflict(FIRE[;]2); inflict(WEAKEN[;]1); inflict(POISON[;]3); sfx(~_fire~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,ITEM,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chimney Fire_downgraded,Inflict [weaken]1 weaken[;] [fire]1|burn or [poison]1 poison,1,var f = [FIRE[;]WEAKEN[;]POISON]; inflict(rand(f)[;]1); sfx(~_fire~); sfx(~_weaken~);,Burrower,COUNTDOWN,12,ITEM,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flaming Dirk,Deal [fire]<d6> damage|On even[;] burn [fire]2 dice,1,attack(d[;]FIRE); sfx(~_fire~); if(d%2 == 0){inflict(FIRE[;]2);};,Refrigerator,MAX4,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Flaming Dirk_upgraded,Deal [fire]<d6> damage|On even[;] burn [fire]2 dice,1,attack(d[;]FIRE); sfx(~_fire~); if(d%2 == 0){inflict(FIRE[;]2);};,Refrigerator,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flaming Dirk_downgraded,Deal [fire]<d6> damage,1,attack(d[;]FIRE); sfx(~_fire~);,Refrigerator,MAX4,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Everflame,[fire]<double> damage. Next turn[;]|you receive [fire]<d6> burn,2,attack(d*2[;]FIRE); jinx(~Everflame~|~receive [fire]%VAR% burn~|~Receive [fire]%VAR% burn~|~inflict(FIRE|%VAR%); sfx(\~_fire\~);~|self|self|1|d); sfx(~_fire~);,Arctic Storm,MAX5,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Everflame_upgraded,[fire]<double> damage. Next turn[;]|you receive [fire]<d6> burn,2,attack(d*2[;]FIRE); jinx(~Everflame~|~receive [fire]%VAR% burn~|~Receive [fire]%VAR% burn~|~inflict(FIRE|%VAR%); sfx(\~_fire\~);~|self|self|1|d); sfx(~_fire~);,Arctic Storm,NORMAL,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Everflame_downgraded,[fire]<d6> damage. Next turn[;]|you receive [fire]<d6> burn,2,attack(d*2[;]FIRE); jinx(~Everflame~|~receive [fire]%VAR% burn~|~Receive [fire]%VAR% burn~|~inflict(FIRE|%VAR%); sfx(\~_fire\~);~|self|self|1|d); sfx(~_fire~);,Arctic Storm,MAX5,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cinderstorm,Double the enemy's|[fire]burn,1,inflict(FIRE[;]getstatus(FIRE)); sfx(~_fire~);,Refrigerator,COUNTDOWN,6,MAGIC,RED,change_poison,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Cinderstorm_upgraded,Triple the enemy's|[fire]burn,1,inflict(FIRE[;]getstatus(FIRE)*2); sfx(~_fire~);,Refrigerator,COUNTDOWN,6,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cinderstorm_downgraded,Burn [fire]1 dice,1,inflict(FIRE[;]1); sfx(~_fire~);,Refrigerator,COUNTDOWN,6,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pyrodrop,Burn [fire]1 dice|(If [mana]>=3: do [fire]<d6> damage),1,inflict(FIRE); sfx(~_fire~); if(getstatusself(MANA) >= 3){attack(d|FIRE);};,,NORMAL|NORMAL,6,MAGIC,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Pyrodrop_upgraded,Burn [fire]1 dice|(If [mana]>=3: do [fire]<d6> damage),1,inflict(FIRE); sfx(~_fire~); if(getstatusself(MANA) >= 3){attack(d|FIRE);};,,NORMAL|NORMAL,8,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Pyrodrop_downgraded,Burn [fire]1 dice|(If [mana]>=3: do [fire]<d6> damage),1,inflict(FIRE); sfx(~_fire~); if(getstatusself(MANA) >= 3){attack(d|FIRE);};,,NORMAL|NORMAL,4,MAGIC,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Battle Sax,Deal [weaken]<double> damage|Weaken [weaken]1 item,2,attack(d*2|WEAKEN); sfxdamage(target|d*2); sfx(~_weaken~); inflict(WEAKEN);,Burrower,MAX3,,FINAL,ORANGE,change_power,change_power,weaken,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Battle Sax_upgraded,Deal [weaken]<double> damage|Weaken [weaken]2 items,2,attack(d*2|WEAKEN); sfxdamage(target|d*2); sfx(~_weaken~); inflict(WEAKEN|2);,Burrower,MAX3,,FINAL,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Battle Sax_downgraded,Deal [weaken]<double> damage,2,attack(d*2|WEAKEN); sfxdamage(target|d*2); sfx(~_weaken~);,Burrower,MAX3,,FINAL,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Battle Sax?,Inflict [weaken]1 weaken[;] then|deal [weaken]<double> damage,2,inflict(WEAKEN); attack(d*2|WEAKEN); sfxdamage(target|d*2); sfx(~_weaken~);,Burrower,MAX3,,FINAL,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Battle Sax?_upgraded,Inflict [weaken]2 weaken[;] then|deal [weaken]<double> damage,2,inflict(WEAKEN|2); attack(d*2|WEAKEN); sfxdamage(target|d*2); sfx(~_weaken~);,Burrower,MAX3,,FINAL,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Battle Sax?_downgraded,Deal [weaken]<double> damage,2,attack(d*2|WEAKEN); sfxdamage(target|d*2); sfx(~_weaken~);,Burrower,MAX3,,FINAL,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nerf Hammer,Enemy items become harder|to play[;] until weakened|[gray](once per battle),2,var requireslots = [~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~]; var maxslots = [~MAX5~[;]~MAX4~[;]~MAX3~[;]~MAX2~]; var minslots = [~MIN2~[;]~MIN3~[;]~MIN4~[;]~MIN5~]; var freeslots = [~FREE1~|~FREE2~|~FREE3~|~FREE4~|~FREE5~|~FREE6~]; var slots = []; for(eq in target.equipment){var output = []; if(eq.skillcard == ~~ && eq.countdown == 0){ slots = eq.getslots(); var flag = false; for(s in slots){if(freeslots.indexOf(s) > -1){flag = true;};}; if(flag){for(s in slots){if(freeslots.indexOf(s) == -1){output.push(s);};}; }else if(eq.needsdoubles){var r = rand([1|2|3|4|5|6]); output = [~REQUIRE~+r|~REQUIRE~+r]; eq.needsdoubles = false;}else{for(s in slots){ if(maxslots.indexOf(s) != -1){ if(maxslots.indexOf(s)+1 ==maxslots.length){ output.push(~REQUIRE1~); }else{ output.push(maxslots[maxslots.indexOf(s) + 1]); }; }else if(minslots.indexOf(s) != -1){ if(minslots.indexOf(s)+1 ==minslots.length){ output.push(~REQUIRE6~); }else{ output.push(minslots[minslots.indexOf(s) + 1]); }; }else if(s == ~EVEN~){output.push(~REQUIRE~+rand([2|4|6]));}else if(s == ~ODD~){output.push(~REQUIRE~+rand([1|3|5]));}else if(s == ~NORMAL~){output.push(~MAX5~);}else if(requireslots.indexOf(s) != -1){output.push(s); output.push(s);}else{output.push(s);}; };}; if(output.length > 0){ if(output.length <= 4){ eq.animate(~flashandshake~); eq.changeslots(output); }else{eq.changeslots([output[0]|output[1]|output[2]|output[3]]);};};}else if(eq.skillcard == ~~ && eq.countdown!=0){eq.countdown = eq.countdown*1.1 + 1; eq.remainingcountdown = eq.remainingcountdown*1.1+1;};  }; sfx(~_thinghappens~); inflict(~nerfed~);,Burrower,COUNTDOWN,15,FINAL,ORANGE,change_power,change_power,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Nerf Hammer_upgraded,Enemy items become harder|to play[;] until weakened,2,var requireslots = [~REQUIRE1~|~REQUIRE2~|~REQUIRE3~|~REQUIRE4~|~REQUIRE5~|~REQUIRE6~]; var maxslots = [~MAX5~[;]~MAX4~[;]~MAX3~[;]~MAX2~]; var minslots = [~MIN2~[;]~MIN3~[;]~MIN4~[;]~MIN5~]; var freeslots = [~FREE1~|~FREE2~|~FREE3~|~FREE4~|~FREE5~|~FREE6~]; var slots = []; for(eq in target.equipment){var output = []; if(eq.skillcard == ~~ && eq.countdown == 0){ slots = eq.getslots(); var flag = false; for(s in slots){if(freeslots.indexOf(s) > -1){flag = true;};}; if(flag){for(s in slots){if(freeslots.indexOf(s) == -1){output.push(s);};}; }else if(eq.needsdoubles){var r = rand([1|2|3|4|5|6]); output = [~REQUIRE~+r|~REQUIRE~+r]; eq.needsdoubles = false;}else{for(s in slots){ if(maxslots.indexOf(s) != -1){ if(maxslots.indexOf(s)+1 ==maxslots.length){ output.push(~REQUIRE1~); }else{ output.push(maxslots[maxslots.indexOf(s) + 1]); }; }else if(minslots.indexOf(s) != -1){ if(minslots.indexOf(s)+1 ==minslots.length){ output.push(~REQUIRE6~); }else{ output.push(minslots[minslots.indexOf(s) + 1]); }; }else if(s == ~EVEN~){output.push(~REQUIRE~+rand([2|4|6]));}else if(s == ~ODD~){output.push(~REQUIRE~+rand([1|3|5]));}else if(s == ~NORMAL~){output.push(~MAX5~);}else if(requireslots.indexOf(s) != -1){output.push(s); output.push(s);}else{output.push(s);}; };}; if(output.length > 0){ if(output.length <= 4){ eq.animate(~flashandshake~); eq.changeslots(output); }else{eq.changeslots([output[0]|output[1]|output[2]|output[3]]);};};}else if(eq.skillcard == ~~ && eq.countdown!=0){eq.countdown = eq.countdown*1.1 + 1; eq.remainingcountdown = eq.remainingcountdown*1.1+1;};  }; sfx(~_thinghappens~); inflict(~nerfed~);,Burrower,COUNTDOWN,15,FINAL,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Nerf Hammer_downgraded,No effect,2,sfx(~_curse~);,Burrower,COUNTDOWN,15,FINAL,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Healing Boomerang,Restore [heal]<double> health[;]|for you and the enemy,1,attack(-d*2); sfx(~_heal~); attackself(-d*2);,Regenerate,MAX4,,SHIELD,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Healing Boomerang_upgraded,Restore [heal]<double> health[;]|for you and the enemy,1,attack(-d*2); sfx(~_heal~); attackself(-d*2);,Regenerate,MAX5,,SHIELD,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Healing Boomerang_downgraded,Restore [heal]<double> health[;]|for the enemy,1,attack(-d*2); sfx(~_heal~); ,Regenerate,MAX4,,SHIELD,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mossy Cauldron,Restore [heal]1 health[;] get a|new dice with lower value,1,attackself(-1); sfx(~_heal~); if(actualdice[0].basevalue >= 2){ var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice(rand(t));  };,Revitalize,MIN2,,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Mossy Cauldron_upgraded,[heal]1[;] reroll with lower value|,1,attackself(-1); sfx(~_heal~); if(actualdice[0].basevalue >= 2){ var t = []; var x = 1; while(x < actualdice[0].basevalue){ t.push(x); x+=1; }; givedice(rand(t));  };,Revitalize,MIN2,,MAGIC,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mossy Cauldron_downgraded,Restore [heal]1 health,1,attackself(-1); sfx(~_heal~);,Revitalize,MIN2,,MAGIC,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trash Cauldron,Inflict [poison]1 poison[;] lose [heart]1|health[;] get a new dice,1,inflict(POISON); sfx(~_poison~|~~|0.2); pierceattackself(1); sfx(~_drain~); givedice();,Goop Gun,NORMAL,,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Trash Cauldron_upgraded,Add [poison]1[;] lose [heart]1 [;] reroll dice|,1,inflict(POISON); sfx(~_poison~|~~|0.2); pierceattackself(1); sfx(~_drain~); givedice();,Goop Gun,NORMAL,,MAGIC,PURPLE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trash Cauldron_downgraded,Inflict [poison]1 poison[;] lose [heart]1 hp,1,inflict(POISON); sfx(~_poison~|~~|0.2); pierceattackself(1); sfx(~_drain~);,Goop Gun,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ash Cauldron,Burn [fire]1 dice[;] get a new|burning dice with higher value,1,inflict(FIRE); sfx(~_fire~);  if(actualdice[0].basevalue <=6){ var t = []; var x = 6; while(x > actualdice[0].basevalue){ t.push(x); x-=1; }; givedice(rand(t));  }else{givedice(6);}; self.dicepool[self.dicepool.length - 1].animate(~fire~);,Ember,MAX5,,MAGIC,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Ash Cauldron_upgraded,[fire]1[;] get a higher burning dice|,1,inflict(FIRE); sfx(~_fire~);  if(actualdice[0].basevalue <=6){ var t = []; var x = 6; while(x > actualdice[0].basevalue){ t.push(x); x-=1; }; givedice(rand(t));  }else{givedice(6);}; self.dicepool[self.dicepool.length - 1].animate(~fire~);,Ember,MAX5,,MAGIC,RED,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ash Cauldron_downgraded,Burn [fire]1 dice,1,inflict(FIRE); sfx(~_fire~); ,Ember,MAX5,,MAGIC,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stash Cauldron,Deal [sword]1 damage[;] get a|new dice next turn,1,attack(1); sfxdamage(target|1); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~illuminate~); sfx(~magic_gaindice~);,Magic Lantern,NORMAL,,MAGIC,YELLOW,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Stash Cauldron_upgraded,[sword]1[;] get a new dice next turn|,1,attack(1); sfxdamage(target|1); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~illuminate~); sfx(~magic_gaindice~);,Magic Lantern,NORMAL,,MAGIC,YELLOW,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stash Cauldron_downgraded,Deal [sword]1 damage,1,attack(1); sfxdamage(target|1);,Magic Lantern,NORMAL,,MAGIC,YELLOW,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hat Cauldron,Gain [reduce]1 reduce|Get a new dice,1,inflictself(REDUCE); sfx(~_shield~); givedice();,Pillow Fort,MIN5,,MAGIC,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Hat Cauldron_upgraded,Gain [reduce]1[;] reroll dice|,1,inflictself(REDUCE); sfx(~_shield~); givedice();,Pillow Fort,MIN5,,MAGIC,ORANGE,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hat Cauldron_downgraded,Gain [reduce]1 reduce,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,MIN5,,MAGIC,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trebuchet,[sword]<d6> dmg next turn (<var:trebuchet>)|,1,self.setvar(~trebuchet~|self.getvar(~trebuchet~)+d); sfx(~jackpot_increasecounter~);,Bubble Gun,MAX4,,WEAPON,RED,change_power,change_power,,,-1,YES,NO,NO,YES,NO,NO,NO,NO,,self.setvar(~trebuchet~|0);,self.setvar(~trebuchet~|0);,,if(self.getvar(~trebuchet~) > 0){attack(self.getvar(~trebuchet~)); sfxdamage(target|self.getvar(~trebuchet~)); self.setvar(~trebuchet~|0); e.animate(~flashandshake~);};,,,,,,
Trebuchet_upgraded,[sword]<d6> dmg next turn (<var:trebuchet>)|,1,self.setvar(~trebuchet~|self.getvar(~trebuchet~)+d); sfx(~jackpot_increasecounter~);,Bubble Gun,MAX4|FREE1,,WEAPON,RED,,,,,-1,YES,NO,NO,YES,NO,NO,NO,NO,,self.setvar(~trebuchet~|0);,self.setvar(~trebuchet~|0);,,if(self.getvar(~trebuchet~) > 0){attack(self.getvar(~trebuchet~)); sfxdamage(target|self.getvar(~trebuchet~)); self.setvar(~trebuchet~|0); e.animate(~flashandshake~);};,,,,,,
Trebuchet_downgraded,[sword]<d6> dmg next turn (<var:trebuchet>)|,1,self.setvar(~trebuchet~|self.getvar(~trebuchet~)+d); sfx(~jackpot_increasecounter~);,Bubble Gun,MAX2,,WEAPON,RED,,,,,-1,YES,NO,NO,YES,NO,NO,NO,NO,,self.setvar(~trebuchet~|0);,self.setvar(~trebuchet~|0);,,if(self.getvar(~trebuchet~) > 0){attack(self.getvar(~trebuchet~)); sfxdamage(target|self.getvar(~trebuchet~)); self.setvar(~trebuchet~|0); e.animate(~flashandshake~);};,,,,,,
Magnetic Dagger,Deal [sword]<d6> damage[;] swap|to taking damage instead|[gray](Reuseable),1,trace(e.castdirection); if(e.castdirection == 0){attack(d); sfxdamage(target|d);}else{attackself(d); sfxdamage(self|d);};,Two Handed Knife,MAX4,,WEAPON,RED,change_power,change_power,,none,-1,NO,NO,NO,YES,NO,NO,NO,NO,,e.fulldescription=~Deal [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~; e.setvar(~direction~|0);,,,,,,,if(e.getvar(~direction~) == 1){e.setvar(~direction~|0); e.castdirection = 0; e.fulldescription=~Deal [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~;}else{e.castdirection = 1; e.setvar(~direction~|1); e.fulldescription=~Take [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~; };,,
Magnetic Dagger_upgraded,Deal [sword]<d6> damage[;] swap|to taking damage instead|[gray](Reuseable),1,trace(e.castdirection); if(e.castdirection == 0){attack(d); sfxdamage(target|d);}else{attackself(d); sfxdamage(self|d);};,Two Handed Knife,MAX5,,WEAPON,RED,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,NO,,e.fulldescription=~Deal [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~; e.setvar(~direction~|0);,,,,,,,if(e.getvar(~direction~) == 0){e.setvar(~direction~|1); e.castdirection = 0; e.fulldescription=~Deal [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~;}else{e.castdirection = 1; e.setvar(~direction~|0); e.fulldescription=~Take [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~; };,,
Magnetic Dagger_downgraded,Deal [sword]<d6> damage[;] swap|to taking damage instead|[gray](Reuseable),1,trace(e.castdirection); if(e.castdirection == 0){attack(d); sfxdamage(target|d);}else{attackself(d); sfxdamage(self|d);};,Two Handed Knife,MAX2,,WEAPON,RED,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,NO,,e.fulldescription=~Deal [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~; e.setvar(~direction~|0);,,,,,,,if(e.getvar(~direction~) == 0){e.setvar(~direction~|1); e.castdirection = 0; e.fulldescription=~Deal [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~;}else{e.castdirection = 1; e.setvar(~direction~|0); e.fulldescription=~Take [sword]<d6> damage[;] swap~+~#~.charAt(0)+~to dealing damage instead~+~#~.charAt(0)+~[gray](Reuseable)~; };,,
Nether Portal,Duplicate dice[;] [curse] curse self|,1,if(simulation){bonus(-1000000);}else{givedice([d|d]); sfx(~_curse~); inflictself(CURSE); };,Dramatic Pause,MAX4,,ITEM,PURPLE,change_power,change_power,,none,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nether Portal_upgraded,Duplicate dice[;] [curse] curse self|,1,if(simulation){bonus(-1000000);}else{givedice([d|d]); sfx(~_curse~); inflictself(CURSE); };,Dramatic Pause,NORMAL,,ITEM,PURPLE,,,,none,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nether Portal_downgraded,Duplicate dice[;] [curse] curse self,1,if(simulation){bonus(-1000000);}else{givedice([d|d]); sfx(~_curse~); inflictself(CURSE); };,Dramatic Pause,MAX4,,ITEM,PURPLE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Booster Pack,Add a bonus 1 to all of|your equipment this turn,1,var freeslots = [~FREE1~|~FREE2~|~FREE3~|~FREE4~|~FREE5~|~FREE6~]; for(eq in self.equipment){var output = []; if(eq.skillcard == ~~ && eq.countdown == 0 && !eq.needsdoubles){var slots = eq.getslots(); var flag = true; for(s in slots){if(freeslots.indexOf(s) == -1){output.push(s);}else if(freeslots.indexOf(s) < 5){output.push(freeslots[freeslots.indexOf(s)+1]); flag = false;}else{output.push(~FREE6~);};}; if(flag){output.push(~FREE1~);}; if(eq.size == 1 && output.length > 3){eq.changeslots([output[0]|output[1]]);}else if(eq.size == 2 && output.length > 4){eq.changeslots([output[0]|output[1]|output[2]|output[3]]);}else{eq.changeslots(output);}; eq.animate(~flashandshake~);};}; sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,ITEM,PINK,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,for(eq in self.equipment){eq.resetslots();};,,,,for(eq in self.equipment){eq.resetslots();};,,,
Booster Pack_upgraded,Add a bonus 1 to all of|your equipment this turn|,1,var freeslots = [~FREE1~|~FREE2~|~FREE3~|~FREE4~|~FREE5~|~FREE6~]; for(eq in self.equipment){var output = []; if(eq.skillcard == ~~ && eq.countdown == 0 && !eq.needsdoubles){var slots = eq.getslots(); var flag = true; for(s in slots){if(freeslots.indexOf(s) == -1){output.push(s);}else if(freeslots.indexOf(s) < 5){output.push(freeslots[freeslots.indexOf(s)+1]); flag = false;}else{output.push(~FREE6~);};}; if(flag){output.push(~FREE1~);}; if(eq.size == 1 && output.length > 3){eq.changeslots([output[0]|output[1]]);}else if(eq.size == 2 && output.length > 4){eq.changeslots([output[0]|output[1]|output[2]|output[3]]);}else{eq.changeslots(output);}; eq.animate(~flashandshake~);};}; sfx(~_thinghappens~);,Magic Six,COUNTDOWN,6,ITEM,PINK,,,,none,-1,YES,NO,NO,YES,NO,NO,NO,NO,,,,for(eq in self.equipment){eq.resetslots();};,,,,for(eq in self.equipment){eq.resetslots();};,,,
Booster Pack_downgraded,No effect,1,sfx(~_curse~);,Magic Six,COUNTDOWN,6,ITEM,PINK,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,for(eq in self.equipment){eq.resetslots();};,,,,for(eq in self.equipment){eq.resetslots();};,,,
Tabula Rasa,Swap your current spells|with your stored ones,1,for(x in 1...7){if(Spellbook.spellname(x) != ~Tabula Rasa~){var temp = self.getvar(~tabulaspell~+x); self.setvar(~tabulaspell~+x|Spellbook.spellname(x)); Spellbook.changespellflash(x|temp);};}; sfx(~_thinghappens~);,,NORMAL,,MAGIC,PINK,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,1,for(x in 1...7){if(self.getvar(~tabulaspell~+x) == 0){if(x == 1){self.setvar(~tabulaspell~+1|~Cauldron~);}else if(x == 2){self.setvar(~tabulaspell~+2|~Infliction~);}else{self.setvar(~tabulaspell~+x|~~);}; };};,,,,,,,for(x in 1...7){if(self.getvar(~tabulaspell~+x) == 0){if(x == 1){self.setvar(~tabulaspell~+1|~Cauldron~);}else if(x == 2){self.setvar(~tabulaspell~+2|~Infliction~);}else{self.setvar(~tabulaspell~+x|~~);}; };};,,
Tabula Rasa_upgraded,Swap your current spells|with your stored ones|,1,for(x in 1...7){if(Spellbook.spellname(x) != ~Tabula Rasa~){var temp = self.getvar(~tabulaspell~+x); self.setvar(~tabulaspell~+x|Spellbook.spellname(x)); Spellbook.changespellflash(x|temp);};}; sfx(~_thinghappens~);,,NORMAL,,MAGIC,PINK,,,,,-1,YES,NO,NO,YES,NO,NO,NO,NO,,for(x in 1...7){if(self.getvar(~tabulaspell~+x) == 0){if(x == 1){self.setvar(~tabulaspell~+1|~Cauldron~);}else if(x == 2){self.setvar(~tabulaspell~+2|~Infliction~);}else{self.setvar(~tabulaspell~+x|~~);}; };};,,,,,,,for(x in 1...7){if(self.getvar(~tabulaspell~+x) == 0){if(x == 1){self.setvar(~tabulaspell~+1|~Cauldron~);}else if(x == 2){self.setvar(~tabulaspell~+2|~Infliction~);}else{self.setvar(~tabulaspell~+x|~~);}; };};,,
Tabula Rasa_downgraded,Swap your current spells|with your stored ones,1,for(x in 1...7){if(Spellbook.spellname(x) != ~Tabula Rasa~){var temp = self.getvar(~tabulaspell~+x); self.setvar(~tabulaspell~+x|Spellbook.spellname(x)); Spellbook.changespellflash(x|temp);};}; sfx(~_thinghappens~);,,EVEN,,MAGIC,PINK,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,for(x in 1...7){if(self.getvar(~tabulaspell~+x) == 0){if(x == 1){self.setvar(~tabulaspell~+1|~Cauldron~);}else if(x == 2){self.setvar(~tabulaspell~+2|~Infliction~);}else{self.setvar(~tabulaspell~+x|~~);}; };};,,,,,,,for(x in 1...7){if(self.getvar(~tabulaspell~+x) == 0){if(x == 1){self.setvar(~tabulaspell~+1|~Cauldron~);}else if(x == 2){self.setvar(~tabulaspell~+2|~Infliction~);}else{self.setvar(~tabulaspell~+x|~~);}; };};,,
Flip Flop,Swap the spells in these two|slots[;] and return the dice,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var temp = Spellbook.spellname(a); Spellbook.changespellflash(a|Spellbook.spellname(b)); Spellbook.changespellflash(b|temp); sfx(~_thinghappens~); givedice([actualdice[0].basevalue|actualdice[1].basevalue]);,,NORMAL|NORMAL,,MAGIC,PINK,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,1,,,,,,,,,,
Flip Flop_upgraded,Swap the spells in these two|slots[;] and return the dice|,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var temp = Spellbook.spellname(a); Spellbook.changespellflash(a|Spellbook.spellname(b)); Spellbook.changespellflash(b|temp); sfx(~_thinghappens~); givedice([actualdice[0].basevalue|actualdice[1].basevalue]);,,NORMAL|NORMAL,,MAGIC,PINK,,,,,-1,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flip Flop_downgraded,Swap the spells|in these two slots,1,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; var temp = Spellbook.spellname(a); Spellbook.changespellflash(a|Spellbook.spellname(b)); Spellbook.changespellflash(b|temp); sfx(~_thinghappens~);,,NORMAL|NORMAL,,MAGIC,PINK,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Trianguleight,Roll 3 dice that|add up to 8,1,var values = [[1[;] 1[;] 6][;][1[;] 2[;] 5][;][1[;] 3[;] 4][;][2[;] 2[;] 4][;][2[;] 3[;] 3]]; var idxs = [[0[;]1[;]2][;][0[;]2[;]1][;][1[;]0[;]2][;][1[;]2[;]0][;][2[;]0[;]1][;][2[;]1[;]0]]; var val = rand(values); var idx = rand(idxs); givedice([val[idx[0]]|val[idx[1]]|val[idx[2]]]);,Magic Dice,COUNTDOWN,8,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trianguleight_upgraded,Roll 3 dice that sum to 8|,1,var values = [[1[;] 1[;] 6][;][1[;] 2[;] 5][;][1[;] 3[;] 4][;][2[;] 2[;] 4][;][2[;] 3[;] 3]]; var idxs = [[0[;]1[;]2][;][0[;]2[;]1][;][1[;]0[;]2][;][1[;]2[;]0][;][2[;]0[;]1][;][2[;]1[;]0]]; var val = rand(values); var idx = rand(idxs); givedice([val[idx[0]]|val[idx[1]]|val[idx[2]]]);,Magic Dice,COUNTDOWN,8,ITEM,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Trianguleight_downgraded,Roll 3 dice that|add up to 3,1,givedice([1|1|1]);,Magic Dice,COUNTDOWN,8,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Segfault,Deal [sword]3 damage|Return any excess dice used,1,attack(3); sfxdamage(target|3); var total = 0; for(x in e.dicehistory){total+=x.basevalue;}; if(total - e.countdown > 0){givedice(total - e.countdown);}; e.dicehistory = [];,Pea Gun,COUNTDOWN,5,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Segfault_upgraded,Deal [sword]5 damage|Return any excess dice used,1,attack(5); sfxdamage(target|5); var total = 0; for(x in e.dicehistory){total+=x.basevalue;}; if(total - e.countdown > 0){givedice(total - e.countdown);}; e.dicehistory = [];,Pea Gun,COUNTDOWN,5,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Segfault_downgraded,Deal [sword]3 damage,1,attack(3); sfxdamage(target|3);  e.dicehistory = [];,Pea Gun,COUNTDOWN,5,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Urumi,Deal [sword]<d6> damage. On 1[;]|reduce countdowns by 6,2,attack(d); sfxdamage(target|d); if(d == 1){boostcountdowns(6);};,Accelerate,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Urumi_upgraded,Deal [sword]<d6> damage. On odd[;]|reduce countdowns by 6,2,attack(d); sfxdamage(target|d); if(d % 2 == 1){boostcountdowns(6);};,Accelerate,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Urumi_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Accelerate,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Perpetual Motor,Deal [sword]<d6> damage|On 8[;] take an extra turn,1,attack(d); sfxdamage(target|d); if(d == 8){inflictself(EXTRATURN); sfx(~_thinghappens~);};,Time Stop,MAX3|MAX3,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Perpetual Motor_upgraded,Deal [sword]<d6> damage|On 9[;] take an extra turn,1,attack(d); sfxdamage(target|d); if(d == 9){inflictself(EXTRATURN); sfx(~_thinghappens~);};,Time Stop,MAX4|MAX4,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Perpetual Motor_downgraded,Deal [sword]<d6> damage|On 8[;] take an extra turn,1,attack(d); sfxdamage(target|d); if(d == 8){inflictself(EXTRATURN); sfx(~_thinghappens~);};,Time Stop,MAX2|MAX2,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Synchrotron,Deal [sword]6 damage[;] double if|all dice used are the same,1,var amount = 6; if(e.getvar(~diff~) == 0){attack(amount*2); sfxdamage(target|amount*2);}else{attack(amount); sfxdamage(target|amount);}; e.dicehistory = []; e.setvar(~reset~|1);,Accelerate,COUNTDOWN,12,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(e.getvar(~reset~) == 1){e.setvar(~diff~|0); e.setvar(~reset~|0); e.changecolour(~YELLOW~);};,,,if(e.getvar(~diff~) == 0){var val = e.dicehistory[0].basevalue; var flag = true; for(x in e.dicehistory){if(x.basevalue != val){flag = false;};}; if(!flag){e.changecolour(~RED~); e.animate(~flashandshake~); sfx(~_weaken~); e.setvar(~diff~|1);};};,,,,
Synchrotron_upgraded,Deal [sword]8 damage[;] double if|all dice used are the same,1,var amount = 8; if(e.getvar(~diff~) == 0){attack(amount*2); sfxdamage(target|amount*2);}else{attack(amount); sfxdamage(target|amount);}; e.dicehistory = []; e.setvar(~reset~|1);,Accelerate,COUNTDOWN,12,WEAPON,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(e.getvar(~reset~) == 1){e.setvar(~diff~|0); e.setvar(~reset~|0); e.changecolour(~YELLOW~);};,,,if(e.getvar(~diff~) == 0){var val = e.dicehistory[0].basevalue; var flag = true; for(x in e.dicehistory){if(x.basevalue != val){flag = false;};}; if(!flag){e.changecolour(~RED~); e.animate(~flashandshake~); sfx(~_weaken~); e.setvar(~diff~|1);};};,,,,
Synchrotron_downgraded,Deal [sword]4 damage[;] double if|all dice used are the same,1,var amount = 4; if(e.getvar(~diff~) == 0){attack(amount*2); sfxdamage(target|amount*2);}else{attack(amount); sfxdamage(target|amount);}; e.dicehistory = []; e.setvar(~reset~|1);,Accelerate,COUNTDOWN,12,WEAPON,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(e.getvar(~reset~) == 1){e.setvar(~diff~|0); e.setvar(~reset~|0); e.changecolour(~YELLOW~);};,,,if(e.getvar(~diff~) == 0){var val = e.dicehistory[0].basevalue; var flag = true; for(x in e.dicehistory){if(x.basevalue != val){flag = false;};}; if(!flag){e.changecolour(~RED~); e.animate(~flashandshake~); sfx(~_weaken~); e.setvar(~diff~|1);};};,,,,
Dice Storage,Return each dice|used on this item,1,trace(e.dicehistory); givedice(e.dicehistory); e.dicehistory = [];,Magic Dice,COUNTDOWN,6,ITEM,GRAY,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Dice Storage_upgraded,Return each dice used|Duplicate one of them,1,trace(e.dicehistory); givedice(e.dicehistory.concat([rand(e.dicehistory)])); e.dicehistory = [];,Magic Dice,COUNTDOWN,6,ITEM,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Dice Storage_downgraded,Roll a new dice,1,givedice(rand([1|2|3|4])); e.dicehistory = [];,Magic Dice,COUNTDOWN,6,ITEM,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Really Sharp Spike,Deal [sword]10 damage[;] errors|on anything but a 1,1,attack(10); sfxdamage(target|d);,Unlucky Roll,COUNTDOWN,4,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,if(e.getvar(~cursed~) == 1){e.remainingcountdown = e.countdown; e.setvar(~cursed~|0);};,,,for(d in e.dicehistory){if(d.basevalue != 1){roboterror(self|[e]); e.setvar(~cursed~|1); sfx(~_curse~); e.dicehistory = [];};};,,,,
Really Sharp Spike_upgraded,Deal [sword]12 damage[;] errors|on anything but a 1,1,attack(12); sfxdamage(target|d);,Unlucky Roll,COUNTDOWN,4,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,if(e.getvar(~cursed~) == 1){e.remainingcountdown = e.countdown; e.setvar(~cursed~|0);};,,,for(d in e.dicehistory){if(d.basevalue != 1){roboterror(self|[e]); e.setvar(~cursed~|1); sfx(~_curse~); e.dicehistory = [];};};,,,,
Really Sharp Spike_downgraded,Deal [sword]5 damage[;] errors|on anything but a 1,1,attack(5); sfxdamage(target|d);,Unlucky Roll,COUNTDOWN,4,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,if(e.getvar(~cursed~) == 1){e.remainingcountdown = e.countdown; e.setvar(~cursed~|0);};,,,for(d in e.dicehistory){if(d.basevalue != 1){roboterror(self|[e]); e.setvar(~cursed~|1); sfx(~_curse~); e.dicehistory = [];};};,,,,
Broken Cauldron,Reroll dice,1,givedice();,Broken Gadget,NORMAL,,WEAPON,GRAY,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Broken Cauldron_upgraded,Reroll dice|,1,givedice();,Broken Gadget,NORMAL,,WEAPON,GRAY,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Broken Cauldron_downgraded,No effect,1,sfx(~_curse~);,Broken Gadget,NORMAL,,WEAPON,GRAY,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Min Night Charm,Get 3 copies of the lowest|dice used in this (<evar:minval>),1,var m = e.getvar(~minval~); givedice([m|m|m]); e.dicehistory = [];,Replicate,COUNTDOWN,12,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,e.setvar(~minval~|0);,e.setvar(~minval~|0);,,,,var m = 7; for(x in e.dicehistory){if(x.basevalue < m){m = x.basevalue;};}; if(m < 7){e.setvar(~minval~|m);};,,,,
Min Night Charm_upgraded,Get 4 copies of the lowest|dice used in this (<evar:minval>),1,var m = e.getvar(~minval~); givedice([m|m|m|m]); e.dicehistory = [];,Replicate,COUNTDOWN,12,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,e.setvar(~minval~|0);,e.setvar(~minval~|0);,,,,var m = 7; for(x in e.dicehistory){if(x.basevalue < m){m = x.basevalue;};}; if(m < 7){e.setvar(~minval~|m);};,,,,
Min Night Charm_downgraded,Get 2 copies of the lowest|dice used in this (<evar:minval>),1,var m = e.getvar(~minval~); givedice([m|m]); e.dicehistory = [];,Replicate,COUNTDOWN,12,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,e.setvar(~minval~|0);,e.setvar(~minval~|0);,,,,var m = 7; for(x in e.dicehistory){if(x.basevalue < m){m = x.basevalue;};}; if(m < 7){e.setvar(~minval~|m);};,,,,
Speedometer,Deal [sword]10 damage[;] evens|reduce countdown at 2x rate,1,attack(10); sfxdamage(target|10);,Throwing Knife,COUNTDOWN,20,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,var l =  e.dicehistory[e.dicehistory.length-1].basevalue; if(l % 2 == 0){e.remainingcountdown-=l; e.dicehistory.push(1);};,,e.dicehistory = [];,,
Speedometer_upgraded,Deal [sword]10 damage[;] evens|reduce countdown at 3x rate,1,attack(10); sfxdamage(target|10);,Throwing Knife,COUNTDOWN,20,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,var l =  e.dicehistory[e.dicehistory.length-1].basevalue; if(l % 2 == 0){e.remainingcountdown-=l*2; e.dicehistory.push(1);};,,e.dicehistory = [];,,
Speedometer_downgraded,Deal [sword]10 damage,1,attack(10); sfxdamage(target|10);,Throwing Knife,COUNTDOWN,20,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,e.dicehistory = [];,,
Starpocalypse,Randomize all statuses|on enemy,1,var amount = 0; removestatus(~lantern~|ALL); removestatus(~illuminate~|ALL); var statuses = [FIRE|ICE|SHOCK|WEAKEN|POISON|CURSE|LOCK|BLIND|~counter_1~|~counter_2~|~counter_3~|~counter_4~|~counter_5~|~counter_6~|~stash1~|~stash2~|~stash3~|~stash4~|~stash5~|~stash6~|SHIELD|THORNS|FURY|SURVIVE|REDUCE|DODGE|SILENCE]; var inflicts= [FIRE|ICE|SHOCK|WEAKEN|POISON|CURSE|LOCK|BLIND|~counter_~+rand([1|2|3|4|5|6])|~stash~+rand([1|2|3|4|5|6])|SHIELD|THORNS|FURY|SURVIVE|REDUCE|DODGE|SILENCE]; for(s in statuses){amount+=getstatus(s); removestatus(s|ALL);}; if(amount > 0){for(x in 0...amount){inflict(rand(inflicts));};}; sfx(~_magic~); sfx(~_thinghappens~); for(x in 1...7){if(getstatus(~stash~+x) > 0){inflict(~illuminate~);};};,Stardust,REQUIRE5|REQUIRE5,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,donothing();
Starpocalypse_upgraded,Randomize all statuses|on enemy,1,var amount = 0; removestatus(~lantern~|ALL); removestatus(~illuminate~|ALL); var statuses = [FIRE|ICE|SHOCK|WEAKEN|POISON|CURSE|LOCK|BLIND|~counter_1~|~counter_2~|~counter_3~|~counter_4~|~counter_5~|~counter_6~|~stash1~|~stash2~|~stash3~|~stash4~|~stash5~|~stash6~|SHIELD|THORNS|FURY|SURVIVE|REDUCE|DODGE|SILENCE]; var inflicts= [FIRE|ICE|SHOCK|WEAKEN|POISON|CURSE|LOCK|BLIND|~counter_~+rand([1|2|3|4|5|6])|~stash~+rand([1|2|3|4|5|6])|SHIELD|THORNS|FURY|SURVIVE|REDUCE|DODGE|SILENCE]; for(s in statuses){amount+=getstatus(s); removestatus(s|ALL);}; if(amount > 0){for(x in 0...amount){inflict(rand(inflicts));};}; sfx(~_magic~); sfx(~_thinghappens~); for(x in 1...7){if(getstatus(~stash~+x) > 0){inflict(~illuminate~);};};,Stardust,REQUIRE5,,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,donothing();
Starpocalypse_downgraded,Randomize all statuses|on enemy,1,var amount = 0; removestatus(~lantern~|ALL); removestatus(~illuminate~|ALL); var statuses = [FIRE|ICE|SHOCK|WEAKEN|POISON|CURSE|LOCK|BLIND|~counter_1~|~counter_2~|~counter_3~|~counter_4~|~counter_5~|~counter_6~|~stash1~|~stash2~|~stash3~|~stash4~|~stash5~|~stash6~|SHIELD|THORNS|FURY|SURVIVE|REDUCE|DODGE|SILENCE]; var inflicts= [FIRE|ICE|SHOCK|WEAKEN|POISON|CURSE|LOCK|BLIND|~counter_~+rand([1|2|3|4|5|6])|~stash~+rand([1|2|3|4|5|6])|SHIELD|THORNS|FURY|SURVIVE|REDUCE|DODGE|SILENCE]; for(s in statuses){amount+=getstatus(s); removestatus(s|ALL);}; if(amount > 0){for(x in 0...amount){inflict(rand(inflicts));};}; sfx(~_magic~); sfx(~_thinghappens~); for(x in 1...7){if(getstatus(~stash~+x) > 0){inflict(~illuminate~);};};,Stardust,REQUIRE5|REQUIRE5|REQUIRE5,,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,donothing();
Gift Box,Odd: Replace this with <var:contents>|Even: Reroll the contents!,2,if(d%2 == 1){replacemewith(self.getvar(~contents~)); sfx(~_thinghappens~);}else{var x = rand(getequipment()); self.setvar(~contents~|x); trace(x); self.textparticle(~Now contains ~+self.getvar(~contents~));};  inflictself(REEQUIPNEXT|self.getvar(~reequip~));,Mass Polymorph,NORMAL,,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,var x = rand(getequipment()); self.setvar(~contents~|x); trace(x);,,,,,,,self.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);,,e.preventdefault = true; e.maintainfury = true;
Gift Box_upgraded,Odd: Replace this with <evar:contents>+|Even: Reroll the contents!,2,if(d%2 == 1){replacemewith(self.getvar(~contents~)); sfx(~_thinghappens~);}else{self.setvar(~contents~|rand(getequipment())); self.textparticle(~Now contains ~+self.getvar(~contents~));};  inflictself(REEQUIPNEXT|self.getvar(~reequip~));,Mass Polymorph,NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,var x = rand(getequipment()); self.setvar(~contents~|x); trace(x);,,,,,,,self.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);,,e.preventdefault = true; e.maintainfury = true;
Gift Box_downgraded,Odd: Replace this with <evar:contents>|Even: Reroll the contents!,2,if(d%2 == 1){replacemewith(self.getvar(~contents~)); sfx(~_thinghappens~);}else{self.setvar(~contents~|rand(getequipment())); self.textparticle(~Now contains ~+self.getvar(~contents~));};  inflictself(REEQUIPNEXT|self.getvar(~reequip~));,Mass Polymorph,DOUBLES|DOUBLES,,ITEM,GREEN,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,var x = rand(getequipment()); self.setvar(~contents~|x); trace(x);,,,,,,,self.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);,,e.preventdefault = true; e.maintainfury = true;
Coin Flip,Reroll each of your dice into|either a 6 or a 1,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){mydice.animatereroll(rand([1|6])[;] self.screenposition()[;] c * 0.05); }; c++; }; sfx(~_magic~);,Magic Dice,COUNTDOWN,5,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Coin Flip_upgraded,Reroll dice into 6s or 1s|,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){mydice.animatereroll(rand([1|6])[;] self.screenposition()[;] c * 0.05); }; c++; }; sfx(~_magic~);,Magic Dice,COUNTDOWN,5,ITEM,YELLOW,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Coin Flip_downgraded,Reroll each of your dice into|either a 2 or a 1,1,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){mydice.animatereroll(rand([1|2])[;] self.screenposition()[;] c * 0.05); }; c++; }; sfx(~_magic~);,Magic Dice,COUNTDOWN,5,ITEM,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Secateurs,Deal damage equal to 3x big|dice divided by the little dice,1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; if(x < y){var temp = x; x = y; y = temp;}; var damage = (3*x)/y; attack(damage); sfxdamage(target|damage);,Plasma Gun,MIN2|MIN2,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Secateurs_upgraded,Deal damage equal to 4x big|dice divided by the little dice,1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; if(x < y){var temp = x; x = y; y = temp;}; var damage = (4*x)/y; attack(damage); sfxdamage(target|damage);,Plasma Gun,MIN2|MIN2,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Secateurs_downgraded,Deal damage equal to big|dice divided by the little dice,1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; if(x < y){var temp = x; x = y; y = temp;}; var damage = (x)/y; attack(damage); sfxdamage(target|damage);,Plasma Gun,MIN2|MIN2,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sharpened Gun,[sword]6[;] lose [heart]1 whenever|this countdown is reduced,1,attack(6); sfxdamage(target|6); sfx(~_plasma~);,Two Handed Knife,COUNTDOWN,5,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; pierceattackself(1); sfx(~_drain~); e.animate(~flashandshake~);};,,,,
Sharpened Gun_upgraded,[sword]8[;] lose [heart]1 whenever|this countdown is reduced,1,attack(8); sfxdamage(target|8); sfx(~_plasma~);,Two Handed Knife,COUNTDOWN,5,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; pierceattackself(1); sfx(~_drain~); e.animate(~flashandshake~);};,,,,
Sharpened Gun_downgraded,[sword]6[;] lose [heart]2 whenever|this countdown is reduced,1,attack(6); sfxdamage(target|6); sfx(~_plasma~);,Two Handed Knife,COUNTDOWN,5,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; pierceattackself(2); sfx(~_drain~); e.animate(~flashandshake~);};,,,,
Healing Totem,Heal [heal]1 hp whenever|this countdown is reduced,1,self.textparticle(~Out of uses!~);,Revitalize,COUNTDOWN,6,SHIELD,GREEN,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; attackself(-1); sfx(~_heal~); e.animate(~flashandshake~);};,,,,
Healing Totem_upgraded,Heal [heal]2 hp whenever|this countdown is reduced,1,self.textparticle(~Out of uses!~);,Revitalize,COUNTDOWN,6,SHIELD,GREEN,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; attackself(-2); sfx(~_heal~); e.animate(~flashandshake~);};,,,,
Healing Totem_downgraded,No effect,1,sfx(~_curse~);,Revitalize,COUNTDOWN,6,SHIELD,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,,,,,
Chain Dagger,[sword]6[;] reduce counts by 3|,2,attack(6); boostcountdowns(3); sfxdamage(target|6);,Accelerate,COUNTDOWN,12,WEAPON,RED,change_power,change_power,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Dagger_upgraded,[sword]6[;] reduce counts by 3|,2,attack(6); boostcountdowns(3); sfxdamage(target|6);,Accelerate,COUNTDOWN,12,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chain Dagger_downgraded,Reduce countdowns by 3|,2,boostcountdowns(3);,Accelerate,COUNTDOWN,12,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Digging Bar,Reduce countdowns by 2|Repeat this <d6> times,1,for(x in 0...d+1){boostcountdowns(2);};,Accelerate,MAX3,,ITEM,ORANGE,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Digging Bar_upgraded,Reduce countdowns by 2|Repeat this <d6> times,1,for(x in 0...d+1){boostcountdowns(2);};,Accelerate,MAX4,,ITEM,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Digging Bar_downgraded,Reduce countdowns by 2,1,boostcountdowns(2);,Accelerate,MAX3,,ITEM,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Heavy Gatling,Deal [sword]2 dmg whenever|this countdown is reduced,1,self.textparticle(~Out of ammo!~); sfx(~jackpot_increasecounter~);,Accelerate,COUNTDOWN,15,WEAPON,RED,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; attack(2); sfxdamage(target|2); e.animate(~flashandshake~);};,,,,
Heavy Gatling_upgraded,Deal [sword]3 dmg whenever|this countdown is reduced,1,self.textparticle(~Out of ammo!~); sfx(~jackpot_increasecounter~);,Accelerate,COUNTDOWN,15,WEAPON,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; attack(3); sfxdamage(target|3); e.animate(~flashandshake~);};,,,,
Heavy Gatling_downgraded,Deal [sword]1 dmg whenever|this countdown is reduced,1,self.textparticle(~Out of ammo!~); sfx(~jackpot_increasecounter~);,Accelerate,COUNTDOWN,15,WEAPON,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,e.dicehistory = [];,,,,,if(e.dicehistory.length > 0){e.dicehistory = []; attack(1); sfxdamage(target|1); e.animate(~flashandshake~);};,,,,
Brick,Deal [sword]6 damage|[gray](once per battle),1,attack(6); sfxdamage(target|d);,Throwing Knife,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,YES,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Brick_upgraded,Deal [sword]8 damage|[gray](once per battle),1,attack(8); sfxdamage(target|8);,Throwing Knife,NORMAL,,WEAPON,RED,,,,none,0,NO,YES,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Brick_downgraded,Deal [sword]3 damage|[gray](once per battle),1,attack(3); sfxdamage(target|3);,Throwing Knife,NORMAL,,WEAPON,RED,,,,none,0,NO,YES,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Crass Knuckles,Deal [sword]<d6> damage[;] on|doubles[;] gain [fury] fury,2,attack(d); sfxdamage(target|d); if(actualdice[0].basevalue == actualdice[1].basevalue){inflictself(FURY); sfx(~_fury~|~~|0.2);};,Fury,MAX4|MAX4,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Crass Knuckles_upgraded,Deal [sword]<d6> damage[;] on|doubles[;] gain [fury] fury,2,attack(d); sfxdamage(target|d); if(actualdice[0].basevalue == actualdice[1].basevalue){inflictself(FURY); sfx(~_fury~|~~|0.2);};,Fury,MAX5|MAX5,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Crass Knuckles_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Fury,MAX4|MAX4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Three Shooter,Deal [sword]<d6> damage|[gray](Reuseable),1,attack(d); sfxdamage(target|d);,Pea Gun,REQUIRE3|FREE3|REQUIRE3,,WEAPON,RED,change_power,change_power,,none,3,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Three Shooter_upgraded,Deal [sword]<d6> damage|[gray](Reuseable),1,attack(d); sfxdamage(target|d);,Pea Gun,REQUIRE3|FREE3|REQUIRE3,,WEAPON,RED,,,,none,-1,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Three Shooter_downgraded,Deal [sword]<d6> damage|[gray](Reuseable),1,attack(d); sfxdamage(target|d);,Pea Gun,REQUIRE3|REQUIRE3|REQUIRE3,,WEAPON,RED,,,,none,3,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Leeching Spell,Drain [heart]<slotdoubles> health|(Start of turn: lose [heart]3[]),1,drain(d); sfx(~_drain~);,Life Leech,DOUBLES|DOUBLES,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,1,,,,pierceattackself(3); sfx(~_drain~); e.animate(~flashandshake~);,,,,,,
Leeching Spell_upgraded,Drain [heart]<d6> health|(Start of turn: lose [heart]3[]),1,drain(d); sfx(~_drain~);,Life Leech,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,, ,,pierceattackself(3); sfx(~_drain~); e.animate(~flashandshake~);,,,,,,
Leeching Spell_downgraded,Deal [sword]<slotdoubles> damage|(Start of turn: lose [heart]3[]),1,attack(d); sfxdamage(target|d);,Life Leech,DOUBLES|DOUBLES,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,pierceattackself(3); sfx(~_drain~); e.animate(~flashandshake~);,,,,,,
Blood Transfer,Deal [sword]<d6> damage. On 3[;]|also drain [heart]2 health,2,attack(d); sfxdamage(target|d); if(d == 3){drain(2); sfx(~_drain~|~~|0.2);};,Life Leech,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood Transfer_upgraded,Deal [sword]<d6> damage. On 3 or|less[;] also drain [heart]2 health,2,attack(d); sfxdamage(target|d); if(d <= 3){drain(2); sfx(~_drain~|~~|0.2);};,Life Leech,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood Transfer_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d); if(d == 4){drain(2); sfx(~_drain~|~~|0.2);};,Life Leech,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gem of Healing,Recover [heal]5 health at|the end of battle,1,,Revitalize,,,WEAPON,GREEN,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,attackself(-5); sfx(~_heal~);,,,,,,,,
Gem of Healing_upgraded,Recover [heal]7 health at|the end of battle,1,,Revitalize,,,WEAPON,GREEN,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,attackself(-7); sfx(~_heal~);,,,,,,,,
Gem of Healing_downgraded,Recover [heal]3 health at|the end of battle,1,,Revitalize,,,WEAPON,GREEN,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,attackself(-3); sfx(~_heal~);,,,,,,,,
Generous Sword,Deal [sword]<d6> damage|(Enemy heals [heal]3 each turn),2,attack(d); sfxdamage(target|d);,Regenerous,NORMAL|FREE3,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,attack(-3); e.animate(~flashandshake~); sfx(~_heal~);,,,,,,
Generous Sword_upgraded,Deal [sword]<d6> damage|(Enemy heals [heal]3 each turn),2,attack(d); sfxdamage(target|d);,Regenerous,NORMAL|FREE5,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,attack(-3); e.animate(~flashandshake~); sfx(~_heal~);,,,,,,
Generous Sword_downgraded,Deal [sword]<d6> damage|(Enemy heals [heal]3 each turn),2,attack(d); sfxdamage(target|d);,Regenerous,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,attack(-3); e.animate(~flashandshake~); sfx(~_heal~);,,,,,,
Ornamental Shield,Gain [shield]4 shield|Gain [thorns]1 thorn,1,inflictself(SHIELD|4); sfx(~_shield~); inflictself(THORNS); sfx(~_thorns~);,Revitalize,COUNTDOWN,9,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Ornamental Shield_upgraded,Gain [shield]4 shield|Gain [thorns]2 thorns,1,inflictself(SHIELD|4); sfx(~_shield~); inflictself(THORNS|2); sfx(~_thorns~);,Revitalize,COUNTDOWN,9,SHIELD,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Ornamental Shield_downgraded,Gain [shield]4 shield,1,inflictself(SHIELD|4); sfx(~_shield~);,Revitalize,COUNTDOWN,9,SHIELD,ORANGE,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Execute,Deal [sword]<d6> damage[;] double|if enemy is at [heart]<double> hp,2,if(target.hp == d*2){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Plasma Gun,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Execute_upgraded,Deal [sword]<d6> damage[;] triple|if enemy is at [heart]<triple> hp,2,if(target.hp == d*3){attack(d*3); sfxdamage(target|d*3);}else{attack(d); sfxdamage(target|d);};,Plasma Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Execute_downgraded,Deal [sword]<d6> damage[;] double|if enemy is at [heart]<double> hp,2,if(target.hp == d*2){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Plasma Gun,MAX4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reconstructificate,Swap Scrap/Broken gadgets|and equipment for new ones,1,var swaps = []; var smallcount = 0; var bigcount = 0; for(eq in self.equipment){if(eq.appearsforparts # eq.name.indexOf(~Broken~) > -1){swaps.push(eq.name); if(eq.size == 1){smallcount+=1;}else{bigcount+=1;};};}; for(x in swaps){removeequipment(x|self);}; var neweq = []; if(smallcount > 0){for(x in 0...smallcount){neweq.push(rand(getparticularequipment([~small~])));};}; if(bigcount > 0){for(x in 0...bigcount){neweq.push(rand(getparticularequipment([~large~])));};}; if(neweq.length > 0){giveequipment(neweq|true|false);}; Gadget.changegadget(self| ~Broken Gadget~| rand([~Life Leech~|~Padlock~|~Goop Gun~|~JOAT Smash~|~Mystic Boop~|~Pinprick~|~Steel Skin~|~Magic Lantern~|~Ballerina~|~Boom!~|~Finger Guns~|~Revitalize~|~Phoenix Down~|~Smoke Cloud~|~Whelm~|~Two Handed Knife~|~Throwing Knife~|~Ragnarok~|~Pee Gun~|~Fury~|~Firebomb~|~Magic Dice~|~Focus~|~Flashbang~|~Hook~|~Meganudge~|~Megabump~|~Barricade~|~Jackhammer~|~Pea Gun~|~Blowtorch~|~Clone Device~|~Battle Wrench~|~Refrigerator~|~Protection~|~Regenerate~|~Plasma Gun~|~Burrower~|~Lucky Shot~|~Magic Lockpick~|~Snake Eyes~|~Heat Ray~|~Theremin~|~Static Shock~|~Very Unlucky Roll~|~Tantrum~|~Marble~|~Stardust~|~Power Up~|~Poison Arrow~|~Time Stop~|~Blood Sip~|~Infinity Mirror~|~Megaflip~|~Magic Six~|~Bubble Gun~|~Shuriken~|~Catapult~|~Dramatic Pause~|~Quick Thinking~|~Random Roll~|~Arctic Storm~|~Pillow Fort~|~Zap~|~Ember~|~Mumble~|~Needle~|~Efficiency~|~Scream~|~Harvest~|~Overload~|~Dial Up Sounds~|~Magic Spanner~|~Replicate~|~Flash Freeze~|~Still Standing~]));  Gadget.reactivate(self| ALL); sfx(~upgradeequipment~);,Revitalize,ODD,,WEAPON,RED,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Reconstructificate_upgraded,Swap Scrap/Broken gadgets|and equipment for new ones,1,var swaps = []; var smallcount = 0; var bigcount = 0; for(eq in self.equipment){if(eq.appearsforparts # eq.name.indexOf(~Broken~) > -1){swaps.push(eq.name); if(eq.size == 1){smallcount+=1;}else{bigcount+=1;};};}; for(x in swaps){removeequipment(x|self);}; var neweq = []; if(smallcount > 0){for(x in 0...smallcount){neweq.push(rand(getparticularequipment([~small~])));};}; if(bigcount > 0){for(x in 0...bigcount){neweq.push(rand(getparticularequipment([~large~])));};}; if(neweq.length > 0){giveequipment(neweq|true|false);}; Gadget.changegadget(self| ~Broken Gadget~| rand([~Life Leech~|~Padlock~|~Goop Gun~|~JOAT Smash~|~Mystic Boop~|~Pinprick~|~Steel Skin~|~Magic Lantern~|~Ballerina~|~Boom!~|~Finger Guns~|~Revitalize~|~Phoenix Down~|~Smoke Cloud~|~Whelm~|~Two Handed Knife~|~Throwing Knife~|~Ragnarok~|~Pee Gun~|~Fury~|~Firebomb~|~Magic Dice~|~Focus~|~Flashbang~|~Hook~|~Meganudge~|~Megabump~|~Barricade~|~Jackhammer~|~Pea Gun~|~Blowtorch~|~Clone Device~|~Battle Wrench~|~Refrigerator~|~Protection~|~Regenerate~|~Plasma Gun~|~Burrower~|~Lucky Shot~|~Magic Lockpick~|~Snake Eyes~|~Heat Ray~|~Theremin~|~Static Shock~|~Very Unlucky Roll~|~Tantrum~|~Marble~|~Stardust~|~Power Up~|~Poison Arrow~|~Time Stop~|~Blood Sip~|~Infinity Mirror~|~Megaflip~|~Magic Six~|~Bubble Gun~|~Shuriken~|~Catapult~|~Dramatic Pause~|~Quick Thinking~|~Random Roll~|~Arctic Storm~|~Pillow Fort~|~Zap~|~Ember~|~Mumble~|~Needle~|~Efficiency~|~Scream~|~Harvest~|~Overload~|~Dial Up Sounds~|~Magic Spanner~|~Replicate~|~Flash Freeze~|~Still Standing~]));  Gadget.reactivate(self| ALL); sfx(~upgradeequipment~);,Revitalize,NORMAL,,WEAPON,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Reconstructificate_downgraded,Swap Scrap/Broken gadgets|and equipment for new ones,1,var swaps = []; var smallcount = 0; var bigcount = 0; for(eq in self.equipment){if(eq.appearsforparts # eq.name.indexOf(~Broken~) > -1){swaps.push(eq.name); if(eq.size == 1){smallcount+=1;}else{bigcount+=1;};};}; for(x in swaps){removeequipment(x|self);}; var neweq = []; if(smallcount > 0){for(x in 0...smallcount){neweq.push(rand(getparticularequipment([~small~])));};}; if(bigcount > 0){for(x in 0...bigcount){neweq.push(rand(getparticularequipment([~large~])));};}; if(neweq.length > 0){giveequipment(neweq|true|false);}; Gadget.changegadget(self| ~Broken Gadget~| rand([~Life Leech~|~Padlock~|~Goop Gun~|~JOAT Smash~|~Mystic Boop~|~Pinprick~|~Steel Skin~|~Magic Lantern~|~Ballerina~|~Boom!~|~Finger Guns~|~Revitalize~|~Phoenix Down~|~Smoke Cloud~|~Whelm~|~Two Handed Knife~|~Throwing Knife~|~Ragnarok~|~Pee Gun~|~Fury~|~Firebomb~|~Magic Dice~|~Focus~|~Flashbang~|~Hook~|~Meganudge~|~Megabump~|~Barricade~|~Jackhammer~|~Pea Gun~|~Blowtorch~|~Clone Device~|~Battle Wrench~|~Refrigerator~|~Protection~|~Regenerate~|~Plasma Gun~|~Burrower~|~Lucky Shot~|~Magic Lockpick~|~Snake Eyes~|~Heat Ray~|~Theremin~|~Static Shock~|~Very Unlucky Roll~|~Tantrum~|~Marble~|~Stardust~|~Power Up~|~Poison Arrow~|~Time Stop~|~Blood Sip~|~Infinity Mirror~|~Megaflip~|~Magic Six~|~Bubble Gun~|~Shuriken~|~Catapult~|~Dramatic Pause~|~Quick Thinking~|~Random Roll~|~Arctic Storm~|~Pillow Fort~|~Zap~|~Ember~|~Mumble~|~Needle~|~Efficiency~|~Scream~|~Harvest~|~Overload~|~Dial Up Sounds~|~Magic Spanner~|~Replicate~|~Flash Freeze~|~Still Standing~]));  Gadget.reactivate(self| ALL); sfx(~upgradeequipment~);,Revitalize,REQUIRE5,,WEAPON,RED,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Scrap Remote,Break your gadget|(Always offered as scrap),1,Gadget.changegadget(self| Gadget.getcurrentgadget(self)| ~Broken Gadget~);  Gadget.reactivate(self| ALL); sfx(~upgradeequipment~);,Broken Gadget,EVEN,,ITEM,GRAY,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,YES,NO,,,,,,,,,,,
Scrap Remote_upgraded,Break your gadget|(Always offered as scrap),1,Gadget.changegadget(self| Gadget.getcurrentgadget(self)| ~Broken Gadget~);  Gadget.reactivate(self| ALL); sfx(~upgradeequipment~);,Broken Gadget,NORMAL,,ITEM,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,YES,NO,,,,,,,,,,,
Scrap Remote_downgraded,Break your gadget|(Always offered as scrap),1,Gadget.changegadget(self| Gadget.getcurrentgadget(self)| ~Broken Gadget~);  Gadget.reactivate(self| ALL); sfx(~upgradeequipment~);,Broken Gadget,REQUIRE6,,ITEM,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,YES,NO,,,,,,,,,,,
Staple Gun,Combine dice[;] excess is|converted into damage,1,if(d > 6){attack(d-6); sfxdamage(target|d-6); givedice(6);}else{givedice(d);};,Magic Spanner,MAX5|MAX5,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Staple Gun_upgraded,Combine dice[;] excess is|converted into damage,1,if(d > 6){attack(d-6); sfxdamage(target|d-6); givedice(6);}else{givedice(d);};,Magic Spanner,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Staple Gun_downgraded,Combine dice[;] excess is|converted into damage,1,if(d > 6){attack(d-6); sfxdamage(target|d-6); givedice(6);}else{givedice(d);};,Magic Spanner,MAX3|MAX3,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spikemail,Gain [thorns]<d6> thorns|[grey](once per battle),1,inflictself(THORNS|d); sfx(~_thorns~);,Pinprick,MAX4,,SHIELD,GREEN,change_power,change_power,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Spikemail_upgraded,Gain [thorns]<d6> thorns|[grey](once per battle),1,inflictself(THORNS|d); sfx(~_thorns~);,Pinprick,MAX5,,SHIELD,GREEN,,,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Spikemail_downgraded,Gain [thorns]<d6> thorns|[grey](once per battle),1,inflictself(THORNS|d); sfx(~_thorns~);,Pinprick,MAX2,,SHIELD,GREEN,,,,,0,YES,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Hairdryer,[fire]<d6> dmg + [fire]1 burn[;] twice|if enemy is [ice] frozen,1,if(getstatus(ICE) > 0){attack(d|FIRE); inflict(FIRE); sfx(~_fire~|~~|0.2);}; attack(d|FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX4,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hairdryer_upgraded,[fire]<d6> dmg + [fire]1 burn[;] twice|if enemy is [ice] frozen,1,if(getstatus(ICE) > 0){attack(d|FIRE); inflict(FIRE); sfx(~_fire~|~~|0.2);}; attack(d|FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX5,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hairdryer_downgraded,Deal [fire] <d6> damage|Inflict [fire]1 burn,1,attack(d|FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,MAX4,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Breath Mints,[ice]<d6> dmg + [ice]1 freeze[;] twice|if enemy is [fire] burning,1,if(getstatus(FIRE) > 0){attack(d|ICE); inflict(ICE); sfx(~_ice~|~~|0.2);}; attack(d|ICE); inflict(ICE); sfx(~_ice~);,Blowtorch,MAX4,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Breath Mints_upgraded,[ice]<d6> dmg + [ice]1 freeze[;] twice|if enemy is [fire] burning,1,if(getstatus(FIRE) > 0){attack(d|ICE); inflict(ICE); sfx(~_ice~|~~|0.2);}; attack(d|ICE); inflict(ICE); sfx(~_ice~);,Blowtorch,MAX5,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Breath Mints_downgraded,Deal [ice]<d6> damage|Inflict [ice]1 freeze,1,attack(d|ICE); inflict(ICE); sfx(~_ice~);,Blowtorch,MAX4,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirrorblade,[sword]<slotdoubles> damage. On double|6[;] get +1 dice this fight,1,attack(d); sfxdamage(target|d); if(d == 6){self.extradice+=1; sfx(~magic_gaindice~);};,Infinity Mirror,DOUBLES|DOUBLES,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirrorblade_upgraded,Deal [sword]<d6> damage. On|6[;] get +1 dice this fight,1,attack(d); sfxdamage(target|d); if(d == 6){self.extradice+=1; sfx(~magic_gaindice~);};,Infinity Mirror,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirrorblade_downgraded,Deal [sword]<slotdoubles> damage,1,attack(d); sfxdamage(target|d);,Infinity Mirror,DOUBLES|DOUBLES,,WEAPON,PURPLE,,,,none,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Panic Button,Gain [shield]<double> shield|Lose 1 dice this fight,1,self.extradice--; inflictself(SHIELD|d*2); sfx(~_shield~); sfx(~magic_gaindice~);,Barricade,MAX5,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Panic Button_upgraded,Gain [shield]<double> shield|Lose 1 dice this fight,1,self.extradice--; inflictself(SHIELD|d*2); sfx(~_shield~); sfx(~magic_gaindice~);,Barricade,NORMAL,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Panic Button_downgraded,Gain [shield]<double> shield|Lose 2 dice this fight,1,self.extradice-=2; inflictself(SHIELD|d*2); sfx(~_shield~); sfx(~magic_gaindice~);,Barricade,MAX5,,SHIELD,ORANGE,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Necrosis,Inflict [poison]1 per 10 health|you are missing (<var:health_10>),1,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10)); if(self.getvar(~health_10~) > 0){inflict(POISON|self.getvar(~health_10~)); sfx(~_poison~);}else{target.textparticle(~No effect!~);};,Goop Gun,ODD,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,,,,
Necrosis_upgraded,Inflict [poison]1 per 10 health|you are missing (<var:health_10>),1,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10)); if(self.getvar(~health_10~) > 0){inflict(POISON|self.getvar(~health_10~)); sfx(~_poison~);}else{target.textparticle(~No effect!~);};,Goop Gun,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,,,,
Necrosis_downgraded,Inflict [poison]1 per 10 health|you are missing (<var:health_10>),1,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10)); if(self.getvar(~health_10~) > 0){inflict(POISON|self.getvar(~health_10~)); sfx(~_poison~);}else{target.textparticle(~No effect!~);};,Goop Gun,ODD|ODD,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,function divten(x|y){if(y == 0){return 0;}; if(x == 0){return 0;}; var total = 0; var start = 0; while(start < x){start+=y; total+=1;}; return total;}; self.setvar(~health_10~|divten(self.maxhp-self.hp|10));,,,,
CPU Shooter,Every 3 times you calculate[;]|deal [sword]2 damage|,1,attack(2); sfxdamage(target|2);,,,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~rollcheck~| 0);,,while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~ | e.getvar(~rollcheck~) + 1); if(e.getvar(~rollcheck~) % 3 == 0){e.doequipmentaction(self|target|1|[]|0|true); };};,,,,,
CPU Shooter_upgraded,Every 3 times you calculate[;]|deal [sword]4 damage,1,attack(4); sfxdamage(target|4);,,,,WEAPON,RED,,,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~rollcheck~| 0);,,while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~ | e.getvar(~rollcheck~) + 1); if(e.getvar(~rollcheck~) % 3 == 0){e.doequipmentaction(self|target|1|[]|0|true); };};,,,,,
CPU Shooter_downgraded,Every 3 times you calculate[;]|deal [sword]1 damage,1,attack(1); sfxdamage(target|1);,,,,WEAPON,RED,,,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~rollcheck~| 0);,,while(e.getvar(~rollcheck~) < self.roll_totaldice){ e.setvar(~rollcheck~ | e.getvar(~rollcheck~) + 1); if(e.getvar(~rollcheck~) % 3 == 0){e.doequipmentaction(self|target|1|[]|0|true); };};,,,,,
Nanoleech,Deal [sword]<d6> damage|Drain [heart]1 health,1,attack(d); sfxdamage(target|d); drain(1); sfx(~_drain~);,Life Leech,ODD,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Nanoleech_upgraded,Deal [sword]<d6> damage|Drain [heart]1 health,1,attack(d); sfxdamage(target|d); drain(1); sfx(~_drain~);,Life Leech,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nanoleech_downgraded,Deal [sword]<d6> damage|Drain [heart]1 health,1,attack(d); sfxdamage(target|d); drain(1); sfx(~_drain~);,Life Leech,REQUIRE1,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Megaleech,Deal [sword]<d6> damage|Drain [heart]1 health,1,attack(d); sfxdamage(target|d); drain(1); sfx(~_drain~);,Life Leech,NORMAL|NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Megaleech_upgraded,Deal [sword]<d6> damage|Drain [heart]2 health,1,attack(d); sfxdamage(target|d); drain(2); sfx(~_drain~);,Life Leech,NORMAL|NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Megaleech_downgraded,Deal [sword]<d6> damage|Drain [heart]1 health,1,attack(d); sfxdamage(target|d); drain(1); sfx(~_drain~);,Life Leech,MAX3|MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Scrap Turret,Take [sword]1 damage each turn|(Always offered as scrap),1,attackself(1); sfx(~_magic~);,Bubble Gun,,,WEAPON,GREY,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,YES,NO,,,,,e.doequipmentaction(self|target|0|[]|0|true);,,,,,,
Scrap Turret_upgraded,Take [sword]2 damage each turn|(Always offered as scrap),1,attackself(2); sfx(~_magic~);,Bubble Gun,,,WEAPON,GREY,,,,,0,NO,NO,NO,YES,NO,NO,YES,NO,,,,,e.doequipmentaction(self|target|0|[]|0|true);,,,,,,
Scrap Turret_downgraded,No effect|(Always offered as scrap),1,,Bubble Gun,,,WEAPON,GREY,,,,,0,NO,NO,NO,YES,NO,NO,YES,NO,,,,,e.doequipmentaction(self|target|0|[]|0|true);,,,,,,
Blightmare,Inflict [poison]999 poison,2,inflict(POISON|999); sfx(~_poison~);,Goop Gun,COUNTDOWN,99,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blightmare_upgraded,Inflict [poison]999999 poison,2,inflict(POISON|999999); sfx(~_poison~);,Goop Gun,COUNTDOWN,99,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blightmare_downgraded,Inflict [poison]9 poison,2,inflict(POISON|9); sfx(~_poison~);,Goop Gun,COUNTDOWN,99,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dodgy Chronometer,Take an extra turn[;] errors|on every turn after the 1st,1,inflictself(EXTRATURN); sfx(~_magic~);,Time Stop,COUNTDOWN,18,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn > 1){roboterror(self|[e]);};,,,,,,
Dodgy Chronometer_upgraded,Take an extra turn[;] errors|on every turn after the 2nd,1,inflictself(EXTRATURN); sfx(~_magic~);,Time Stop,COUNTDOWN,18,ITEM,YELLOW,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn > 2){roboterror(self|[e]);};,,,,,,
Dodgy Chronometer_downgraded,No effect[;] errors on|every turn after the 1st,1,,Time Stop,COUNTDOWN,18,ITEM,YELLOW,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,if(turn > 1){roboterror(self|[e]);};,,,,,,
Cherry Bomb,Start of turn: deal [sword]5 dmg|[gray](once per battle),1,,Bubble Gun,,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,1,,,if(e.getvar(~error~) == 1){roboterror(self|[e]);};,if(e.getvar(~error~) != 1){attack(5); sfxdamage(target|5); e.setvar(~error~|1);  roboterror(self|[e]);};,,,,,,
Cherry Bomb_upgraded,Start of turn: deal [sword]8 dmg|[gray](once per battle),1,,Bubble Gun,,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(e.getvar(~error~) == 1){roboterror(self|[e]);};,if(e.getvar(~error~) != 1){attack(8); sfxdamage(target|8); e.setvar(~error~|1);  roboterror(self|[e]);};,,,,,,
Cherry Bomb_downgraded,Start of turn: deal [sword]1 dmg|[gray](once per battle),1,,Bubble Gun,,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(e.getvar(~error~) == 1){roboterror(self|[e]);};,if(e.getvar(~error~) != 1){attack(1); sfxdamage(target|1); e.setvar(~error~|1);  roboterror(self|[e]);};,,,,,,
Snail Bat,Deal [sword]<double> damage|(Unlocks after turn 4),2,attack(d*2); sfxdamage(target|d*2);,Bubble Gun,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(turn < 4){e.changeslots([]); e.changecolour(~GRAY~);}; if(turn > 4){e.changeslots([~NORMAL~]); e.changecolour(~RED~);};,if(turn == 4){e.changeslots([~NORMAL~]); e.animate(~flashandshake~); sfx(~upgradeequipment~); e.changecolour(~RED~);};,,,,,,
Snail Bat_upgraded,Deal [sword]<double> damage|(Unlocks after turn 3),2,attack(d*2); sfxdamage(target|d*2);,Bubble Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(turn < 3){e.changeslots([]); e.changecolour(~GRAY~);}; if(turn > 3){e.changeslots([~NORMAL~]); e.changecolour(~RED~);};,if(turn == 3){e.changeslots([~NORMAL~]); e.animate(~flashandshake~); sfx(~upgradeequipment~);  e.changecolour(~RED~);};,,,,,,
Snail Bat_downgraded,Deal [sword]<d6> damage|(Unlocks after turn 4),2,attack(d); sfxdamage(target|d);,Bubble Gun,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,if(turn < 4){e.changeslots([]); e.changecolour(~GRAY~);}; if(turn > 4){e.changeslots([~NORMAL~]); e.changecolour(~RED~);};,if(turn == 4){e.changeslots([~NORMAL~]); e.animate(~flashandshake~); sfx(~upgradeequipment~); e.changecolour(~RED~);};,,,,,,
Grandfather Clock,[sword]10 damage[;] countdown|reduces by 3 each turn,1,attack(10); sfxdamage(target|10);,Accelerate,COUNTDOWN,20,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,givedice(3); e.assigndice(self.dicepool[self.dicepool.length-1]);,,,,,,
Grandfather Clock_upgraded,[sword]10 damage[;] countdown|reduces by 5 each turn,1,attack(10); sfxdamage(target|10);,Accelerate,COUNTDOWN,20,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,givedice(5); e.assigndice(self.dicepool[self.dicepool.length-1]);,,,,,,
Grandfather Clock_downgraded,[sword]5 damage[;] countdown|reduces by 3 each turn,1,attack(5); sfxdamage(target|5);,Accelerate,COUNTDOWN,20,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,givedice(3); e.assigndice(self.dicepool[self.dicepool.length-1]);,,,,,,
Jade Blade,Deal [sword]<d6> damage|(Enemy gets [thorns]1 each turn),2,attack(d); sfxdamage(target|d);,Bubble Gun,MAX5|FREE3,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,inflict(THORNS); e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Jade Blade_upgraded,Deal [sword]<d6> damage|(Enemy gets [thorns]1 each turn),2,attack(d); sfxdamage(target|d);,Bubble Gun,MAX5|FREE5,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,inflict(THORNS); e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Jade Blade_downgraded,Deal [sword]<d6> damage|(Enemy gets [thorns]1 each turn),2,attack(d); sfxdamage(target|d);,Bubble Gun,MAX5,,WEAPON,RED,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,inflict(THORNS); e.animate(~flashandshake~); sfx(~_thorns~);,,,,,,
Backup Drive,Gain [shield]2 shield|on errors,1,inflictself(SHIELD|2); sfx(~_shield~);,,,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,YES,YES,NO,NO,NO,,,,e.setvar(~error~|0); e.changecolour(~ORANGE~);,,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0 && e.getvar(~error~) == 0) {e.setvar(~error~|1); e.animate(~flashandshake~); e.doequipmentaction(self|target|0|[]|0|true); };,,,,,
Backup Drive_upgraded,Gain [shield]4 shield|on errors,1,inflictself(SHIELD|4); sfx(~_shield~);,,,,SHIELD,ORANGE,,,,,0,YES,NO,NO,YES,YES,NO,NO,NO,,,,e.setvar(~error~|0); e.changecolour(~ORANGE~);,,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0 && e.getvar(~error~) == 0) {e.setvar(~error~|1); e.animate(~flashandshake~); e.doequipmentaction(self|target|0|[]|0|true); };,,,,,
Backup Drive_downgraded,Gain [shield]1 shield|on errors,1,inflictself(SHIELD|1); sfx(~_shield~);,,,,SHIELD,ORANGE,,,,,0,YES,NO,NO,YES,YES,NO,NO,NO,,,,e.setvar(~error~|0); e.changecolour(~ORANGE~);,,if (self.roll_total >= self.roll_target && self.roll_jackpot <= 0 && e.getvar(~error~) == 0) {e.setvar(~error~|1); e.animate(~flashandshake~); e.doequipmentaction(self|target|0|[]|0|true); };,,,,,
Overconfidence,Deal [sword]5 damage|on jackpot,1,attack(5); sfxdamage(target|5);,,,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~jackpot~|0); e.changecolour(~RED~);,,if (self.roll_total >= self.roll_target && self.roll_jackpot > 0 && e.getvar(~jackpot~) == 0) {e.setvar(~jackpot~|1); e.doequipmentaction(self|target|1|[]|0|true);};,,,,,
Overconfidence_upgraded,Deal [sword]7 damage|on jackpot,1,attack(7); sfxdamage(target|7);,,,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~jackpot~|0); e.changecolour(~RED~);,,if (self.roll_total >= self.roll_target && self.roll_jackpot > 0 && e.getvar(~jackpot~) == 0) {e.setvar(~jackpot~|1); e.doequipmentaction(self|target|1|[]|0|true);};,,,,,
Overconfidence_downgraded,Deal [sword]3 damage|on jackpot,1,attack(3); sfxdamage(target|3);,,,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~jackpot~|0); e.changecolour(~RED~);,,if (self.roll_total >= self.roll_target && self.roll_jackpot > 0 && e.getvar(~jackpot~) == 0) {e.setvar(~jackpot~|1); e.doequipmentaction(self|target|1|[]|0|true);};,,,,,
Superconductor,Deal [sword]<d6> damage|(Unlocks on jackpot),1,attack(d); sfxdamage(target|d);,,NORMAL|FREE2,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changeslots([]);,,if (self.roll_total >= self.roll_target && self.roll_jackpot > 0 && e.getvar(~jackpot~) == 0) {e.setvar(~jackpot~|1); e.animate(~flashandshake~); e.changeslots([~NORMAL~|~FREE2~]);};,,e.changeslots([~NORMAL~|~FREE2~]);,,,
Superconductor_upgraded,Deal [sword]<d6> damage|(Unlocks on jackpot),1,attack(d); sfxdamage(target|d);,,NORMAL|FREE4,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.changeslots([]);,,if (self.roll_total >= self.roll_target && self.roll_jackpot > 0 && e.getvar(~jackpot~) == 0) {e.setvar(~jackpot~|1); e.animate(~flashandshake~); e.changeslots([~NORMAL~|~FREE4~]);};,,e.changeslots([~NORMAL~|~FREE4~]);,,,
Superconductor_downgraded,Deal [sword]<d6> damage|(Unlocks on jackpot),1,attack(d); sfxdamage(target|d);,,,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,e.setvar(~jackpot~|0);,,if (self.roll_total >= self.roll_target && self.roll_jackpot > 0 && e.getvar(~jackpot~) == 0) {e.setvar(~jackpot~|1); e.animate(~flashandshake~); e.changeslots([~NORMAL~]);};,,e.changeslots([~NORMAL~|~FREE2~]);,,,
Ravage,Drain [heart]1 health for|each 6 you have,1,var amount = 0; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){amount+=1;};}; drain(amount); sfx(~_drain~);,Blood Sip,COUNTDOWN,4,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ravage_upgraded,Drain [heart]1 health for|each even dice you have,1,var amount = 0; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue % 2 == 0){amount+=1;};}; drain(amount); sfx(~_drain~);,Blood Sip,COUNTDOWN,4,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Ravage_downgraded,Drain [heart]1 health for|every two 6s you have,1,var amount = 0; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){amount+=1;};}; drain(amount/2); sfx(~_drain~);,Blood Sip,COUNTDOWN,4,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Duplihate,Deal [sword]3 damage for each|duplicate dice you have,1,var founds = [0|0|0|0|0|0|0]; for(mydice in self.dicepool){if(mydice.available()){founds[mydice.basevalue]+=1;};}; var total = 0; for(x in founds){if(x > 1){total+=x-1;};}; attack(total*3); sfxdamage(target|total*3); sfx(~_magic~);,Ember,DOUBLES|DOUBLES,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Duplihate_upgraded,Deal [sword]3 damage for each|duplicate dice you have,1,var founds = [0|0|0|0|0|0|0]; for(mydice in self.dicepool){if(mydice.available()){founds[mydice.basevalue]+=1;};}; var total = 0; for(x in founds){if(x > 1){total+=x-1;};}; attack(total*3); sfxdamage(target|total*3); sfx(~_magic~);,Ember,NORMAL|NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Duplihate_downgraded,Deal [sword]3 damage for each|duplicate dice you have,1,var founds = [0|0|0|0|0|0|0]; for(mydice in self.dicepool){if(mydice.available()){founds[mydice.basevalue]+=1;};}; var total = 0; for(x in founds){if(x > 1){total+=x-1;};}; attack(total*3); sfxdamage(target|total*3); sfx(~_magic~);,Ember,REQUIRE4|REQUIRE4,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vampire Blade,Drain [heart]1[;] lose [heart]1 max hp|[gray](Reuseable),1,drain(1); self.maxhp-=1; if(self.hp > self.maxhp){self.hp = self.maxhp;}; sfx(~_drain~);,Blood Sip,MAX4,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Vampire Blade_upgraded,Drain [heart]1[;] lose [heart]1 max hp|[gray](Reuseable),1,drain(1); self.maxhp-=1; if(self.hp > self.maxhp){self.hp = self.maxhp;}; sfx(~_drain~);,Blood Sip,NORMAL,,WEAPON,RED,,,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Vampire Blade_downgraded,Drain [heart]1[;] lose [heart]1 max hp|[gray](Reuseable),1,drain(1); self.maxhp-=1; if(self.hp > self.maxhp){self.hp = self.maxhp;}; sfx(~_drain~);,Blood Sip,MAX4|MAX4,,WEAPON,RED,,,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Black Hole,Deal [sword]<d6> damage|(Start of turn: lose an item),2,attack(d); sfxdamage(target|d);,Plasma Gun,NORMAL|FREE4,,WEAPON,PURPLE,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; var r = rand(poss); roboterror(self|[r]); e.animate(~flashandshake~); sfx(~_curse~);,,,,,,
Black Hole_upgraded,Deal [sword]<d6> damage|(Start of turn: lose an item),2,attack(d); sfxdamage(target|d);,Plasma Gun,NORMAL|FREE6,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; var r = rand(poss); roboterror(self|[r]); e.animate(~flashandshake~); sfx(~_curse~);,,,,,,
Black Hole_downgraded,Deal [sword]<d6> damage|(Start of turn: lose an item),2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX3|FREE4,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var poss = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~){poss.push(eq);};}; var r = rand(poss); roboterror(self|[r]); e.animate(~flashandshake~); sfx(~_curse~);,,,,,,
Mirror Calling,You and your enemy get|+1 dice this fight,1,self.extradice++; target.extradice++; sfx(~magic_gaindice~);,Infinity Mirror,NORMAL,,MAGIC,PURPLE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Mirror Calling_upgraded,You and your enemy get|+2 dice this fight,1,self.extradice+=2; target.extradice+=2; sfx(~magic_gaindice~);,Infinity Mirror,NORMAL,,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mirror Calling_downgraded,You and your enemy get|+1 dice this fight,1,self.extradice++; target.extradice++; sfx(~magic_gaindice~);,Infinity Mirror,REQUIRE6,,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reaper,Your next attack also heals|you for the damage done,1,if(e.getvar(~stop~) != 1){if(e.getvar(~time~) == 0){ self.equipmentused+=1; e.setvar(~currenthealth~|target.hp); inflictself(~reaper~); sfx(~_fury~); /* init */}; e.setvar(~time~|e.getvar(~time~)+1); /* tick */ if(target.hp >= e.getvar(~currenthealth~)){e.doequipmentaction(self|target|e.castdirection|[]|-1|true); self.equipmentused-=1; e.playinganimation = false; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};}else{attackself(target.hp - e.getvar(~currenthealth~)); removestatusself(~reaper~|1); sfx(~_heal~);};};,Revitalize,REQUIRE4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~stop~|0); e.setvar(~time~|0);,,,,e.setvar(~stop~|1); e.setvar(~time~|0);,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.preventdefault=true;  e.maintainfury = true;
Reaper_upgraded,Your next attack also heals|you for the damage done,1,if(e.getvar(~stop~) != 1){if(e.getvar(~time~) == 0){ self.equipmentused+=1; e.setvar(~currenthealth~|target.hp); inflictself(~reaper~); sfx(~_fury~); /* init */}; e.setvar(~time~|e.getvar(~time~)+1); /* tick */ if(target.hp >= e.getvar(~currenthealth~)){e.doequipmentaction(self|target|e.castdirection|[]|-1|true); self.equipmentused-=1; e.playinganimation = false; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};}else{attackself(target.hp - e.getvar(~currenthealth~)); removestatusself(~reaper~|1); sfx(~_heal~);};};,Revitalize,EVEN,,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~stop~|0); e.setvar(~time~|0);,,,,e.setvar(~stop~|1); e.setvar(~time~|0);,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.preventdefault=true;  e.maintainfury = true;
Reaper_downgraded,Your next attack also heals|you for the damage done,1,if(e.getvar(~stop~) != 1){if(e.getvar(~time~) == 0){ self.equipmentused+=1; e.setvar(~currenthealth~|target.hp); inflictself(~reaper~); sfx(~_fury~); /* init */}; e.setvar(~time~|e.getvar(~time~)+1); /* tick */ if(target.hp >= e.getvar(~currenthealth~)){e.doequipmentaction(self|target|e.castdirection|[]|-1|true); self.equipmentused-=1; e.playinganimation = false; if(e.getvar(~reequip~) > 0){inflictself(REEQUIPNEXT|e.getvar(~reequip~)); e.setvar(~reequip~|0);};}else{attackself(target.hp - e.getvar(~currenthealth~)); removestatusself(~reaper~|1); sfx(~_heal~);};};,Revitalize,REQUIRE4|REQUIRE4,,ITEM,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.setvar(~stop~|0); e.setvar(~time~|0);,,,,e.setvar(~stop~|1); e.setvar(~time~|0);,if(getstatusself(REEQUIPNEXT) > 0){e.setvar(~reequip~|getstatusself(REEQUIPNEXT)); removestatusself(REEQUIPNEXT|ALL);};,,e.preventdefault=true;  e.maintainfury = true;
Imperishability,Your items are reuseable|during turn 5,1,,Efficiency,,,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.changecolour(~GRAY~);,if(turn == 5){inflictself(~recycle~); sfx(~_recycle~); e.animate(~flashandshake~); e.changecolour(~GREEN~);};,,,,,,
Imperishability_upgraded,Your items are reuseable|every 5th turn,1,,Efficiency,,,ITEM,GREEN,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.changecolour(~GRAY~);,if(turn %5 == 0){inflictself(~recycle~); sfx(~_recycle~); e.animate(~flashandshake~); e.changecolour(~GREEN~);};,,,,,,
Imperishability_downgraded,No effect,1,,Efficiency,,,ITEM,GREEN,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,e.changecolour(~GRAY~);,,,,,,,
Insult To Injury,If you dealt 40+ damage this|turn[;] take an extra turn|(current damage: <var:difference>),1,if(self.getvar(~targethealth~)-target.hp >= 40){inflictself(EXTRATURN); sfx(~_magic~);}else{self.textparticle(~No effect!~);};,Time Stop,COUNTDOWN,12,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~targethealth~|target.hp); e.changecolour(~GREEN~); self.setvar(~difference~|0);,,self.setvar(~difference~|self.getvar(~targethealth~)-target.hp); if(self.getvar(~difference~) >= 40){e.changecolour(~YELLOW~); sfx(~_fury~); e.animate(~flashandshake~);};,,,,,
Insult To Injury_upgraded,If you dealt 30+ damage this|turn[;] take an extra turn|(current damage: <var:difference>),1,if(self.getvar(~targethealth~)-target.hp >= 30){inflictself(EXTRATURN); sfx(~_magic~);}else{self.textparticle(~No effect!~);};,Time Stop,COUNTDOWN,12,ITEM,GREEN,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~targethealth~|target.hp); e.changecolour(~GREEN~); self.setvar(~difference~|0);,,self.setvar(~difference~|self.getvar(~targethealth~)-target.hp); if(self.getvar(~difference~) >= 30){e.changecolour(~YELLOW~); sfx(~_fury~); e.animate(~flashandshake~);};,,,,,
Insult To Injury_downgraded,If you dealt 60+ damage this|turn[;] take an extra turn|(current damage: <var:difference>),1,if(self.getvar(~targethealth~)-target.hp >= 60){inflictself(EXTRATURN); sfx(~_magic~);}else{self.textparticle(~No effect!~);};,Time Stop,COUNTDOWN,12,ITEM,GREEN,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,self.setvar(~targethealth~|target.hp); e.changecolour(~GREEN~); self.setvar(~difference~|0);,,self.setvar(~difference~|self.getvar(~targethealth~)-target.hp); if(self.getvar(~difference~) >= 60){e.changecolour(~YELLOW~); sfx(~_fury~); e.animate(~flashandshake~);};,,,,,
Fairy In A Bottle,If you start your turn on [heart]1|health[;] restore [heal]15 health,1,attackself(-15); sfx(~_survive~);,Revitalize,,,SHIELD,GREEN,change_power,change_power,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,if(self.hp == 1){e.doequipmentaction(self|target|0|[]|0|true);};,,,,,,
Fairy In A Bottle_upgraded,If you start your turn on [heart]1|health[;] restore [heal]20 health,1,attackself(-20); sfx(~_survive~);,Revitalize,,,SHIELD,GREEN,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,if(self.hp == 1){e.doequipmentaction(self|target|0|[]|0|true);};,,,,,,
Fairy In A Bottle_downgraded,If you start your turn on [heart]1|health[;] restore [heal]10 health,1,attackself(-10); sfx(~_survive~);,Revitalize,,,SHIELD,GREEN,,,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,if(self.hp == 1){e.doequipmentaction(self|target|0|[]|0|true);};,,,,,,
Shielding Potion,Gain [shield]12 shield|[gray](once per battle),2,inflictself(SHIELD|12); sfx(~_shield~);,Coin Clippers,COUNTDOWN,8,SHIELD,ORANGE,change_power,change_power,,,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shielding Potion_upgraded,Gain [shield]15 shield|[gray](once per battle),2,inflictself(SHIELD|15); sfx(~_shield~);,Coin Clippers,COUNTDOWN,8,SHIELD,ORANGE,,,,,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shielding Potion_downgraded,Gain [shield]8 shield|[gray](once per battle),2,inflictself(SHIELD|8); sfx(~_shield~);,Coin Clippers,COUNTDOWN,8,SHIELD,ORANGE,,,,,0,YES,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Brass Beast,Deal [sword]<d6> damage|Slot increases each turn|[gray](Reuseable),2,attack(d); sfxdamage(target|d);,Whelm,REQUIRE1,,WEAPON,ORANGE,change_power,change_power,,none,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var slots = [null|~REQUIRE1~|~MAX2~|~MAX3~|~MAX4~|~MAX5~|~MAX6~]; if(turn < 7){e.changeslots([slots[turn]]); e.animate(~flashandshake~);}else{e.changeslots([~NORMAL~]);};,,,,,,
Brass Beast_upgraded,Deal [sword]<d6> damage|Slot increases each turn|[gray](Reuseable),2,attack(d); sfxdamage(target|d);,Whelm,REQUIRE1|FREE1,,WEAPON,ORANGE,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var slots = [null|~REQUIRE1~|~MAX2~|~MAX3~|~MAX4~|~MAX5~|~MAX6~]; if(turn < 7){e.changeslots([slots[turn]|~FREE1~]); e.animate(~flashandshake~);}else{e.changeslots([~NORMAL~|~FREE1~]);};,,,,,,
Brass Beast_downgraded,Deal [sword]<d6> damage|Slot increases each turn,2,attack(d); sfxdamage(target|d);,Whelm,REQUIRE1,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var slots = [null|~REQUIRE1~|~MAX2~|~MAX3~|~MAX4~|~MAX5~|~MAX6~]; if(turn < 7){e.changeslots([slots[turn]]); e.animate(~flashandshake~);}else{e.changeslots([~NORMAL~]);};,,,,,,
Minigun,Deal [sword]<d6> damage|Gains +1 use each turn|[gray](Reuseable),2,attack(d); sfxdamage(target|d);,Whelm,MAX5,,WEAPON,RED,change_power,change_power,,none,1,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.usesleft = turn; e.updatereuseabledescription();,,,,,,,
Minigun_upgraded,Deal [sword]<d6> damage|Gains +1 use each turn|[gray](Reuseable),2,attack(d); sfxdamage(target|d);,Whelm,MAX5,,WEAPON,RED,,,,none,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,e.usesleft = turn+1; e.updatereuseabledescription();,,,,,,,
Minigun_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Whelm,MAX4,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glowstick,Deal [sword]<d6> damage|Get an extra dice next turn,1,attack(d); sfxdamage(target|d); inflictself(~stash~+rand([1|2|3|4|5|6])); sfx(~magic_gaindice~);,Magic Lantern,EVEN,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glowstick_upgraded,Deal [sword]<d6> damage|Get an extra dice next turn,1,attack(d); sfxdamage(target|d); inflictself(~stash~+rand([1|2|3|4|5|6])); sfx(~magic_gaindice~);,Magic Lantern,NORMAL,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glowstick_downgraded,Deal [sword]<d6> damage,1,attack(d); sfxdamage(target|d); ,Magic Lantern,EVEN,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dice Magnet,If enemy has more than 1|dice[;] steal a dice this fight|[gray](once per battle),1,if(target.dice + target.extradice + target.bonusdice > 1){target.extradice-=1; givedice(); self.extradice+=1; sfx(~magic_gaindice~);};,Infinity Mirror,COUNTDOWN,20,ITEM,YELLOW,change_power,change_power,,,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dice Magnet_upgraded,If enemy has more than 1|dice[;] steal a dice this fight,1,if(target.dice + target.extradice + target.bonusdice > 1){target.extradice-=1; givedice(); self.extradice+=1; sfx(~magic_gaindice~);};,Infinity Mirror,COUNTDOWN,20,ITEM,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dice Magnet_downgraded,If enemy has more than 1|dice[;] steal a dice this turn|[gray](once per battle),1,if(target.dice + target.extradice + target.bonusdice > 1){target.bonusdice-=1; givedice(); sfx(~magic_gaindice~);};,Infinity Mirror,COUNTDOWN,20,ITEM,YELLOW,,,,,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Duoplicate,Duplicate both dice,2,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; givedice([a|a|b|b]);,Clone Device,MIN4|MIN4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Duoplicate_upgraded,Duplicate both dice,2,var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; givedice([a|a|b|b]);,Clone Device,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Duoplicate_downgraded,Duplicate a dice,2,givedice([d|d]);,Clone Device,MIN4,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Malediction,Inflict [curse] curse and [lock] lock,2,inflict(CURSE); sfx(~_curse~); inflict(LOCK); sfx(~_lock~|~~|0.2);,Dramatic Pause,COUNTDOWN,12,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Malediction_upgraded,Inflict [curse]2 curses|and [lock]1 lock,2,inflict(CURSE|2); sfx(~_curse~); inflict(LOCK); sfx(~_lock~|~~|0.2);,Dramatic Pause,COUNTDOWN,12,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Malediction_downgraded,Inflict [curse] curse,2,inflict(CURSE); sfx(~_curse~);,Dramatic Pause,COUNTDOWN,12,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
One With Everything,Inflict lots of statuses:|[fire] [ice] [shock] [weaken] [poison] [blind],1,var t = 0; var stats = [FIRE|ICE|SHOCK|WEAKEN|POISON|BLIND]; for(x in stats){inflict(x); sfx(~_~ + x.toLowerCase()|~~|0.1*t); t+=1;};,Stardust,COUNTDOWN,16,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
One With Everything_upgraded,Inflict lots of statuses:|[fire] [ice] [shock] [weaken] [poison] [blind] [curse],1,var t = 0; var stats = [FIRE|ICE|SHOCK|WEAKEN|POISON|BLIND|CURSE]; for(x in stats){inflict(x); sfx(~_~ + x.toLowerCase()|~~|0.1*t); t+=1;};,Stardust,COUNTDOWN,16,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
One With Everything_downgraded,Inflict a random status:|[fire] [ice] [shock] [weaken] [poison] [blind],1,var stats = [FIRE|ICE|SHOCK|WEAKEN|POISON|BLIND]; var r = rand(stats); inflict(r); sfx(~_~ + r.toLowerCase());,Stardust,COUNTDOWN,16,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Caps Lock,lOCK [lock]ALL DICE|lOCK YOURS NEXT TURN,1,inflict(LOCK|ALL); sfx(~_lock~);  jinx(~cAPS lOCK~|~LOCK ALL DICE~|~lOCK ALL DICE~|~inflict(LOCK|ALL); sfx(\~_lock\~);~|self|self|1|d);,Padlock,REQUIRE5|REQUIRE5,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Caps Lock_upgraded,lOCK [lock]ALL DICE|lOCK YOURS NEXT TURN,1,inflict(LOCK|ALL); sfx(~_lock~);  jinx(~cAPS lOCK~|~LOCK ALL DICE~|~lOCK ALL DICE~|~inflict(LOCK|ALL); sfx(\~_lock\~);~|self|self|1|d);,Padlock,MIN5|MIN5,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Caps Lock_downgraded,lOCK YOUR DICE NEXT TURN,1,sfx(~_lock~);  jinx(~cAPS lOCK~|~LOCK ALL DICE~|~lOCK ALL DICE~|~inflict(LOCK|ALL); sfx(\~_lock\~);~|self|self|1|d);,Padlock,REQUIRE5|REQUIRE5|REQUIRE5,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stock Up,Get 2 copies of the smallest|dice you don't have,1,var founds = [0|0|0|0|0|0|0]; for(mydice in self.dicepool){if(mydice.available()){founds[mydice.basevalue] = 1;};}; var min = 0; for(x in 1...7){if(founds[x] != 1){min = x; break;};}; if(min != 0){givedice([min|min]);};,Magic Dice,COUNTDOWN,6,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stock Up_upgraded,Get 3 copies of the smallest|dice you don't have,1,var founds = [0|0|0|0|0|0|0]; for(mydice in self.dicepool){if(mydice.available()){founds[mydice.basevalue] = 1;};}; var min = 0; for(x in 1...7){if(founds[x] != 1){min = x; break;};}; if(min != 0){givedice([min|min|min]);};,Magic Dice,COUNTDOWN,6,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stock Up_downgraded,Get a copy of the smallest|dice you don't have,1,var founds = [0|0|0|0|0|0|0]; for(mydice in self.dicepool){if(mydice.available()){founds[mydice.basevalue] = 1;};}; var min = 0; for(x in 1...7){if(founds[x] != 1){min = x; break;};}; if(min != 0){givedice([min]);};,Magic Dice,COUNTDOWN,6,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Headcrack,Deal [sword]<d6> damage[;] return|the dice on 3 or less,2,attack(d); sfxdamage(target|d); if(d<=3){givedice(d);};,Magic Dice,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Headcrack_upgraded,Deal [sword]<d6> damage[;] return|the dice on 4 or less,2,attack(d); sfxdamage(target|d); if(d<=4){givedice(d);};,Magic Dice,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Headcrack_downgraded,Deal [sword]<d6> damage[;] return|the dice on 3 or less,2,attack(d); sfxdamage(target|d); if(d<=3){givedice(d);};,Magic Dice,MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mysterious Blade,Deal [sword]<d6> damage|Blind dice deal [sword]6 instead,2,if(actualdice[0].blind){attack(6); sfxdamage(target|6); sfx(~_blind~);}else{attack(d); sfxdamage(target|d);};,Smoke Cloud,NORMAL,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mysterious Blade_upgraded,Deal [sword]<d6> damage|Blind dice deal [sword]7 instead,2,if(actualdice[0].blind){attack(7); sfxdamage(target|7); sfx(~_blind~);}else{attack(d); sfxdamage(target|d);};,Smoke Cloud,NORMAL|FREE1,,WEAPON,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mysterious Blade_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Smoke Cloud,NORMAL,,WEAPON,GRAY,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Juice Box,Heal [heal]2 health|[gray](2 uses this turn),1,attackself(-2); sfx(~_heal~);,Revitalize,NORMAL,,SHIELD,GREEN,change_power,change_power,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Juice Box_upgraded,Heal [heal]2 health|[gray](4 uses this turn),1,attackself(-2); sfx(~_heal~);,Revitalize,NORMAL,,SHIELD,GREEN,,,,,4,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Juice Box_downgraded,Heal [heal]1 health|[gray](2 uses this turn),1,attackself(-1); sfx(~_heal~);,Revitalize,NORMAL,,SHIELD,GREEN,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Field Dressing,Heal [heal]1 health|[gray](Reuseable),2,attackself(-1); sfx(~_heal~);,Regenerate,NORMAL,,SHIELD,GREEN,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Field Dressing_upgraded,Heal [heal]2 health|[gray](Reuseable),2,attackself(-2); sfx(~_heal~);,Regenerate,NORMAL,,SHIELD,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Field Dressing_downgraded,Heal [heal]1 health|[gray](Reuseable),2,attackself(-1); sfx(~_heal~);,Regenerate,EVEN,,SHIELD,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starburst,Deal [sword]3 damage for each|unique status on enemy,1,var amount = 3; var total = 0; for(x in target.status){total+=amount;}; if(total > 0){attack(total); sfxdamage(target|total);};,Stardust,EVEN,,WEAPON,PINK,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starburst_upgraded,Deal [sword]3 damage for each|unique status on enemy,1,var amount = 3; var total = 0; for(x in target.status){total+=amount;}; if(total > 0){attack(total); sfxdamage(target|total);};,Stardust,NORMAL,,WEAPON,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starburst_downgraded,Deal [sword]2 damage for each|unique status on enemy,1,var amount = 2; var total = 0; for(x in target.status){total+=amount;}; if(total > 0){attack(total); sfxdamage(target|total);};,Stardust,EVEN,,WEAPON,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starsear,Increase all enemy|status effects by 1,1,for(x in target.status){if(x.stacks == true && x.name != ~extradamage~){inflict(x.type|1);};}; sfx(~_thinghappens~);,Stardust,ODD,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starsear_upgraded,Double all enemy|status effects,1,for(x in target.status){if(x.stacks == true && x.name != ~extradamage~){inflict(x.type|x.value);};}; sfx(~_thinghappens~);,Stardust,ODD,,WEAPON,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starsear_downgraded,Increase a random enemy|status effect by 1,1,var poss = []; for(st in target.status){if(st.stacks == true && st.name != ~extradamage~){poss.push(st);};}; if(poss.length > 0){var r = rand(poss); inflict(r.type|1); sfx(~_thinghappens~);};,Stardust,ODD,,WEAPON,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Evil Eye,Lock [lock]1 dice,2,inflict(LOCK); sfx(~_lock~);,Padlock,REQUIRE1,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Evil Eye_upgraded,Lock [lock]1 dice|Return this dice,2,inflict(LOCK); sfx(~_lock~); givedice();,Padlock,REQUIRE1,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Evil Eye_downgraded,Lock [lock]1 dice,2,inflict(LOCK); sfx(~_lock~);,Padlock,REQUIRE1|REQUIRE1,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosary,[shock] Shock yourself[;]|recover [heal]<d6> health,1,inflictself(SHOCK); self.applyequipmentcurses(); sfx(~_shock~); attackself(-d); sfx(~_heal~);,Static Shock,MAX4,,SHIELD,YELLOW,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosary_upgraded,[shock] Shock yourself[;]|recover [heal]<d6> health,1,inflictself(SHOCK); self.applyequipmentcurses(); sfx(~_shock~); attackself(-d); sfx(~_heal~);,Static Shock,MAX5,,SHIELD,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Rosary_downgraded,[shock] Shock yourself[;]|recover [heal]<d6> health,1,inflictself(SHOCK); self.applyequipmentcurses(); sfx(~_shock~); attackself(-d); sfx(~_heal~);,Static Shock,MAX2,,SHIELD,YELLOW,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Plug Socket,[shock] Shock self[;] reroll dice|,1,inflictself(SHOCK); self.applyequipmentcurses(); sfx(~_shock~); givedice();,Static Shock,NORMAL,,ITEM,YELLOW,change_power,change_power,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Plug Socket_upgraded,[shock] Shock self[;] reroll dice|,1,inflictself(SHOCK); self.applyequipmentcurses(); sfx(~_shock~); var da = []; for(x in [0|0]){da.push(rand([1|2|3|4|5|6]));}; givedice(da);,Static Shock,NORMAL|NORMAL,,ITEM,YELLOW,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Plug Socket_downgraded,[shock] Shock self[;] reroll dice|,1,inflictself(SHOCK); self.applyequipmentcurses(); sfx(~_shock~); givedice();,Static Shock,MIN4,,ITEM,YELLOW,,,,,-1,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Suspicious Box,Contents mysterious,1,sfx(~_curse~);,,MAX5,,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,function checkslots(val){var sl = e.getslots(); if(sl.length > 1){return false;}; var s = sl[0]; if(s == ~EVEN~ && val %2 == 0){return true;}; if(s == ~ODD~ && val %2 == 1){return true;}; if(s == ~REQUIRE~+val){return true;}; for(x in 1...val+1){if(s == ~MIN~+x){return true;};}; for(x in val...7){if(s == ~MAX~+x){return true;};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1] && val >= r[0] && val <= r[1]){return true;} }; return false;}; var oldx = e.x; var oldy = e.y; var eqlist = getparticularequipment([~small~]); var flag = false; while(!flag){e.create(rand(eqlist)); flag = checkslots(d) && e.usesleft == 0;}; e.x = oldx; e.y = oldy; e.scriptendturn+=~e.create(\~Suspicious Box\~);~;,,e.preventdefault=true; e.maintainfury=true;
Suspicious Box_upgraded,Contents mysterious,1,sfx(~_curse~);,,NORMAL,,ITEM,YELLOW,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,function checkslots(val){var sl = e.getslots(); if(sl.length > 1){return false;}; var s = sl[0]; if(s == ~EVEN~ && val %2 == 0){return true;}; if(s == ~ODD~ && val %2 == 1){return true;}; if(s == ~REQUIRE~+val){return true;}; for(x in 1...val+1){if(s == ~MIN~+x){return true;};}; for(x in val...7){if(s == ~MAX~+x){return true;};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1] && val >= r[0] && val <= r[1]){return true;} }; return false;}; var oldx = e.x; var oldy = e.y; var eqlist = getparticularequipment([~large~]); var flag = false; while(!flag){e.create(rand(eqlist)|true); flag = checkslots(d) && e.usesleft == 0;}; e.x = oldx; e.y = oldy; e.scriptendturn+=~e.create(\~Suspicious Box\~|true);~;,,e.preventdefault=true; e.maintainfury=true;
Suspicious Box_downgraded,Contents mysterious,1,sfx(~_curse~);,,MAX3,,ITEM,YELLOW,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,function checkslots(val){var sl = e.getslots(); if(sl.length > 1){return false;}; var s = sl[0]; if(s == ~EVEN~ && val %2 == 0){return true;}; if(s == ~ODD~ && val %2 == 1){return true;}; if(s == ~REQUIRE~+val){return true;}; for(x in 1...val+1){if(s == ~MIN~+x){return true;};}; for(x in val...7){if(s == ~MAX~+x){return true;};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1] && val >= r[0] && val <= r[1]){return true;} }; return false;}; var oldx = e.x; var oldy = e.y; var eqlist = getparticularequipment([~small~]); var flag = false; while(!flag){e.create(rand(eqlist)); flag = checkslots(d) && e.usesleft == 0;}; e.x = oldx; e.y = oldy; e.scriptendturn+=~e.create(\~Suspicious Box\~);~;,,e.preventdefault=true; e.maintainfury=true;
Frostfire,[fire]<d6> damage + [fire]1 burn|(Swaps to [ice] form each turn),2,attack(d|FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,EVEN,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,e.create(~Firefrost~|e.originallyupgraded);,,,
Frostfire_upgraded,[fire]<d6> damage + [fire]1 burn|(Swaps to [ice] form each turn),2,attack(d|FIRE); inflict(FIRE); sfx(~_fire~);,Blowtorch,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,e.create(~Firefrost~|e.originallyupgraded);,,,
Frostfire_downgraded,Deal [fire]<d6> damage|(Swaps to [ice] form each turn),2,attack(d|FIRE); sfx(~_fire~);,Blowtorch,EVEN,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,e.create(~Firefrost~|e.originallyupgraded);,,,
Firefrost,[ice]<d6> damage + [ice]1 freeze|(Swaps to [fire] form each turn),2,attack(d|ICE); inflict(ICE); sfx(~_ice~);,Flash Freeze,ODD,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,e.create(~Frostfire~|e.originallyupgraded);,,,
Firefrost_upgraded,[ice]<d6> damage + [ice]1 freeze|(Swaps to [fire] form each turn),2,attack(d|ICE); inflict(ICE); sfx(~_ice~);,Flash Freeze,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,e.create(~Frostfire~|e.originallyupgraded);,,,
Firefrost_downgraded,Deal [ice]<d6> damage|(Swaps to [fire] form each turn),2,attack(d|ICE); sfx(~_ice~);,Flash Freeze,ODD,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,e.create(~Frostfire~|e.originallyupgraded);,,,
Precognition,Gain a random blessing|next turn ([shield][heal][reduce][fury][thorns][]),1,var effects=[~inflict(SHIELD|4); sfx(\~_shield\~);~|~inflict(REDUCE); sfx(\~_shield\~);~|~inflict(FURY); sfx(\~_fury\~);~|~attack(-4); sfx(\~_heal\~);~|~inflict(THORNS); sfx(\~_thorns\~);~]; var descs=[~Receive [shield]4 shield~|~Receive [reduce]1 reduce~|~Receive [fury] Fury~|~Recover [heal]4 health~|~Receive [thorns]1 thorns~]; var r = rand([0|1|2|3|4]);  jinx(~Precognition~|descs[r].toLowerCase()|descs[r]|effects[r]|self|self|1|d);  sfx(~_thinghappens~);,Power Up,COUNTDOWN,5,WEAPON,PURPLE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,donothing();
Precognition_upgraded,Gain 2 random blessings|next turn ([shield][heal][reduce][fury][thorns][]),1,var effects=[~inflict(SHIELD|4); sfx(\~_shield\~);~|~inflict(REDUCE); sfx(\~_shield\~);~|~inflict(FURY); sfx(\~_fury\~);~|~attack(-4); sfx(\~_heal\~);~|~inflict(THORNS); sfx(\~_thorns\~);~]; var descs=[~Receive [shield]4 shield~|~Receive [reduce]1 reduce~|~Receive [fury] Fury~|~Recover [heal]4 health~|~Receive [thorns]1 thorns~]; for(x in [0|0]){var r = rand([0|1|2|3|4]);  jinx(~Precognition~|descs[r].toLowerCase()|descs[r]|effects[r]|self|target|1|d);};  sfx(~_thinghappens~);,Power Up,COUNTDOWN,5,WEAPON,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,donothing();
Precognition_downgraded,Get nothing next turn,1,jinx(~Precognition-~|~Do nothing~|~do nothing~|~inflict(\~nothing\~); sfx(\~_thinghappens|~);~|self|self|1|1); sfx(~_thinghappens~);,Power Up,COUNTDOWN,5,WEAPON,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,donothing();
Mind Blast,Deal [sword]4 damage for|each Precognition jinx,2,var damage = 4; var total = 0; if(self.status.length > 0){for(st in self.status){if(st.name == ~Precognition~){total+=1;};}; attack(damage*total); sfxdamage(target|damage*total); sfx(~_magic~);};,Power Up,NORMAL,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Mind Blast_upgraded,Deal [sword]6 damage for|each Precognition jinx,2,var damage = 6; var total = 0; if(self.status.length > 0){for(st in self.status){if(st.name == ~Precognition~){total+=1;};}; attack(damage*total); sfxdamage(target|damage*total); sfx(~_magic~);};,Power Up,NORMAL,,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Mind Blast_downgraded,Deal [sword]2 damage for|each Precognition jinx,2,var damage =2; var total = 0; if(self.status.length > 0){for(st in self.status){if(st.name == ~Precognition~){total+=1;};}; attack(damage*total); sfxdamage(target|damage*total); sfx(~_magic~);};,Power Up,NORMAL,,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Recognition,Trigger Precognition jinxes[;]|and keep a copy of them,1,if(self.status.length > 0){var t = self.status.copy(); for(st in t){if(st.name == ~Precognition~){ var desc = st.description[0].split(~[;] ~)[1].split(~.~); jinx(~Precognition~|desc[0]|desc[0].substring(0|1).toUpperCase() + desc[0].substring(1|desc[0].length)|st.jinxscript|self|target|st.value+1|d); st.add(1-st.value); }else if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; boostjinxcountdowns(self|1);}; sfx(~_thinghappens~);,Power Up,NORMAL,,WEAPON,PURPLE,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Recognition_upgraded,Trigger Precognition jinxes[;]|and keep a copy of them|Return the dice,1,if(self.status.length > 0){var t = self.status.copy(); for(st in t){if(st.name == ~Precognition~){ var desc = st.description[0].split(~[;] ~)[1].split(~.~); jinx(~Precognition~|desc[0]|desc[0].substring(0|1).toUpperCase() + desc[0].substring(1|desc[0].length)|st.jinxscript|self|target|st.value+1|d); st.add(1-st.value); }else if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; boostjinxcountdowns(self|1);}; sfx(~_thinghappens~); givedice(d);,Power Up,NORMAL,,WEAPON,PURPLE,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Recognition_downgraded,Trigger Precognition jinxes,1,if(self.status.length > 0){var t = self.status.copy(); for(st in t){if(st.name == ~Precognition~){ st.add(1-st.value); }else if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; boostjinxcountdowns(self|1);}; sfx(~_thinghappens~);,Power Up,NORMAL,,WEAPON,PURPLE,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bureaucratic Blade,1: [sword]1 dmg[;] 2: [sword]2 dmg|3: [sword]3 dmg[;] 4: [sword]4 dmg|5: [sword]5 dmg[;] 6: [sword]6 dmg,2,if(d == 1){attack(1); sfxdamage(target|1);}; if(d == 2){attack(2); sfxdamage(target|2);}; if(d == 3){attack(3); sfxdamage(target|3);}; if(d == 4){attack(4); sfxdamage(target|4);}; if(d == 5){attack(5); sfxdamage(target|5);}; if(d == 6){attack(6); sfxdamage(target|6);};,Health Down,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bureaucratic Blade_upgraded,1: [sword]2 dmg[;] 2: [sword]3 dmg|3: [sword]4 dmg[;] 4: [sword]5 dmg|5: [sword]6 dmg[;] 6: [sword]7 dmg,2,if(d == 1){attack(2); sfxdamage(target|2);}; if(d == 2){attack(3); sfxdamage(target|3);}; if(d == 3){attack(4); sfxdamage(target|4);}; if(d == 4){attack(5); sfxdamage(target|5);}; if(d == 5){attack(6); sfxdamage(target|6);}; if(d == 6){attack(7); sfxdamage(target|7);};,Health Down,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bureaucratic Blade_downgraded,1: [sword]1 dmg[;] 2: [sword]2 dmg|3: [sword]3 dmg[;] 4: [sword]4 dmg,2,if(d == 1){attack(1); sfxdamage(target|1);}; if(d == 2){attack(2); sfxdamage(target|2);}; if(d == 3){attack(3); sfxdamage(target|3);}; if(d == 4){attack(4); sfxdamage(target|4);};,Health Down,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfire,Burn [fire]1 dice[;] then heal|[heal]2 hp per burning enemy dice,1,inflict(FIRE); sfx(~_fire~); attackself(-2*getstatus(FIRE)); sfx(~_heal~); sfx(~_survive~);,Blowtorch,COUNTDOWN,9,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfire_upgraded,Burn [fire]1 dice[;] then heal|[heal]3 hp per burning enemy dice,1,inflict(FIRE); sfx(~_fire~); attackself(-3*getstatus(FIRE)); sfx(~_heal~); sfx(~_survive~);,Blowtorch,COUNTDOWN,9,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfire_downgraded,Burn [fire]1 dice[;] then heal|[heal]1 hp per burning enemy dice,1,inflict(FIRE); sfx(~_fire~); attackself(-1*getstatus(FIRE)); sfx(~_heal~); sfx(~_survive~);,Blowtorch,COUNTDOWN,9,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfrost,Freeze [ice]1 dice[;] then heal|[heal]2 hp per frozen enemy dice,1,inflict(ICE); sfx(~_ice~); attackself(-2*getstatus(ICE)); sfx(~_heal~); sfx(~_survive~);,Flash Freeze,COUNTDOWN,9,WEAPON,BRIGHTCYAN,change_power,change_power,ice,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfrost_upgraded,Freeze [ice]1 dice[;] then heal|[heal]3 hp per frozen enemy dice,1,inflict(ICE); sfx(~_ice~); attackself(-3*getstatus(ICE)); sfx(~_heal~); sfx(~_survive~);,Flash Freeze,COUNTDOWN,9,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfrost_downgraded,Freeze [ice]1 dice[;] then heal|[heal]1 hp per frozen enemy dice,1,inflict(ICE); sfx(~_ice~); attackself(-1*getstatus(ICE)); sfx(~_heal~); sfx(~_survive~);,Flash Freeze,COUNTDOWN,9,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfrost?,Inflict [ice]1 freeze[;] then heal|[heal]2 hp per freeze on enemy,1,inflict(ICE); sfx(~_ice~); attackself(-2*getstatus(ICE)); sfx(~_heal~); sfx(~_survive~);,Flash Freeze,COUNTDOWN,9,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfrost?_upgraded,Inflict [ice]1 freeze[;] then heal|[heal]3 hp per freeze on enemy,1,inflict(ICE); sfx(~_ice~); attackself(-3*getstatus(ICE)); sfx(~_heal~); sfx(~_survive~);,Flash Freeze,COUNTDOWN,9,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Angelfrost?_downgraded,Inflict [ice]1 freeze[;] then heal|[heal]1 hp per freeze on enemy,1,inflict(ICE); sfx(~_ice~); attackself(-1*getstatus(ICE)); sfx(~_heal~); sfx(~_survive~);,Flash Freeze,COUNTDOWN,9,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Mass Counterspell,Lock enemy dice matching|values of your current dice,2,var flag = false; for(mydice in self.dicepool){if(mydice.available()){flag = true; inflict(~counter_~+mydice.basevalue);};}; if(flag){sfx(~_lock~); sfx(~_magic~);};,Padlock,NORMAL|NORMAL,9,ITEM,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mass Counterspell_upgraded,Lock enemy dice matching|values of your current dice,2,var flag = false; for(mydice in self.dicepool){if(mydice.available()){flag = true; inflict(~counter_~+mydice.basevalue);};}; if(flag){sfx(~_lock~); sfx(~_magic~);};,Padlock,NORMAL|NORMAL,7,ITEM,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mass Counterspell_downgraded,Lock enemy dice matching|values of your current dice,2,var flag = false; for(mydice in self.dicepool){if(mydice.available()){flag = true; inflict(~counter_~+mydice.basevalue);};}; if(flag){sfx(~_lock~); sfx(~_magic~);};,Padlock,NORMAL|NORMAL,11,ITEM,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mass Grimoire,Activate equipment that|can take a single <slotdoubles>,1,function checkslots(eq|val){var sl = eq.getslots();  if(sl.length > 1){return false;}; var s = sl[0]; if(s == ~NORMAL~){return true;}; if(s == ~EVEN~ && val %2 == 0){return true;}; if(s == ~ODD~ && val %2 == 1){return true;}; if(s == ~REQUIRE~+val){return true;}; for(x in 1...val+1){if(s == ~MIN~+x){return true;};}; for(x in val...7){if(s == ~MAX~+x){return true;};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1] && val >= r[0] && val <= r[1]){return true;} }; return false;}; var goodeq = []; var counts = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~ && !eq.needsdoubles){if(eq.countdown > 0){if(eq.remainingcountdown <= d){counts.push(eq);};}else{if(checkslots(eq|d)){goodeq.push(eq);};};};}; var del = 0; if(goodeq.length > 0){for(eq in goodeq){givedice(d); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1); eq.doequipmentaction(self|target|eq.castdirection|eq.assigneddice|del); del+=0.1;};}; if(counts.length > 0){for(eq in counts){givedice(d); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1);};}; sfx(~_thinghappens~);,Magic Dice,DOUBLES|DOUBLES,,ITEM,PURPLE,change_power,change_power,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,2,,,,,,,,,,
Mass Grimoire_upgraded,Activate items that take <slotdoubles>|,1,function checkslots(eq|val){var sl = eq.getslots();  if(sl.length > 1){return false;}; var s = sl[0]; if(s == ~NORMAL~){return true;}; if(s == ~EVEN~ && val %2 == 0){return true;}; if(s == ~ODD~ && val %2 == 1){return true;}; if(s == ~REQUIRE~+val){return true;}; for(x in 1...val+1){if(s == ~MIN~+x){return true;};}; for(x in val...7){if(s == ~MAX~+x){return true;};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1] && val >= r[0] && val <= r[1]){return true;} }; return false;}; var goodeq = []; var counts = []; for(eq in self.equipment){if(eq.ready && eq.skillcard == ~~ && !eq.needsdoubles){if(eq.countdown > 0){if(eq.remainingcountdown <= d){counts.push(eq);};}else{if(checkslots(eq|d)){goodeq.push(eq);};};};}; var del = 0; if(goodeq.length > 0){for(eq in goodeq){givedice(d); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1); eq.doequipmentaction(self|target|eq.castdirection|eq.assigneddice|del); del+=0.1;};}; if(counts.length > 0){for(eq in counts){givedice(d); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1);};}; sfx(~_thinghappens~);,Magic Dice,DOUBLES|DOUBLES,,ITEM,PURPLE,,,,none,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Mass Grimoire_downgraded,No effect,1,sfx(~_thinghappens~);,Magic Dice,DOUBLES|DOUBLES,,ITEM,PURPLE,,,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Essence Detonator,Invoke your essences[;]|consuming them,1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; var descs = [~Take [sword]4 damage~|~Receive [fire]1 burn~|~Receive [ice]1 freeze~|~Receive [shock]1 shock~|~Receive [weaken]1 weaken~|~Receive [poison]2 poison~|~Receive a bad status~]; var effs = [~attack(4); sfxdamage(null|3);~|~inflict(FIRE); sfx(\~_fire\~);~|~inflict(ICE); sfx(\~_ice\~);~|~inflict(SHOCK); sfx(\~_shock\~);~|~inflict(WEAKEN); sfx(\~_weaken\~);~|~inflict(POISON|2); sfx(\~_poison\~);~|~var stat = rand([\~curse\~|\~lock\~|\~stun\~]); if(stat == \~curse\~){inflict(CURSE); sfx(\~_curse\~);}; if(stat == \~lock\~){inflict(LOCK); sfx(\~_lock\~);}; if(stat == \~stun\~){inflict(\~mf_stun\~); sfx(\~_shock\~);  var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;};};~]; if(target.status.length > 0){var t = target.status.copy(); for(st in t){if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; for(st in 0...essences.length){if(getstatus(~essence_~+essences[st]) > 0){for(x in 0...getstatus(~essence_~+essences[st])){jinx(~Invocation~|descs[st].toLowerCase()|descs[st]|effs[st]|target|self|1|1); }; removestatus(~essence_~+essences[st]|ALL); };}; boostjinxcountdowns(target|1); }; sfx(~_thinghappens~); sfx(~_magic~);,,MAX3,,ITEM,PINK,change_power,change_power,stun,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Essence Detonator_upgraded,Invoke your essences[;]|consuming them,1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; var descs = [~Take [sword]4 damage~|~Receive [fire]1 burn~|~Receive [ice]1 freeze~|~Receive [shock]1 shock~|~Receive [weaken]1 weaken~|~Receive [poison]2 poison~|~Receive a bad status~]; var effs = [~attack(4); sfxdamage(null|3);~|~inflict(FIRE); sfx(\~_fire\~);~|~inflict(ICE); sfx(\~_ice\~);~|~inflict(SHOCK); sfx(\~_shock\~);~|~inflict(WEAKEN); sfx(\~_weaken\~);~|~inflict(POISON|2); sfx(\~_poison\~);~|~var stat = rand([\~curse\~|\~lock\~|\~stun\~]); if(stat == \~curse\~){inflict(CURSE); sfx(\~_curse\~);}; if(stat == \~lock\~){inflict(LOCK); sfx(\~_lock\~);}; if(stat == \~stun\~){inflict(\~mf_stun\~); sfx(\~_shock\~);  var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;};};~]; if(target.status.length > 0){var t = target.status.copy(); for(st in t){if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; for(st in 0...essences.length){if(getstatus(~essence_~+essences[st]) > 0){for(x in 0...getstatus(~essence_~+essences[st])){jinx(~Invocation~|descs[st].toLowerCase()|descs[st]|effs[st]|target|self|1|1); }; removestatus(~essence_~+essences[st]|ALL); };}; boostjinxcountdowns(target|1); }; sfx(~_thinghappens~); sfx(~_magic~);,,NORMAL,,ITEM,PINK,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Essence Detonator_downgraded,Invoke your essences[;]|consuming them,1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; var descs = [~Take [sword]4 damage~|~Receive [fire]1 burn~|~Receive [ice]1 freeze~|~Receive [shock]1 shock~|~Receive [weaken]1 weaken~|~Receive [poison]2 poison~|~Receive a bad status~]; var effs = [~attack(4); sfxdamage(null|3);~|~inflict(FIRE); sfx(\~_fire\~);~|~inflict(ICE); sfx(\~_ice\~);~|~inflict(SHOCK); sfx(\~_shock\~);~|~inflict(WEAKEN); sfx(\~_weaken\~);~|~inflict(POISON|2); sfx(\~_poison\~);~|~var stat = rand([\~curse\~|\~lock\~|\~stun\~]); if(stat == \~curse\~){inflict(CURSE); sfx(\~_curse\~);}; if(stat == \~lock\~){inflict(LOCK); sfx(\~_lock\~);}; if(stat == \~stun\~){inflict(\~mf_stun\~); sfx(\~_shock\~);  var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;};};~]; if(target.status.length > 0){var t = target.status.copy(); for(st in t){if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; for(st in 0...essences.length){if(getstatus(~essence_~+essences[st]) > 0){for(x in 0...getstatus(~essence_~+essences[st])){jinx(~Invocation~|descs[st].toLowerCase()|descs[st]|effs[st]|target|self|1|1); }; removestatus(~essence_~+essences[st]|ALL); };}; boostjinxcountdowns(target|1); }; sfx(~_thinghappens~); sfx(~_magic~);,,MAX2,,ITEM,PINK,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Essence Detonator?,Invoke your essences[;]|consuming them,1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; var descs = [~Take [sword]4 damage~|~Receive [fire]1 burn~|~Receive [ice]1 freeze~|~Receive [shock]1 shock~|~Receive [weaken]1 weaken~|~Receive [poison]2 poison~|~Receive a bad status~]; var effs = [~attack(4); sfxdamage(null|3);~|~inflict(FIRE); sfx(\~_fire\~);~|~inflict(ICE); sfx(\~_ice\~);~|~inflict(SHOCK); sfx(\~_shock\~);~|~inflict(WEAKEN); sfx(\~_weaken\~);~|~inflict(POISON|2); sfx(\~_poison\~);~|~var stat = rand([\~curse\~|\~lock\~|\~stun\~]); if(stat == \~curse\~){inflict(CURSE); sfx(\~_curse\~);}; if(stat == \~lock\~){inflict(LOCK); sfx(\~_lock\~);}; if(stat == \~stun\~){inflict(\~mf_stun\~); sfx(\~_shock\~);  var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;};};~]; if(target.status.length > 0){var t = target.status.copy(); for(st in t){if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; for(st in 0...essences.length){if(getstatus(~essence_~+essences[st]) > 0){for(x in 0...getstatus(~essence_~+essences[st])){jinx(~Invocation~|descs[st].toLowerCase()|descs[st]|effs[st]|target|self|1|1); }; removestatus(~essence_~+essences[st]|ALL); };}; boostjinxcountdowns(target|1); }; sfx(~_thinghappens~); sfx(~_magic~);,,MAX3,,ITEM,PINK,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Essence Detonator?_upgraded,Invoke your essences[;]|consuming them,1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; var descs = [~Take [sword]4 damage~|~Receive [fire]1 burn~|~Receive [ice]1 freeze~|~Receive [shock]1 shock~|~Receive [weaken]1 weaken~|~Receive [poison]2 poison~|~Receive a bad status~]; var effs = [~attack(4); sfxdamage(null|3);~|~inflict(FIRE); sfx(\~_fire\~);~|~inflict(ICE); sfx(\~_ice\~);~|~inflict(SHOCK); sfx(\~_shock\~);~|~inflict(WEAKEN); sfx(\~_weaken\~);~|~inflict(POISON|2); sfx(\~_poison\~);~|~var stat = rand([\~curse\~|\~lock\~|\~stun\~]); if(stat == \~curse\~){inflict(CURSE); sfx(\~_curse\~);}; if(stat == \~lock\~){inflict(LOCK); sfx(\~_lock\~);}; if(stat == \~stun\~){inflict(\~mf_stun\~); sfx(\~_shock\~);  var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;};};~]; if(target.status.length > 0){var t = target.status.copy(); for(st in t){if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; for(st in 0...essences.length){if(getstatus(~essence_~+essences[st]) > 0){for(x in 0...getstatus(~essence_~+essences[st])){jinx(~Invocation~|descs[st].toLowerCase()|descs[st]|effs[st]|target|self|1|1); }; removestatus(~essence_~+essences[st]|ALL); };}; boostjinxcountdowns(target|1); }; sfx(~_thinghappens~); sfx(~_magic~);,,NORMAL,,ITEM,PINK,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Essence Detonator?_downgraded,Invoke your essences[;]|consuming them,1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; var descs = [~Take [sword]4 damage~|~Receive [fire]1 burn~|~Receive [ice]1 freeze~|~Receive [shock]1 shock~|~Receive [weaken]1 weaken~|~Receive [poison]2 poison~|~Receive a bad status~]; var effs = [~attack(4); sfxdamage(null|3);~|~inflict(FIRE); sfx(\~_fire\~);~|~inflict(ICE); sfx(\~_ice\~);~|~inflict(SHOCK); sfx(\~_shock\~);~|~inflict(WEAKEN); sfx(\~_weaken\~);~|~inflict(POISON|2); sfx(\~_poison\~);~|~var stat = rand([\~curse\~|\~lock\~|\~stun\~]); if(stat == \~curse\~){inflict(CURSE); sfx(\~_curse\~);}; if(stat == \~lock\~){inflict(LOCK); sfx(\~_lock\~);}; if(stat == \~stun\~){inflict(\~mf_stun\~); sfx(\~_shock\~);  var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;};};~]; if(target.status.length > 0){var t = target.status.copy(); for(st in t){if (st.type.split(~_~)[0] == ~jinx~){st.add(1);}; }; for(st in 0...essences.length){if(getstatus(~essence_~+essences[st]) > 0){for(x in 0...getstatus(~essence_~+essences[st])){jinx(~Invocation~|descs[st].toLowerCase()|descs[st]|effs[st]|target|self|1|1); }; removestatus(~essence_~+essences[st]|ALL); };}; boostjinxcountdowns(target|1); }; sfx(~_thinghappens~); sfx(~_magic~);,,MAX2,,ITEM,PINK,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Basic Essence,Inflict [sword]1 base essence|(Invoke: take [sword]4 damage),1,inflict(~essence_base~|1); sfx(~_thinghappens~);,,NORMAL,,WEAPON,GRAY,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Basic Essence_upgraded,Inflict [sword]2 base essence|(Invoke: take [sword]4 damage),1,inflict(~essence_base~|2); sfx(~_thinghappens~);,,NORMAL,,WEAPON,GRAY,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Basic Essence_downgraded,Inflict [sword]1 base essence|(Invoke: take [sword]4 damage),1,inflict(~essence_base~|1); sfx(~_thinghappens~);,,EVEN,,WEAPON,GRAY,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flame Essence,Inflict [fire]2 flame essence|(Invoke: receive [fire]1 burn),1,inflict(~essence_fire~|2); sfx(~_thinghappens~);,,EVEN,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flame Essence_upgraded,Inflict [fire]3 flame essence|(Invoke: receive [fire]1 burn),1,inflict(~essence_fire~|3); sfx(~_thinghappens~);,,EVEN,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Flame Essence_downgraded,Inflict [fire]1 flame essence|(Invoke: receive [fire]1 burn),1,inflict(~essence_fire~|1); sfx(~_thinghappens~);,,EVEN,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Frost Essence,Inflict [ice]1 frost essence|(Invoke: receive [ice]1 freeze),1,inflict(~essence_ice~); sfx(~_thinghappens~);,,ODD,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Frost Essence_upgraded,Inflict [ice]1 frost essence|(Invoke: receive [ice]1 freeze),1,inflict(~essence_ice~); sfx(~_thinghappens~);,,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Frost Essence_downgraded,Inflict [ice]1 frost essence|(Invoke: receive [ice]1 freeze),1,inflict(~essence_ice~); sfx(~_thinghappens~);,,REQUIRE5,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Air Essence,Inflict [shock]2 air essence|(Invoke: receive [shock]1 shock),1,inflict(~essence_air~|2); sfx(~_thinghappens~);,,EVEN,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Air Essence_upgraded,Inflict [shock]3 air essence|(Invoke: receive [shock]1 shock),1,inflict(~essence_air~|3); sfx(~_thinghappens~);,,EVEN,,WEAPON,YELLOW,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Air Essence_downgraded,Inflict [shock]1 air essence|(Invoke: receive [shock]1 shock),1,inflict(~essence_air~); sfx(~_thinghappens~);,,EVEN,,WEAPON,YELLOW,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Earth Essence,Inflict [weaken]1 earth essence|(Invoke: receive [weaken]1 weaken),1,inflict(~essence_earth~); sfx(~_thinghappens~);,,EVEN,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Earth Essence_upgraded,Inflict [weaken]1 earth essence|(Invoke: receive [weaken]1 weaken),1,inflict(~essence_earth~); sfx(~_thinghappens~);,,NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Earth Essence_downgraded,Inflict [weaken]1 earth essence|(Invoke: receive [weaken]1 weaken),1,inflict(~essence_earth~); sfx(~_thinghappens~);,,REQUIRE5,,WEAPON,ORANGE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Dark Essence,Inflict [curse]1 dark essence|(Invoke: receive a bad status),1,inflict(~essence_dark~); sfx(~_thinghappens~);,,MIN4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Dark Essence_upgraded,Inflict [curse]1 dark essence|(Invoke: receive a bad status),1,inflict(~essence_dark~); sfx(~_thinghappens~);,,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Dark Essence_downgraded,Inflict [curse]1 dark essence|(Invoke: receive a bad status),1,inflict(~essence_dark~); sfx(~_thinghappens~);,,MIN5,,WEAPON,PURPLE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Chromatic Essence,Inflict 2x random essence:|[sword] [fire] [ice] [shock] [weaken] [poison] [curse],1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; for(x in [0|1]){inflict(~essence_~+rand(essences)); }; sfx(~_thinghappens~);,,COUNTDOWN,5,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Chromatic Essence_upgraded,Inflict 3x random essence:|[sword] [fire] [ice] [shock] [weaken] [poison] [curse],1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; for(x in [0|1|2]){inflict(~essence_~+rand(essences)); }; sfx(~_thinghappens~);,,COUNTDOWN,5,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Chromatic Essence_downgraded,Inflict a random essence:|[sword] [fire] [ice] [shock] [weaken] [poison] [curse],1,var essences = [~base~|~fire~|~ice~|~shock~|~weaken~|~poison~|~dark~]; for(x in [0]){inflict(~essence_~+rand(essences)); }; sfx(~_thinghappens~);,,COUNTDOWN,5,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Incapacitate,Inflict [shock]1 stun,1,var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;}; inflict(~mf_stun~); sfx(~_shock~);,Jackhammer,REQUIRE4,,WEAPON,YELLOW,change_power,change_power,stun,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Incapacitate_upgraded,Inflict [shock]1 stun,1,var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;}; inflict(~mf_stun~); sfx(~_shock~);,Jackhammer,EVEN,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Incapacitate_downgraded,Inflict [shock]1 stun,1,var goodeq = []; for(eq in target.equipment){if(eq.availablenextturn){goodeq.push(eq);};}; if(goodeq.length > 0){var r = rand(goodeq); r.availablenextturn = false;}; inflict(~mf_stun~); sfx(~_shock~);,Jackhammer,REQUIRE4|REQUIRE4,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Incapacitate?,Inflict [shock]1 stun,1,target.bonusdice-=1; inflict(~alternate_mf_stun~); sfx(~_shock~);,Jackhammer,REQUIRE4,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Incapacitate?_upgraded,Inflict [shock]1 stun,1,target.bonusdice-=1; inflict(~alternate_mf_stun~); sfx(~_shock~);,Jackhammer,EVEN,,WEAPON,YELLOW,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Incapacitate?_downgraded,Inflict [shock]1 stun,1,target.bonusdice-=1; inflict(~alternate_mf_stun~); sfx(~_shock~);,Jackhammer,REQUIRE4|REQUIRE4,,WEAPON,YELLOW,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Dark Bargain,Lose 1 dice this fight[;] but|get 3 extra dice next turn,1,self.extradice-=1; for(x in [0|0|0]){inflictself(~stash~+rand([1|2|3|4|5|6]));};  inflictself(~illuminate~); sfx(~magic_gaindice~);,Infinity Mirror,COUNTDOWN,8,MAGIC,PURPLE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Dark Bargain_upgraded,Lose 1 dice this fight[;] but|get 4 extra dice next turn,1,self.extradice-=1; for(x in [0|0|0|0]){inflictself(~stash~+rand([1|2|3|4|5|6]));};  inflictself(~illuminate~); sfx(~magic_gaindice~);,Infinity Mirror,COUNTDOWN,8,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dark Bargain_downgraded,Lose 1 dice this fight[;] but|get 2 extra dice next turn,1,self.extradice-=1; for(x in [0|0]){inflictself(~stash~+rand([1|2|3|4|5|6]));}; inflictself(~illuminate~); sfx(~magic_gaindice~);,Infinity Mirror,COUNTDOWN,8,MAGIC,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recycling Spell,Next item has +1|use this turn,1,inflictself(REEQUIPNEXT); sfx(~_recycle~);,Efficiency,MIN5,,WEAPON,GREEN,change_power,change_power,reequipnext,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Recycling Spell_upgraded,Next item has +1|use this turn,1,inflictself(REEQUIPNEXT); sfx(~_recycle~);,Efficiency,MIN3,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recycling Spell_downgraded,Next item has +1|use this turn,1,inflictself(REEQUIPNEXT); sfx(~_recycle~);,Efficiency,REQUIRE6,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recycling Spell?,Keep the next dice you|use[;] and return this one,1,inflictself(REEQUIPNEXT); sfx(~_recycle~); givedice(d);,Efficiency,MIN5,,WEAPON,GREEN,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Recycling Spell?_upgraded,Keep the next dice you|use[;] and return this one,1,inflictself(REEQUIPNEXT); sfx(~_recycle~); givedice(d);,Efficiency,MIN3,,WEAPON,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Recycling Spell?_downgraded,Keep the next dice you|use[;] and return this one,1,inflictself(REEQUIPNEXT); sfx(~_recycle~); givedice(actualdice[rand([0|1])].basevalue);,Efficiency,REQUIRE6,,WEAPON,GREEN,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Umbrella,Gain [reduce]1 reduce|Return the dice,1,inflictself(REDUCE); sfx(~_shield~); givedice([actualdice[0].basevalue|actualdice[1].basevalue]);,Pillow Fort,DOUBLES|DOUBLES,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Umbrella_upgraded,Gain [reduce]1 reduce|Return the dice,1,inflictself(REDUCE); sfx(~_shield~); givedice([actualdice[0].basevalue|actualdice[1].basevalue]);,Pillow Fort,NORMAL|NORMAL,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Umbrella_downgraded,Gain [reduce]1 reduce,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,DOUBLES|DOUBLES,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dead Branch,Your [gray]Once per Battle[] items|are replaced with different|items after being used,1,,,,,MAGIC,PURPLE,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,for(eq in self.equipment){if(eq.onceperbattle){eq.script = eq.script.split(~/*DEAD BRANCH ONCE*/~)[0]; eq.script = eq.script+~/*DEAD BRANCH ONCE*/ e.create(rand(getparticularequipment([\~small\~]))); e.animate(\~curse\~); e.ready = false; e.x = -9999; e.y = -9999; e.scriptaftercombat = e.scriptaftercombat+\~/*DEAD BRANCH BACK*/ e.create(\\\~~+eq.name+~\\\~); /*DEAD BRANCH BACK*/ \~; /*DEAD BRANCH ONCE*/~;  };};,,,,,,,
Dead Branch_upgraded,Your [gray]Once per Battle[] items|are replaced with different|upgraded items after being used,1,,,,,MAGIC,PURPLE,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Dead Branch_downgraded,No effect,1,,,,,MAGIC,PURPLE,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Philosopher's Stone,Deal [sword]<d6> damage|Gain [shield]2 shield,1,attack(d); inflictself(SHIELD|2); sfxdamage(target|d); sfx(~_magic~); sfx(~_shield~|~~|0.2);,Barricade,MAX4,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Philosopher's Stone_upgraded,Deal [sword]<d6> damage|Gain [shield]2 shield,1,attack(d); inflictself(SHIELD|2); sfxdamage(target|d); sfx(~_magic~); sfx(~_shield~|~~|0.2);,Barricade,NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Philosopher's Stone_downgraded,Deal [sword]<d6> damage|Gain [shield]2 shield,1,attack(d); inflictself(SHIELD|2); sfxdamage(target|d); sfx(~_magic~); sfx(~_shield~|~~|0.2);,Barricade,MAX2,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magnum Opus,Deal [sword]<d6> damage|Gain [shield]2 shield,1,attack(d); inflictself(SHIELD|2); sfxdamage(target|d); sfx(~_magic~); sfx(~_shield~|~~|0.2);,Barricade,NORMAL|NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Magnum Opus_upgraded,Deal [sword]<d6> damage|Gain [shield]4 shield,1,attack(d); inflictself(SHIELD|4); sfxdamage(target|d); sfx(~_magic~); sfx(~_shield~|~~|0.2);,Barricade,NORMAL|NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Magnum Opus_downgraded,Deal [sword]<d6> damage|Gain [shield]2 shield,1,attack(d); inflictself(SHIELD|2); sfxdamage(target|d); sfx(~_magic~); sfx(~_shield~|~~|0.2);,Barricade,MAX3|MAX3,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Prestidigitate,Deal [sword]<d6> damage|Roll an extra dice next turn,1,attack(d); sfxdamage(target|d); sfx(~_magic~); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lantern~); sfx(~magic_gaindice~);,Magic Lantern,MIN4,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Prestidigitate_upgraded,Deal [sword]<d6> damage|Roll an extra dice next turn,1,attack(d); sfxdamage(target|d); sfx(~_magic~); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lantern~); sfx(~magic_gaindice~);,Magic Lantern,NORMAL,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Prestidigitate_downgraded,Deal [sword]<d6> damage|Roll an extra dice next turn,1,attack(d); sfxdamage(target|d); sfx(~_magic~); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lantern~); sfx(~magic_gaindice~);,Magic Lantern,MIN5,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Conjurate,Deal [sword]<d6> damage|Roll an extra dice next turn,1,attack(d); sfxdamage(target|d); sfx(~_magic~); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lantern~); sfx(~magic_gaindice~);,Magic Lantern,NORMAL|NORMAL,,WEAPON,YELLOW,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Conjurate_upgraded,Deal [sword]<d6> damage|Roll 2 extra dice next turn,1,attack(d); sfxdamage(target|d); sfx(~_magic~); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~stash~+rand([1|2|3|4|5|6]));  inflictself(~lantern~); sfx(~magic_gaindice~);,Magic Lantern,NORMAL|NORMAL,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Conjurate_downgraded,Deal [sword]<d6> damage|Roll an extra dice next turn,1,attack(d); sfxdamage(target|d); sfx(~_magic~); inflictself(~stash~+rand([1|2|3|4|5|6])); inflictself(~lantern~); sfx(~magic_gaindice~);,Magic Lantern,MAX3|MAX3,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Autumn Equinox,Replace ALL your spells with|new ones of the same colour,1,if(e.assigneddice.length > 0){for (mydice in e.assigneddice) mydice.veryfastconsumedice();}; var spelllist = Spellbook.getspelllist(); for(x in 1...7){if(!Spellbook.isempty(x)){var spellname = Spellbook.spellname(x); e.create(spellname); var colour = e.equipmentcol; while(e.name == spellname # e.equipmentcol != colour){e.create(rand(spelllist));  }; Spellbook.changespellflash(x|e.name);};}; sfx(~_thinghappens~); e.create(~Autumn Equinox~); e.ready=false; e.y= -9999;,,DOUBLES|DOUBLES,,MAGIC,ORANGE,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,1,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Autumn Equinox_upgraded,Replace ALL your spells with|new ones of the same colour,1,if(e.assigneddice.length > 0){for (mydice in e.assigneddice) mydice.veryfastconsumedice();}; var spelllist = Spellbook.getspelllist(); for(x in 1...7){if(!Spellbook.isempty(x)){var spellname = Spellbook.spellname(x); e.create(spellname); var colour = e.equipmentcol; while(e.name == spellname # e.equipmentcol != colour){e.create(rand(spelllist));  }; Spellbook.changespellflash(x|e.name);};}; sfx(~_thinghappens~); e.create(~Autumn Equinox~|true); e.ready=false; e.y= -9999;,,NORMAL|NORMAL,,MAGIC,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Autumn Equinox_downgraded,Replace ALL your spells with|new ones of the same colour,1,if(e.assigneddice.length > 0){for (mydice in e.assigneddice) mydice.veryfastconsumedice();}; var spelllist = Spellbook.getspelllist(); for(x in 1...7){if(!Spellbook.isempty(x)){var spellname = Spellbook.spellname(x); e.create(spellname); var colour = e.equipmentcol; while(e.name == spellname # e.equipmentcol != colour){e.create(rand(spelllist));  }; Spellbook.changespellflash(x|e.name);};}; sfx(~_thinghappens~); e.create(~Autumn Equinox~); e.ready=false; e.y= -9999;,,REQUIRE2|REQUIRE2,,MAGIC,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Prismatic Power,If all spells in your Spellbook|have different colours[;] [sword]10,1,var cols = []; var flag = true; for(x in 1...7){if(Spellbook.isempty(x)){flag = false; }else{e.create(Spellbook.spellname(x)); if(cols.indexOf(e.equipmentcol) == -1){cols.push(e.equipmentcol);}else{flag=false;};};}; if(flag){attack(10); sfxdamage(target|10); sfx(~_magic~);}else{target.textparticle(~No effect!~);};,,COUNTDOWN,6,MAGIC,PINK,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,1,,,,,,,,,,
Prismatic Power_upgraded,If all spells in your Spellbook|have different colours[;] [sword]14,1,var cols = []; var flag = true; for(x in 1...7){if(Spellbook.isempty(x)){flag = false; }else{e.create(Spellbook.spellname(x)); if(cols.indexOf(e.equipmentcol) == -1){cols.push(e.equipmentcol);}else{flag=false;};};}; if(flag){attack(14); sfxdamage(target|14); sfx(~_magic~);}else{target.textparticle(~No effect!~);};,,COUNTDOWN,6,MAGIC,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Prismatic Power_downgraded,If all spells in your Spellbook|have different colours[;] [sword]5,1,var cols = []; var flag = true; for(x in 1...7){if(Spellbook.isempty(x)){flag = false; }else{e.create(Spellbook.spellname(x)); if(cols.indexOf(e.equipmentcol) == -1){cols.push(e.equipmentcol);}else{flag=false;};};}; if(flag){attack(5); sfxdamage(target|5); sfx(~_magic~);}else{target.textparticle(~No effect!~);};,,COUNTDOWN,6,MAGIC,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Silhouette,Deal [sword]<d6> damage|Inflict [blind]1 blind,1,attack(d); sfxdamage(target|d); inflict(BLIND); sfx(~_blind~);,Smoke Cloud,MIN4|FREE2,,MAGIC,GRAY,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Silhouette_upgraded,Deal [sword]<d6> damage|Inflict [blind]1 blind,1,attack(d); sfxdamage(target|d); inflict(BLIND); sfx(~_blind~);,Smoke Cloud,NORMAL|FREE2,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Silhouette_downgraded,Deal [sword]<d6> damage|Inflict [blind]1 blind,1,attack(d); sfxdamage(target|d); inflict(BLIND); sfx(~_blind~);,Smoke Cloud,MIN4,,MAGIC,GRAY,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bolas,[sword]4 dmg[;] return the dice if|you have another Bolas,1,var flag = false; if(self.name == ~Jester~){for(x in 0...4){var card = Deck.getcard(x); if(card != null && card.equipment.rawname == ~Bolas~){flag = true;};};}else{for(eq in self.equipment){if(eq.availablethisturn && eq.ready && eq.rawname == ~Bolas~){flag = true;};};}; attack(4); sfxdamage(target|4); if(flag){givedice(d);};,Pea Gun,NORMAL,,ITEM,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,var dicearray = []; for(x in 0...snap){dicearray.push(6);}; givedice(dicearray);,
Bolas_upgraded,[sword]6 dmg[;] return the dice if|you have another Bolas,1,var flag = false; if(self.name == ~Jester~){for(x in 0...4){var card = Deck.getcard(x); if(card != null && card.equipment.rawname == ~Bolas~){flag = true;};};}else{for(eq in self.equipment){if(eq.availablethisturn && eq.ready && eq.rawname == ~Bolas~){flag = true;};};}; attack(6); sfxdamage(target|6); if(flag){givedice(d);};,Pea Gun,NORMAL,,ITEM,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bolas_downgraded,[sword]4 dmg[;] return the dice if|you have another Bolas,1,var flag = false; if(self.name == ~Jester~){for(x in 0...4){var card = Deck.getcard(x); if(card != null && card.equipment.rawname == ~Bolas~){flag = true;};};}else{for(eq in self.equipment){if(eq.availablethisturn && eq.ready && eq.rawname == ~Bolas~){flag = true;};};}; attack(4); sfxdamage(target|4); if(flag){givedice(d);};,Pea Gun,MIN4,,ITEM,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Turnstile,Deal [sword]4 damage|Reduce countdowns by <d6>,1,attack(4); sfxdamage(target|4); boostcountdowns(d);,Life Leech,MAX4,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Turnstile_upgraded,Deal [sword]4 damage|Reduce countdowns by <d6>,1,attack(4); sfxdamage(target|4); boostcountdowns(d);,Life Leech,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Turnstile_downgraded,Deal [sword]4 damage|Reduce countdowns by <d6>,1,attack(4); sfxdamage(target|4); boostcountdowns(d);,Life Leech,MAX2,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Mana Cannon,Deal [sword]4 damage|(Cost [mana]1: re-equip this),1,attack(4); sfxdamage(target|4); sfx(~_magic~);,,COUNTDOWN,4,MAGIC,YELLOW,change_power,change_power,,,-1,NO,NO,YES,NO,NO,NO,NO,YES,1,,,,,,,,if(getstatusself(MANA) >= 1){removestatusself(MANA|1); sfx(~_mana~);}else{e.usesleft = 0;};,,
Mana Cannon_upgraded,Deal [sword]7 damage|(Cost [mana]1: re-equip this),1,attack(7); sfxdamage(target|7); sfx(~_magic~);,,COUNTDOWN,4,MAGIC,YELLOW,,,,,-1,NO,NO,YES,NO,NO,NO,NO,YES,,,,,,,,,if(getstatusself(MANA) >= 1){removestatusself(MANA|1); sfx(~_mana~);}else{e.usesleft = 0;};,,
Mana Cannon_downgraded,Deal [sword]2 damage|(Cost [mana]1: re-equip this),1,attack(2); sfxdamage(target|2); sfx(~_magic~);,,COUNTDOWN,4,MAGIC,YELLOW,,,,,-1,NO,NO,YES,NO,NO,NO,NO,YES,,,,,,,,,if(getstatusself(MANA) >= 1){removestatusself(MANA|1); sfx(~_mana~);}else{e.usesleft = 0;};,,
Plague Stave,Deal [sword]6 damage|Inflict [poison]2 poison,2,attack(6); sfxdamage(target|6); sfx(~_magic~); inflict(POISON|2); sfx(~_poison~);,Goop Gun,COUNTDOWN,8,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Plague Stave_upgraded,Deal [sword]8 damage|Inflict [poison]2 poison,2,attack(8); sfxdamage(target|8); sfx(~_magic~); inflict(POISON|2); sfx(~_poison~);,Goop Gun,COUNTDOWN,8,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Plague Stave_downgraded,Deal [sword]6 damage,2,attack(6); sfxdamage(target|6); sfx(~_magic~);,Goop Gun,COUNTDOWN,8,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Asklepios,Deal [sword]6 damage|Restore [heal]3 health,2,attack(6); sfxdamage(target|6); sfx(~_magic~); attackself(-3); sfx(~_heal~|~~|0.2);,Regenerate,COUNTDOWN,8,MAGIC,GREEN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Asklepios_upgraded,Deal [sword]8 damage|Restore [heal]3 health,2,attack(8); sfxdamage(target|8); sfx(~_magic~); attackself(-3); sfx(~_heal~|~~|0.2);,Regenerate,COUNTDOWN,8,MAGIC,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Asklepios_downgraded,Deal [sword]3 damage|Restore [heal]3 health,2,attack(3); sfxdamage(target|3); sfx(~_magic~); attackself(-3); sfx(~_heal~|~~|0.2);,Regenerate,COUNTDOWN,8,MAGIC,GREEN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Starstaff,Deal [sword]6 damage|Inflict a random status,2,attack(6); sfxdamage(target|6); var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Stardust,COUNTDOWN,8,MAGIC,PINK,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starstaff_upgraded,Deal [sword]6 damage|Inflict 2x random status,2,attack(6); sfxdamage(target|6); var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus|2); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);,Stardust,COUNTDOWN,8,MAGIC,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starstaff_downgraded,Deal [sword]6 damage,2,attack(6); sfxdamage(target|6); ,Stardust,COUNTDOWN,8,MAGIC,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Plug & Play,Use all items which have|only Needs X slots,1,var goodslots = []; var freeslots = []; for(i in 0...6){ goodslots.push(~REQUIRE~+(i+1)); freeslots.push(~FREE~+(i+1)); }; for(eq in self.equipment){ trace(eq.name); if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; var targets = []; trace(eq.slots); for(s in eq.slots){ if(goodslots.indexOf(s) == -1 && freeslots.indexOf(s) == -1){ good = false; break; }; targets.push(goodslots.indexOf(s) + 1); }; if(good){ for(s in 0...eq.slots.length){ if(freeslots.indexOf(eq.slots[s]) == -1){ givedice(targets[s]); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1); }; }; eq.doequipmentaction(self[;]target[;]eq.castdirection[;]eq.assigneddice[;]0); }; }; sfx(~_magic~);,Reversal,NORMAL,,ITEM,PINK,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Plug & Play_upgraded,Use all Needs X only items|Return the dice,1,var goodslots = []; var freeslots = []; for(i in 0...6){ goodslots.push(~REQUIRE~+(i+1)); freeslots.push(~FREE~+(i+1)); }; for(eq in self.equipment){ trace(eq.name); if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; var targets = []; trace(eq.slots); for(s in eq.slots){ if(goodslots.indexOf(s) == -1 && freeslots.indexOf(s) == -1){ good = false; break; }; targets.push(goodslots.indexOf(s) + 1); }; if(good){ for(s in 0...eq.slots.length){ if(freeslots.indexOf(eq.slots[s]) == -1){ givedice(targets[s]); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1); }; }; eq.doequipmentaction(self[;]target[;]eq.castdirection[;]eq.assigneddice[;]0); }; }; givedice(d); sfx(~_magic~);,Reversal,NORMAL,,ITEM,PINK,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Plug & Play_downgraded,No effect,1,sfx(~_magic~);,Reversal,NORMAL,,ITEM,PINK,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Magic Wand,Use all items which have|only Needs X slots,1,var goodslots = []; var freeslots = []; for(i in 0...6){ goodslots.push(~REQUIRE~+(i+1)); freeslots.push(~FREE~+(i+1)); }; var eqlist = []; if(self.name == ~jester~){eqlist = [for(x in 0...4) if(Deck.getcard(x) != null) x.equipment];}else{eqlist=self.equipment.copy();}; for(eq in eqlist){ if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; var targets = []; for(s in eq.slots){ if(goodslots.indexOf(s) == -1 && freeslots.indexOf(s) == -1){ good = false; break; }; targets.push(goodslots.indexOf(s) + 1); }; if(good){ for(s in 0...eq.slots.length){ if(freeslots.indexOf(eq.slots[s]) == -1){ givedice(targets[s]); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1); }; }; eq.doequipmentaction(self[;]target[;]eq.castdirection[;]eq.assigneddice[;]-0.3[;]true); }; }; sfx(~_magic~);,Reversal,EVEN,,ITEM,PINK,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Magic Wand_upgraded,Use all items which have|only Needs X slots,1,var goodslots = []; var freeslots = []; for(i in 0...6){ goodslots.push(~REQUIRE~+(i+1)); freeslots.push(~FREE~+(i+1)); }; var eqlist = []; if(self.name == ~jester~){eqlist = [for(x in 0...4) if(Deck.getcard(x) != null) x.equipment];}else{eqlist=self.equipment.copy();}; for(eq in eqlist){ if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; var targets = []; for(s in eq.slots){ if(goodslots.indexOf(s) == -1 && freeslots.indexOf(s) == -1){ good = false; break; }; targets.push(goodslots.indexOf(s) + 1); }; if(good){ for(s in 0...eq.slots.length){ if(freeslots.indexOf(eq.slots[s]) == -1){ givedice(targets[s]); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1); }; }; eq.doequipmentaction(self[;]target[;]eq.castdirection[;]eq.assigneddice[;]-0.3[;]true); }; }; sfx(~_magic~);,Reversal,NORMAL,,ITEM,PINK,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Magic Wand_downgraded,Use all items which have|only Needs X slots,1,var goodslots = []; var freeslots = []; for(i in 0...6){ goodslots.push(~REQUIRE~+(i+1)); freeslots.push(~FREE~+(i+1)); }; var eqlist = []; if(self.name == ~jester~){eqlist = [for(x in 0...4) if(Deck.getcard(x) != null) x.equipment];}else{eqlist=self.equipment.copy();}; for(eq in eqlist){ if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; var targets = []; for(s in eq.slots){ if(goodslots.indexOf(s) == -1 && freeslots.indexOf(s) == -1){ good = false; break; }; targets.push(goodslots.indexOf(s) + 1); }; if(good){ for(s in 0...eq.slots.length){ if(freeslots.indexOf(eq.slots[s]) == -1){ givedice(targets[s]); eq.assigndice(self.dicepool[self.dicepool.length-1][;]-1); }; }; eq.doequipmentaction(self[;]target[;]eq.castdirection[;]eq.assigneddice[;]-0.3[;]true); }; }; sfx(~_magic~);,Reversal,EVEN|EVEN,,ITEM,PINK,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Threeblade,Deal [sword]3 damage|Return the dice,1,attack(3); sfxdamage(target|3); var dice = []; for(ac in actualdice){dice.push(ac.basevalue);}; givedice(dice);,Magic Six,REQUIRE3,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Threeblade_upgraded,Deal [sword]6 damage|Return the dice,1,attack(6); sfxdamage(target|6); var dice = []; for(ac in actualdice){dice.push(ac.basevalue);}; givedice(dice);,Magic Six,REQUIRE3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Threeblade_downgraded,Deal [sword]3 damage,1,attack(3); sfxdamage(target|3); ,Magic Six,REQUIRE3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Gem of Dice,Roll an extra dice at|the start of each turn,1,sfx(~_thinghappens~);,Magic Dice,,,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,2,,,,givedice(); e.animate(~flashandshake~);,,,,,,
Gem of Dice_upgraded,Roll 2 extra dice at|the start of each turn,1,sfx(~_thinghappens~);,Magic Dice,,,MAGIC,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,var t = []; for(x in [0|0]){t.push(rand([1|2|3|4|5|6]));}; givedice(t); e.animate(~flashandshake~);,,,,,,
Gem of Dice_downgraded,Roll an extra dice at|the start of each turn,1,sfx(~_thinghappens~);,Magic Dice,,,MAGIC,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,givedice(); e.animate(~flashandshake~);,,,,,,
Arcane Missiles,Deal [sword]4 damage|On doubles[;] deal [sword]4 more,1,var dmg = 4; if(actualdice[0].basevalue == actualdice[1].basevalue){dmg = 8;}; attack(dmg); sfxdamage(target|dmg); sfx(~_magic~);,Plasma Gun,MIN2|MIN2,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Arcane Missiles_upgraded,Deal [sword]6 damage|On doubles[;] deal [sword]6 more,1,var dmg = 6; if(actualdice[0].basevalue == actualdice[1].basevalue){dmg = 12;}; attack(dmg); sfxdamage(target|dmg); sfx(~_magic~);,Plasma Gun,MIN2|MIN2,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Arcane Missiles_downgraded,Deal [sword]4 damage|On doubles[;] deal [sword]4 more,1,var dmg = 4; if(actualdice[0].basevalue == actualdice[1].basevalue){dmg = 8;}; attack(dmg); sfxdamage(target|dmg); sfx(~_magic~);,Plasma Gun,MIN4|MIN4,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Glistening Bauble,Deal [sword]3 damage for each|extra dice you get this fight,1,var amount = 3; var dmg = self.extradice*amount; if(dmg > 0){attack(dmg); sfxdamage(target|dmg); sfx(~_magic~);};,Infinity Mirror,EVEN,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Glistening Bauble_upgraded,Deal [sword]3 damage for each|extra dice you get this fight,1,var amount = 3; var dmg = self.extradice*amount; if(dmg > 0){attack(dmg); sfxdamage(target|dmg); sfx(~_magic~);};,Infinity Mirror,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Glistening Bauble_downgraded,Deal [sword]2 damage for each|extra dice you get this fight,1,var amount = 2; var dmg = self.extradice*amount; if(dmg > 0){attack(dmg); sfxdamage(target|dmg); sfx(~_magic~);};,Infinity Mirror,EVEN,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood Pact,Lose [heart]2 health[;] then|drain [heart]<d6> health,1,pierceattackself(2); drain(d); sfx(~_drain~); sfx(~_magic~);,Blood Sip,MAX4,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blood Pact_upgraded,Lose [heart]3 health[;] then|drain [heart]<d6> health,1,pierceattackself(3); drain(d); sfx(~_drain~); sfx(~_magic~);,Blood Sip,MAX4|FREE1,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood Pact_downgraded,Lose [heart]2 health[;] then|drain [heart]<d6> health,1,pierceattackself(2); drain(d); sfx(~_drain~); sfx(~_magic~);,Blood Sip,MAX2,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blunderbuss,Deal [sword]2 damage|Split both dice in 2,2,attack(2); sfxdamage(target|2); var ta = []; for(x in [0|1]){ta = ta.concat(split(actualdice[x].basevalue));}; givedice(ta);,Magic Lockpick,EVEN|EVEN,,WEAPON,RED,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blunderbuss_upgraded,Deal [sword]2 damage|Split both dice in 2,2,attack(2); sfxdamage(target|2); var ta = []; for(x in [0|1]){ta = ta.concat(split(actualdice[x].basevalue));}; givedice(ta);,Magic Lockpick,MIN2|MIN2,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blunderbuss_downgraded,Split both dice in 2,2,var ta = []; for(x in [0|1]){ta = ta.concat(split(actualdice[x].basevalue));}; givedice(ta);,Magic Lockpick,EVEN|EVEN,,WEAPON,RED,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Vortex,Consume your other <d6>s|Deal [sword]3 per dice consumed,1,var damage = 3; var c = 0; var total = 0; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue == d){ mydice.animate(~disappear~|c); c+=0.05; total+=1; };};}; attack(total*damage); sfxdamage(target|total*damage); sfx(~_magic~);,Plasma Gun,NORMAL,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Vortex_upgraded,Consume your other <d6>s|Deal [sword]5 per dice consumed,1,var damage = 5; var c = 0; var total = 0; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue == d){ mydice.animate(~disappear~|c); c+=0.05; total+=1; };};}; attack(total*damage); sfxdamage(target|total*damage); sfx(~_magic~);,Plasma Gun,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Vortex_downgraded,Consume your other <d6>s|Deal [sword]2 per dice consumed,1,var damage = 2; var c = 0; var total = 0; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue == d){ mydice.animate(~disappear~|c); c+=0.05; total+=1; };};}; attack(total*damage); sfxdamage(target|total*damage); sfx(~_magic~);,Plasma Gun,NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Power Creeper,Deal [sword]1 more damage than|your last attack ([sword]<var:lastdamage>+1),2,attack(self.getvar(~lastdamage~)+1); sfx(~_plasma~); sfxdamage(target|self.getvar(~lastdamage~)+1); self.setvar(~lastdamage~|self.getvar(~lastdamage~)+1);,Plasma Gun,COUNTDOWN,8,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~lastdamage~|0);,,self.setvar(~enemyhealth~[;]target.hp);,var diff = self.getvar(~enemyhealth~) - target.hp; if(diff > 0){self.setvar(~lastdamage~|diff);}; self.setvar(~enemyhealth~[;]target.hp);,,,,,
Power Creeper_upgraded,Deal [sword]3 more damage than|your last attack ([sword]<var:lastdamage>+3),2,attack(self.getvar(~lastdamage~)+3); sfx(~_plasma~); sfxdamage(target|self.getvar(~lastdamage~)+3);  self.setvar(~lastdamage~|self.getvar(~lastdamage~)+3);,Plasma Gun,COUNTDOWN,8,WEAPON,PURPLE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~lastdamage~|0);,,self.setvar(~enemyhealth~[;]target.hp);,var diff = self.getvar(~enemyhealth~) - target.hp; if(diff > 0){self.setvar(~lastdamage~|diff);}; self.setvar(~enemyhealth~[;]target.hp);,,,,,
Power Creeper_downgraded,Deal [sword]1 less damage than|your last attack ([sword]<var:lastdamage>-1),2,attack(self.getvar(~lastdamage~)-1); sfx(~_plasma~); sfxdamage(target|self.getvar(~lastdamage~)-1); self.setvar(~lastdamage~|self.getvar(~lastdamage~)-1);,Plasma Gun,COUNTDOWN,8,WEAPON,PURPLE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,self.setvar(~lastdamage~|0);,,self.setvar(~enemyhealth~[;]target.hp);,var diff = self.getvar(~enemyhealth~) - target.hp; if(diff > 0){self.setvar(~lastdamage~|diff);}; self.setvar(~enemyhealth~[;]target.hp);,,,,,
Normality Charm,Roll 3 dice each turn[;] but|you can no longer Calculate,1,,,,,ITEM,YELLOW,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var amount = 3; var n = []; for(x in 0...amount){n.push(rand([1|2|3|4|5|6]));}; givedice(n); var poss = []; for(eq in self.equipment){if(eq.name == ~Robot Calculate~){poss.push(eq); eq.animate(~curse~); trace(~found one!~); trace(~eq.name~);};}; roboterror(self|poss); e.animate(~flashandshake~); sfx(~_curse~); self.roll_totaldice+=3;,,,,,,
Normality Charm_upgraded,Roll 4 dice each turn[;] but|you can no longer Calculate,1,,,,,ITEM,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var amount = 4; var n = []; for(x in 0...amount){n.push(rand([1|2|3|4|5|6]));}; givedice(n); var poss = []; for(eq in self.equipment){if(eq.name == ~Robot Calculate~){poss.push(eq); eq.animate(~curse~); trace(~found one!~); trace(~eq.name~);};}; roboterror(self|poss); e.animate(~flashandshake~); sfx(~_curse~); self.roll_totaldice+=3;,,,,,,
Normality Charm_downgraded,Roll 2 dice each turn[;] but|you can no longer Calculate,1,,,,,ITEM,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var amount = 2; var n = []; for(x in 0...amount){n.push(rand([1|2|3|4|5|6]));}; givedice(n); var poss = []; for(eq in self.equipment){if(eq.name == ~Robot Calculate~){poss.push(eq); eq.animate(~curse~); trace(~found one!~); trace(~eq.name~);};}; roboterror(self|poss); e.animate(~flashandshake~); sfx(~_curse~); self.roll_totaldice+=3;,,,,,,
Aqua Fortis,Inflict [poison]<d6> poison|Receive [poison]<d6> poison,1,inflict(POISON|d); inflictself(POISON|d); sfx(~_poison~);  sfx(~_poison~|~~|0.2); ,Goop Gun,MAX4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Aqua Fortis_upgraded,Inflict [poison]<d6> poison|Receive [poison]<d6> poison,1,inflict(POISON|d); inflictself(POISON|d); sfx(~_poison~);  sfx(~_poison~|~~|0.2); ,Goop Gun,MAX4|FREE1,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Aqua Fortis_downgraded,Inflict [poison]<d6> poison|Receive [poison]<d6> poison,1,inflict(POISON|d); inflictself(POISON|d); sfx(~_poison~);  sfx(~_poison~|~~|0.2); ,Goop Gun,MAX2,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Refund,Discard your hand[;] receive|dice those items would take,1,function getvals(eq){if(eq.remainingcountdown > 6){return [[1|2|3|4|5|6]];}else if(eq.remainingcountdown > 0){var x = 1; var ct = []; while(x < eq.remainingcountdown){ct.push(x); x+=1;} return [ct];}; var sl = eq.getslots(); if(sl.length == 0){return [];}; var retval = []; for(s in sl){if(s == ~NORMAL~){retval.push([1|2|3|4|5|6]);}; if(s == ~EVEN~){retval.push([2|4|6]);}; if(s == ~ODD~){retval.push([1|3|5]);}; for(x in 1...7){if(s == ~REQUIRE~+x){retval.push([x]);};}; for(x in 1...7){if(s == ~MIN~+x){var temp = []; for(y in x+1...7){temp.push(y);};retval.push(temp);};}; for(x in 1...7){if(s == ~MAX~+x){var temp = []; for(y in 1...x+1){temp.push(y);};retval.push(temp);};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1]){var temp = []; for(y in r[0]...r[1]+1){temp.push(y);}; retval.push(temp);} };}; return retval;}; var eqlist = []; if(self.name == ~jester~){eqlist = [for(x in 0...4) if(Deck.getcard(x) != null) x.equipment];}else{eqlist=self.equipment.copy();}; var newdice = []; for(eq in eqlist){ if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; if(good){var slotchoices = getvals(eq); if(slotchoices.length > 0){ for(x in slotchoices){newdice.push(rand(x));};};}; }; givedice(newdice); Deck.discardhand(); sfx(~jester_snap~);,,EVEN,,ITEM,BRIGHTCYAN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Refund_upgraded,Discard your hand[;] receive|dice those items would take,1,function getvals(eq){if(eq.remainingcountdown > 6){return [[1|2|3|4|5|6]];}else if(eq.remainingcountdown > 0){var x = 1; var ct = []; while(x < eq.remainingcountdown){ct.push(x); x+=1;} return [ct];}; var sl = eq.getslots(); if(sl.length == 0){return [];}; var retval = []; for(s in sl){if(s == ~NORMAL~){retval.push([1|2|3|4|5|6]);}; if(s == ~EVEN~){retval.push([2|4|6]);}; if(s == ~ODD~){retval.push([1|3|5]);}; for(x in 1...7){if(s == ~REQUIRE~+x){retval.push([x]);};}; for(x in 1...7){if(s == ~MIN~+x){var temp = []; for(y in x+1...7){temp.push(y);};retval.push(temp);};}; for(x in 1...7){if(s == ~MAX~+x){var temp = []; for(y in 1...x+1){temp.push(y);};retval.push(temp);};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1]){var temp = []; for(y in r[0]...r[1]+1){temp.push(y);}; retval.push(temp);} };}; return retval;}; var eqlist = []; if(self.name == ~jester~){eqlist = [for(x in 0...4) if(Deck.getcard(x) != null) x.equipment];}else{eqlist=self.equipment.copy();}; var newdice = []; for(eq in eqlist){ if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; if(good){var slotchoices = getvals(eq); if(slotchoices.length > 0){ for(x in slotchoices){newdice.push(rand(x));};};}; }; givedice(newdice); Deck.discardhand(); sfx(~jester_snap~);,,NORMAL,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Refund_downgraded,Discard your hand[;] receive|dice those items would take,1,function getvals(eq){if(eq.remainingcountdown > 6){return [[1|2|3|4|5|6]];}else if(eq.remainingcountdown > 0){var x = 1; var ct = []; while(x < eq.remainingcountdown){ct.push(x); x+=1;} return [ct];}; var sl = eq.getslots(); if(sl.length == 0){return [];}; var retval = []; for(s in sl){if(s == ~NORMAL~){retval.push([1|2|3|4|5|6]);}; if(s == ~EVEN~){retval.push([2|4|6]);}; if(s == ~ODD~){retval.push([1|3|5]);}; for(x in 1...7){if(s == ~REQUIRE~+x){retval.push([x]);};}; for(x in 1...7){if(s == ~MIN~+x){var temp = []; for(y in x+1...7){temp.push(y);};retval.push(temp);};}; for(x in 1...7){if(s == ~MAX~+x){var temp = []; for(y in 1...x+1){temp.push(y);};retval.push(temp);};}; var ranges = [[2|3]|[2|4]|[2|5]|[3|4]|[3|5]|[4|5]]; for(r in ranges){if(s == ~RANGE~+r[0]+r[1]){var temp = []; for(y in r[0]...r[1]+1){temp.push(y);}; retval.push(temp);} };}; return retval;}; var eqlist = []; if(self.name == ~jester~){eqlist = [for(x in 0...4) if(Deck.getcard(x) != null) x.equipment];}else{eqlist=self.equipment.copy();}; var newdice = []; for(eq in eqlist){ if(eq.skillcard != ~~){ break; }; var good = eq.ready && eq.availablethisturn; if(good){var slotchoices = getvals(eq); if(slotchoices.length > 0){ for(x in slotchoices){newdice.push(rand(x));};};}; }; givedice(newdice); Deck.discardhand(); sfx(~jester_snap~);,,EVEN|EVEN,,ITEM,BRIGHTCYAN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reject,Do [sword] equal to lower dice|Return the higher dice,1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; if(x > y){var temp = x; x = y; y = temp;}; attack(x); sfxdamage(target|x); sfx(~_magic~); givedice(y);,,NORMAL|NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reject_upgraded,Do [sword] equal to higher dice|Return the lower dice,1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; if(x < y){var temp = x; y = x; x = temp;}; attack(x); sfxdamage(target|x); sfx(~_magic~); givedice(y);,,NORMAL|NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Reject_downgraded,Do [sword] equal to lower dice,1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; if(x > y){var temp = x; y = x; x = temp;}; attack(x); sfxdamage(target|x); sfx(~_magic~);,,NORMAL|NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Refresh,Reroll both dice[;] resulting|values will be different,1,var x = rand([1|2|3|4|5|6]); var y = x; while(y == x){y = rand([1|2|3|4|5|6]);}; givedice([x|y]);,Replicate,NORMAL|NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Refresh_upgraded,Reroll both dice[;] resulting|values will be the same,1,var x = rand([1|2|3|4|5|6]); givedice([x|x]);,Replicate,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Refresh_downgraded,Reroll one of the dice,1,givedice();,Replicate,NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Maul,Deal [sword]<d6> damage[;]|double on 3 or less,2,if(d <= 3){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Shuriken,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Maul_upgraded,Deal [sword]<d6> damage[;]|double on 4 or less,2,if(d <= 4){attack(d*2); sfxdamage(target|d*2);}else{attack(d); sfxdamage(target|d);};,Shuriken,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Maul_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Shuriken,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Toss,Deal [sword]<double> damage[;] but|give enemy [shield]<d6> shield,2,attack(d*2); sfxdamage(target|d*2); inflict(SHIELD|d); sfx(~_shield~);,Lava Drop,NORMAL,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Toss_upgraded,Deal [sword]<double> damage[;] but|give enemy [shield]<d6> shield,2,attack(d*2); sfxdamage(target|d*2); inflict(SHIELD|d); sfx(~_shield~);,Lava Drop,NORMAL|FREE2,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Shield Toss_downgraded,Deal [sword]<d6> damage[;] but|give enemy [shield]<d6> shield,2,attack(d); sfxdamage(target|d); inflict(SHIELD|d); sfx(~_shield~);,Lava Drop,NORMAL,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chronoblade,Deal [sword]<d6> damage[;] inflict|status depending on the turn:|[blind] [poison] [fire] [shock] [ice] [weaken] [lock] [curse],2,attack(d); sfxdamage(target|d); var effects = [BLIND|POISON|FIRE|SHOCK|ICE|WEAKEN|LOCK|CURSE]; var sounds=[~_blind~|~_poison~|~_fire~|~_shock~|~_ice~|~_weaken~|~_lock~|~_curse~]; inflict(effects[(turn-1)%7]); sfx(sounds[(turn-1)%7]);,Stardust,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chronoblade_upgraded,Deal [sword]<d6> damage[;] inflict|status depending on the turn:|[curse] [lock] [weaken] [ice] [shock] [fire] [poison] [blind],2,attack(d); sfxdamage(target|d); var effects = [CURSE|LOCK|WEAKEN|ICE|SHOCK|FIRE|POISON|BLIND]; var sounds=[~_curse~|~_lock~|~_weaken~|~_ice~|~_shock~|~_fire~|~_poison~|~_blind~]; inflict(effects[(turn-1)%7]); sfx(sounds[(turn-1)%7]);,Stardust,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chronoblade_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d); ,Stardust,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Draining Crystal,Drain [heart]1 health[;]|return the dice,1,drain(1); sfx(~_drain~); givedice(d);,Life Leech,MAX3,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Draining Crystal_upgraded,Drain [heart]<d6> health[;]|return the dice,1,drain(d); sfx(~_drain~); givedice(d);,Life Leech,MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Draining Crystal_downgraded,Drain [heart]1 health,1,drain(1); sfx(~_drain~);,Life Leech,MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Furious Spell,Gain [fury] fury[;] but so|does the enemy,1,inflictself(FURY); inflict(FURY); sfx(~_fury~);,Fury,EVEN,,ITEM,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Furious Spell_upgraded,Gain [fury] fury[;] but so|does the enemy,1,inflictself(FURY); inflict(FURY); sfx(~_fury~);,Fury,NORMAL,,ITEM,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Furious Spell_downgraded,Gain [fury] fury[;] but so|does the enemy,1,inflictself(FURY); inflict(FURY); sfx(~_fury~);,Fury,EVEN|EVEN,,ITEM,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Toffee,Gain [shield]2 shield. If shield|below [shield]<d6>[;] reroll the dice,1,inflictself(SHIELD|2); sfx(~_shield~); if(getstatusself(SHIELD) < d){givedice();};,Coin Clippers,MAX4,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Toffee_upgraded,Gain [shield]2 shield. If shield|below [shield]4[;] reroll the dice,1,inflictself(SHIELD|2); sfx(~_shield~); if(getstatusself(SHIELD) < 4){givedice();};,Coin Clippers,MAX4,,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Toffee_downgraded,Gain [shield]2 shield,1,inflictself(SHIELD|2); sfx(~_shield~);,Coin Clippers,MAX4,,SHIELD,ORANGE,,,,,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Chili Pepper,Even: Burn [fire]1 dice|Odd: [sword]1 dmg[;] reroll dice,1,if(d%2 == 0){inflict(FIRE); sfx(~_fire~);}else{attack(1); sfxdamage(target|1); givedice();};,Barricade,NORMAL,,ITEM,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chili Pepper_upgraded,Even: Burn [fire]2 dice|Odd: [sword]2 dmg[;] reroll dice,1,if(d%2 == 0){inflict(FIRE|2); sfx(~_fire~);}else{attack(2); sfxdamage(target|2); givedice();};,Barricade,NORMAL,,ITEM,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Chili Pepper_downgraded,Even: Burn [fire]1 dice|Odd: [sword]1 dmg[;] reroll dice,1,if(d%2 == 0){inflict(FIRE); sfx(~_fire~);}else{attack(1); sfxdamage(target|1); givedice();};,Barricade,MIN4,,ITEM,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Caramel,Heal [heal]1[;] gain [shield]1 shield[;]|reroll with lower value,1,attackself(-1); inflictself(SHIELD); sfx(~_heal~); sfx(~_shield~|~~|0.1); var x = 1; var poss = []; while(x < d){poss.push(x);}; if(poss.length > 0){givedice(rand(poss));};,Revitalize,MIN4,,SHIELD,YELLOW,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Caramel_upgraded,Heal [heal]1[;] gain [shield]1 shield[;]|reroll with lower value,1,attackself(-1); inflictself(SHIELD); sfx(~_heal~); sfx(~_shield~|~~|0.1); var x = 1; var poss = []; while(x < d){poss.push(x);}; if(poss.length > 0){givedice(rand(poss));};,Revitalize,MIN2,,SHIELD,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Caramel_downgraded,Heal [heal]1 health|Gain [shield]1 shield,1,attackself(-1); inflictself(SHIELD); sfx(~_heal~); sfx(~_shield~|~~|0.1);,Revitalize,MIN4,,SHIELD,YELLOW,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rock Crusher,Dice value -1[;] then split it|,1,if(d <= 1){self.textparticle(~Nice try~);}else if(d == 2){givedice([1]);}else if(d > 6){givedice(d-1);}else{givedice(split(d-1));};,Magic Lockpick,MIN3,,ITEM,GREEN,change_power,change_power,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rock Crusher_upgraded,Dice value -1[;] then split it|,1,if(d <= 1){self.textparticle(~Nice try~);}else if(d == 2){givedice([1]);}else if(d > 6){givedice(d-1);}else{givedice(split(d-1));};,Magic Lockpick,MIN3,,ITEM,GREEN,,,,,4,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rock Crusher_downgraded,Dice value -1[;]|then split it in two,1,if(d <= 1){self.textparticle(~Nice try~);}else if(d == 2){givedice([1]);}else if(d > 6){givedice(d-1);}else{givedice(split(d-1));};,Magic Lockpick,MIN3,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stony Armour,Gain [reduce]1 reduce|,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,MAX3|MAX3,,SHIELD,ORANGE,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stony Armour_upgraded,Gain [reduce]1 reduce|,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,NORMAL|NORMAL,,SHIELD,ORANGE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Stony Armour_downgraded,Gain [reduce]1 reduce|,1,inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,MAX3|MAX3,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Triangle Beam,Deal [sword]<d6> damage|Slot reduces on each use|[gray](Reuseable),2,attack(d); sfxdamage(target|d); sfx(~_magic~);,Plasma Gun,MAX5,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,e.resetslots(); e.setvar(~slotlimit~|5);,e.changeslots([~MAX5~]); e.setvar(~slotlimit~|6);,,,,e.resetslots(); e.setvar(~slotlimit~|5);,if(e.getvar(~slotlimit~) > 1){e.setvar(~slotlimit~|e.getvar(~slotlimit~)-1);}; if(e.getvar(~slotlimit~) > 6){e.changeslots([~NORMAL~]);}; var slots = [null|~REQUIRE1~|~MAX2~|~MAX3~|~MAX4~|~MAX5~|~NORMAL~]; e.changeslots([slots[e.getvar(~slotlimit~)]]);,,
Triangle Beam_upgraded,Deal [sword]<d6> damage|Slot reduces on each use|[gray](Reuseable),2,attack(d); sfxdamage(target|d); sfx(~_magic~);,Plasma Gun,NORMAL,,WEAPON,RED,,,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,e.resetslots(); e.setvar(~slotlimit~|6);,e.changeslots([~NORMAL~]); e.setvar(~slotlimit~|6);,,,,e.resetslots(); e.setvar(~slotlimit~|6);,if(e.getvar(~slotlimit~) > 1){e.setvar(~slotlimit~|e.getvar(~slotlimit~)-1);}; if(e.getvar(~slotlimit~) > 6){e.changeslots([~NORMAL~]);}; var slots = [null|~REQUIRE1~|~MAX2~|~MAX3~|~MAX4~|~MAX5~|~NORMAL~]; e.changeslots([slots[e.getvar(~slotlimit~)]]);,,
Triangle Beam_downgraded,Deal [sword]<d6> damage|[gray](Reuseable),2,attack(d); sfxdamage(target|d); sfx(~_magic~);,Plasma Gun,REQUIRE1,,WEAPON,RED,,,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,e.resetslots(); e.setvar(~slotlimit~|5);,e.resetslots(); e.setvar(~slotlimit~|5);,,,,e.resetslots(); e.setvar(~slotlimit~|5);,,,
Channel Rage,Burn your other dice[;] deal|[fire]2 damage per dice burned,1,var damage = 2; var total = 0; for(mydice in self.dicepool){mydice.animate(~fire~|total/10); total+=1; }; if(total > 0){attack(total*damage|FIRE); sfx(~_fire~);};,Heat Ray,COUNTDOWN,4,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Channel Rage_upgraded,Burn your other dice[;] deal|[fire]3 damage per dice burned,1,var damage = 3; var total = 0; for(mydice in self.dicepool){mydice.animate(~fire~|total/10); total+=1; }; if(total > 0){attack(total*damage|FIRE); sfx(~_fire~);};,Heat Ray,COUNTDOWN,4,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Channel Rage_downgraded,Burn your other dice[;] deal|[fire]1 damage per dice burned,1,var damage = 1; var total = 0; for(mydice in self.dicepool){mydice.animate(~fire~|total/10); total+=1; }; if(total > 0){attack(total*damage|FIRE); sfx(~_fire~);};,Heat Ray,COUNTDOWN,4,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood Blessing,Convert [heart]<d6> health into|[shield]<d6> shield[;] return the dice,1,pierceattackself(d); inflictself(SHIELD|d); sfx(~_drain~); sfx(~_shield~); givedice(d);,Steel Skin,MAX5,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Blood Blessing_upgraded,Convert [heart]<d6> health into|[shield]<d6> shield[;] return the dice,1,pierceattackself(d); inflictself(SHIELD|d); sfx(~_drain~); sfx(~_shield~); givedice(d);,Steel Skin,NORMAL,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Blood Blessing_downgraded,Convert [heart]<d6> health|into [shield]<d6> shield,1,pierceattackself(d); inflictself(SHIELD|d); sfx(~_drain~); sfx(~_shield~);,Steel Skin,MAX5,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Indicetructable,Gain [heart]<double> max health|Permanently lose 1 dice,1,self.maxhp+=d*2; self.hp+=d*2; self.dice-=1; if(self.dice == 0){self.textparticle(~Nice job~);}; sfx(~_drain~); sfx(~magic_gaindice~);,Mutagen,MAX5,,ITEM,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Indicetructable_upgraded,Gain [heart]<double> max health|Permanently lose 1 dice,1,self.maxhp+=d*2; self.hp+=d*2; self.dice-=1; if(self.dice == 0){self.textparticle(~Nice job~);}; sfx(~_drain~); sfx(~magic_gaindice~);,Mutagen,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Indicetructable_downgraded,Gain [heart]<d6> max health|Permanently lose 1 dice,1,self.maxhp+=d; self.hp+=d; self.dice-=1; if(self.dice == 0){self.textparticle(~Nice job~);}; sfx(~_drain~); sfx(~magic_gaindice~);,Mutagen,MAX5,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Come On And Slam,Deal [sword]<d6> damage[;] on 6[;]|reroll your remaining dice,2,attack(d); sfxdamage(target|d); if(d == 6){sfx(~_magic~); var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll(rand([1|2|3|4|5|6])| self.screenposition()| c * 0.05); c++; };};};,Clone Device,NORMAL,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Come On And Slam_upgraded,Deal [sword]<d6> damage[;] on even[;]|reroll your remaining dice,2,attack(d); sfxdamage(target|d); if(d % 2 == 0){sfx(~_magic~); var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll(rand([1|2|3|4|5|6])| self.screenposition()| c * 0.05); c++; };};};,Clone Device,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Come On And Slam_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Clone Device,NORMAL,,WEAPON,BRIGHTCYAN,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Saxophone,Inflict [weaken]1 weaken|Roll a 5,1,inflict(WEAKEN); sfx(~_weaken~); givedice(5);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Saxophone_upgraded,[weaken]1 weaken[;] roll a 5|,1,inflict(WEAKEN); sfx(~_weaken~); givedice(5);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Saxophone_downgraded,Roll a 5,1,givedice(5);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nitro Bump,Roll a [fire]burning 6,1,givedice(6); self.dicepool[self.dicepool.length-1].animate(~fire~|0.2);,Magic Six,NORMAL,,ITEM,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nitro Bump_upgraded,Roll a [fire]burning 6|,1,givedice(6); self.dicepool[self.dicepool.length-1].animate(~fire~|0.2);,Magic Six,NORMAL,,ITEM,RED,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Nitro Bump_downgraded,Roll a [fire]burning dice,1,givedice(); self.dicepool[self.dicepool.length-1].animate(~fire~|0.2);,Magic Six,NORMAL,,ITEM,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Electrophoresis,Duplicate both dice|(Receive [shock]1 each turn),1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; givedice([x|x|y|y]);,Clone Device,MIN4|MIN4,,ITEM,YELLOW,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,inflictself(SHOCK); ,sfx(~_shock~); e.animate(~flashandshake~);,,,,,,
Electrophoresis_upgraded,Duplicate both dice|(Receive [shock]1 each turn),1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; givedice([x|x|y|y]);,Clone Device,NORMAL|NORMAL,,ITEM,YELLOW,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,inflictself(SHOCK); ,sfx(~_shock~); e.animate(~flashandshake~);,,,,,,
Electrophoresis_downgraded,Duplicate both dice|(Receive [shock]1 each turn),1,var x = actualdice[0].basevalue; var y = actualdice[1].basevalue; givedice([x|x|y|y]);,Clone Device,MIN5|MIN5,,ITEM,YELLOW,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,inflictself(SHOCK); ,sfx(~_shock~); e.animate(~flashandshake~);,,,,,,
Glueplicate,[lock] Lock your highest dice[;]|get 3 copies of it next turn,1,var maxval = 0; for(mydice in self.dicepool){if(mydice.available()){if(mydice.basevalue > maxval){maxval = mydice.basevalue;};};}; if(maxval == 0){self.textparticle(~No effect!~);}else{inflictself(LOCK); var flag = true; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == maxval && flag){flag = false; mydice.animate(~lock~);}; }; inflictself(~stash~+maxval|3); inflictself(~lightstatus~|3); sfx(~magic_gaindice~);};,Padlock,COUNTDOWN,6,ITEM,PURPLE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Glueplicate_upgraded,[lock] Lock your highest dice[;]|get 4 copies of it next turn,1,var maxval = 0; for(mydice in self.dicepool){if(mydice.available()){if(mydice.basevalue > maxval){maxval = mydice.basevalue;};};}; if(maxval == 0){self.textparticle(~No effect!~);}else{inflictself(LOCK); var flag = true; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == maxval && flag){flag = false; mydice.animate(~lock~);}; }; inflictself(~stash~+maxval|4); inflictself(~lightstatus~|4); sfx(~magic_gaindice~);};,Padlock,COUNTDOWN,6,ITEM,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glueplicate_downgraded,[lock] Lock your highest dice[;]|get 2 copies of it next turn,1,var maxval = 0; for(mydice in self.dicepool){if(mydice.available()){if(mydice.basevalue > maxval){maxval = mydice.basevalue;};};}; if(maxval == 0){self.textparticle(~No effect!~);}else{inflictself(LOCK); var flag = true; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == maxval && flag){flag = false; mydice.animate(~lock~);}; }; inflictself(~stash~+maxval|2); inflictself(~lightstatus~|2); sfx(~magic_gaindice~);};,Padlock,COUNTDOWN,6,ITEM,PURPLE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dash Slash,Deal [sword]<d6> damage[;]|then end your turn,1,attack(d); sfxdamage(target|d); if(self.getvar(~furytest~) == 0){self.endturnnow(); sfx(~_magic~);};,Time Stop,MAX5|FREE2,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,self.setvar(~furytest~|getstatusself(FURY));,,donothing();
Dash Slash_upgraded,Deal [sword]<d6> damage[;]|then end your turn,1,attack(d); sfxdamage(target|d); if(self.getvar(~furytest~) == 0){self.endturnnow(); sfx(~_magic~);};,Time Stop,MAX5|FREE4,,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,self.setvar(~furytest~|getstatusself(FURY));,,donothing();
Dash Slash_downgraded,Deal [sword]<d6> damage[;]|then end your turn,1,attack(d); sfxdamage(target|d); if(self.getvar(~furytest~) == 0){self.endturnnow(); sfx(~_magic~);};,Time Stop,MAX5,,WEAPON,PINK,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,self.setvar(~furytest~|getstatusself(FURY));,,donothing();
Diamond Wall,Gain [shield]<double> shield|Enemy gets +1 dice this fight,1,inflictself(SHIELD|d*2); sfx(~_shield~); target.extradice+=1; sfx(~magic_gaindice~);,Infinity Mirror,MAX4,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Diamond Wall_upgraded,Gain [shield]<double> shield|Enemy gets +1 dice this fight,1,inflictself(SHIELD|d*2); sfx(~_shield~); target.extradice+=1; sfx(~magic_gaindice~);,Infinity Mirror,MAX5,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Diamond Wall_downgraded,Gain [shield]<double> shield|Enemy gets +1 dice this fight,1,inflictself(SHIELD|d*2); sfx(~_shield~); target.extradice+=1; sfx(~magic_gaindice~);,Infinity Mirror,MAX2,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacridice,Lose [heart]<d6> health|Gain +1 dice this fight,1,pierceattackself(d); self.extradice+=1; sfx(~_drain~); sfx(~magic_gaindice~);,Infinity Mirror,MIN3,,MAGIC,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Sacridice_upgraded,Lose [heart]<d6> hp[;] return the dice|Gain +1 dice this fight,1,pierceattackself(d); givedice(d); self.extradice+=1; sfx(~_drain~); sfx(~magic_gaindice~);,Infinity Mirror,MIN3,,MAGIC,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sacridice_downgraded,Lose [heart]<d6> health|Gain +1 dice this fight,1,pierceattackself(d); self.extradice+=1; sfx(~_drain~); sfx(~magic_gaindice~);,Infinity Mirror,MIN5,,MAGIC,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recoil Recover,Deal [sword]<d6> damage[;] heal [heal]|hp equal to the difference,2,attack(d); sfxdamage(target|d); var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){var t = a; a = b; b = t;}; attackself(a-b); sfx(~_heal~);,Plasma Gun,MAX4|MAX4,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recoil Recover_upgraded,Deal [sword]<d6> damage[;] heal [heal]|hp equal to the difference,2,attack(d); sfxdamage(target|d); var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){var t = a; a = b; b = t;}; attackself(a-b); sfx(~_heal~);,Plasma Gun,MAX5|MAX5,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Recoil Recover_downgraded,Deal [sword]<d6> damage[;] heal [heal]|hp equal to the difference,2,attack(d); sfxdamage(target|d); var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){var t = a; a = b; b = t;}; attackself(a-b); sfx(~_heal~);,Plasma Gun,MAX3|MAX3,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Diffraction Spike,Deal [sword]<d6> damage[;] lose [heart]|hp equal to the difference,1,attack(d); sfxdamage(target|d); var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){var t = a; a = b; b = t;}; pierceattackself(b-a); sfx(~_drain~);,Bubble Gun,MAX5|MAX5,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Diffraction Spike_upgraded,Deal [sword]<d6> damage[;] lose [heart]|hp equal to the difference,1,attack(d); sfxdamage(target|d); var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){var t = a; a = b; b = t;}; pierceattackself(b-a); sfx(~_drain~);,Bubble Gun,NORMAL|NORMAL,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Diffraction Spike_downgraded,Deal [sword]<d6> damage[;] lose [heart]|hp equal to the difference,1,attack(d); sfxdamage(target|d); var a = actualdice[0].basevalue; var b = actualdice[1].basevalue; if(a > b){var t = a; a = b; b = t;}; pierceattackself(b-a); sfx(~_drain~);,Bubble Gun,MAX3|MAX3,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Arbitrage,Restore [heal]2 health|Return the dice,1,attackself(-2); sfx(~_heal~); givedice(d);,Revitalize,MIN4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Arbitrage_upgraded,Restore [heal]2 health|Return the dice,1,attackself(-2); sfx(~_heal~); givedice(d);,Revitalize,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Arbitrage_downgraded,Restore [heal]2 health,1,attackself(-2); sfx(~_heal~);,Revitalize,MIN4,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rift Stabilizer,Get 2 copies of|a different dice,1,var possible = [1|2|3|4|5|6]; for(ad in actualdice){possible.remove(ad.basevalue);}; var r = rand(possible); givedice([r|r]);,Replicate,NORMAL|NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rift Stabilizer_upgraded,Get 3 copies of|a different dice,1,var possible = [1|2|3|4|5|6]; for(ad in actualdice){possible.remove(ad.basevalue);}; var r = rand(possible); givedice([r|r|r]);,Replicate,NORMAL|NORMAL|NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Rift Stabilizer_downgraded,Roll a new dice,1,var possible = [1|2|3|4|5|6]; for(ad in actualdice){possible.remove(ad.basevalue);}; var r = rand(possible); givedice([r]);,Replicate,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fortnight,Inflict [weaken]2 weaken,1,inflict(WEAKEN|2); sfx(~_weaken~);,Mumble,COUNTDOWN,8,ITEM,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fortnight_upgraded,Inflict [weaken]2 weaken|,1,inflict(WEAKEN|2); sfx(~_weaken~);,Mumble,COUNTDOWN,8,ITEM,ORANGE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fortnight_downgraded,Inflict [weaken]1 weaken,1,inflict(WEAKEN); sfx(~_weaken~);,Mumble,COUNTDOWN,8,ITEM,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
HOLP Hammer,Do [sword] equal to the HOLP (<var:holp>)|Set the HOLP to <d6>,1,var h = self.getvar(~holp~); if(h == 0){self.textparticle(~HOLP set!~);}else{attack(h); sfxdamage(target|h); self.setvar(~holp~|d);,,NORMAL,,WEAPON,YELLOW,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Hammer_upgraded,Do [sword] equal to the HOLP (<var:holp>)|Set the HOLP to <d6>,1,var h = self.getvar(~holp~); if(h == 0){self.textparticle(~HOLP set!~);}else{attack(h); sfxdamage(target|h);}; self.setvar(~holp~|d);,,NORMAL|FREE2,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Hammer_downgraded,Do [sword] equal to the HOLP (<var:holp>)|Set the HOLP to <d6>,1,var h = self.getvar(~holp~); if(h == 0){self.textparticle(~HOLP set!~);}else{attack(h); sfxdamage(target|h);}; self.setvar(~holp~|d);,,MAX3,,WEAPON,YELLOW,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Helper,Increase the HOLP by 1|Return the dice,1,self.setvar(~holp~|self.getvar(~holp~)+1); givedice(d); sfx(~_thinghappens~);,,NORMAL,,ITEM,GRAY,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Helper_upgraded,Increase the HOLP by 2|Return the dice,1,self.setvar(~holp~|self.getvar(~holp~)+2); givedice(d); sfx(~_thinghappens~);,,NORMAL,,ITEM,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Helper_downgraded,Increase the HOLP by 1,1,self.setvar(~holp~|self.getvar(~holp~)+1); sfx(~_thinghappens~);,,NORMAL,,ITEM,GRAY,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Healer,Reduce the HOLP (<var:holp>) by half[;]|then [heal] heal that much health,1,var h = self.getvar(~holp~); if(h%2 == 1){h+=1;}; self.setvar(~holp~|h/2); attackself(self.getvar(~holp~)); sfx(~_heal~);,,EVEN,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Healer_upgraded,Reduce the HOLP (<var:holp>) by half[;]|then [heal] heal that much health,1,var h = self.getvar(~holp~); if(h%2 == 1){h+=1;}; self.setvar(~holp~|h/2); attackself(self.getvar(~holp~)); sfx(~_heal~);,,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
HOLP Healer_downgraded,Reduce the HOLP (<var:holp>) by half[;]|then [heal] heal that much health,1,var h = self.getvar(~holp~); if(h%2 == 1){h+=1;}; self.setvar(~holp~|h/2); attackself(self.getvar(~holp~)); sfx(~_heal~);,,EVEN|EVEN,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Push Knife,[sword]2[;] give a random dice +1|,1,attack(2); sfxdamage(target|2); var poss = []; for(mydice in self.dicepool){if(mydice.available()){poss.push(mydice);};}; if(poss.length > 0){var r = rand(poss); if(r.basevalue == 6){r.animatereroll(6|self.screenposition()|0); givedice(1);}else{r.animatereroll(r.basevalue+1|self.screenposition()|0);};};,Megabump,MIN2,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Push Knife_upgraded,[sword]3[;] give a random dice +1|,1,attack(3); sfxdamage(target|3); var poss = []; for(mydice in self.dicepool){if(mydice.available()){poss.push(mydice);};}; if(poss.length > 0){var r = rand(poss); if(r.basevalue == 6){r.animatereroll(6|self.screenposition()|0); givedice(1);}else{r.animatereroll(r.basevalue+1|self.screenposition()|0);};};,Megabump,MIN2,,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Push Knife_downgraded,Deal [sword]2 damage|,1,attack(2); sfxdamage(target|2);,Megabump,MIN2,,WEAPON,RED,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glamour,Roll 2 extra dice each turn[;]|but your 6s disappear,1,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){mydice.animate(~disappear~);};};,,,,ITEM,YELLOW,change_power,change_power,,none,-1,NO,NO,NO,YES,NO,NO,NO,YES,,self.extradice+=2;,,,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){mydice.animate(~disappear~);};}; e.doequipmentaction(self|target|0|[]|-0.2|true);,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){mydice.animate(~disappear~|0.5);};};,,,,,
Glamour_upgraded,Roll 3 extra dice each turn[;]|but your 6s disappear,1,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){mydice.animate(~disappear~);};};,,,,ITEM,YELLOW,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,YES,,self.extradice+=3;,,,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){mydice.animate(~disappear~);};}; e.doequipmentaction(self|target|0|[]|-0.2|true);,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == 6){mydice.animate(~disappear~|0.5);};};,,,,,
Glamour_downgraded,Roll 2 extra dice each turn[;]|but your 5s and 6s disappear,1,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue >= 5){mydice.animate(~disappear~);};};,,,,ITEM,YELLOW,,,,none,-1,NO,NO,NO,YES,NO,NO,NO,YES,,self.extradice+=2;,,,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue>=5){mydice.animate(~disappear~);};}; e.doequipmentaction(self|target|0|[]|-0.2|true);,for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue >= 5){mydice.animate(~disappear~|0.5);};};,,,,,
Glitter,Curse the enemy[;] twice|if they're already cursed,2,if(getstatus(CURSE) > 0){inflict(CURSE); sfx(~_curse~|~~|0.2);}; inflict(CURSE); sfx(~_curse~);,Megacurse,COUNTDOWN,8,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glitter_upgraded,Curse the enemy[;] 10 times|if they're already cursed,2,if(getstatus(CURSE) > 0){inflict(CURSE|9); sfx(~_curse~|~~|0.2);}; inflict(CURSE); sfx(~_curse~);,Megacurse,COUNTDOWN,8,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Glitter_downgraded,Curse the enemy,2,inflict(CURSE); sfx(~_curse~);,Megacurse,COUNTDOWN,8,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Popcount,Deal [sword]3 damage for|each other <d6> you have,1,var damage = 3; var amount = 0; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == d){amount+=1;};}; attack(amount*damage); sfxdamage(target|amount*damage);,Mechanical Kneecap,NORMAL,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Popcount_upgraded,Deal [sword]4 damage for|each other <d6> you have,1,var damage = 4; var amount = 0; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == d){amount+=1;};}; attack(amount*damage); sfxdamage(target|amount*damage);,Mechanical Kneecap,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Popcount_downgraded,Deal [sword]2 damage for|each other <d6> you have,1,var damage = 2; var amount = 0; for(mydice in self.dicepool){if(mydice.available() && mydice.basevalue == d){amount+=1;};}; attack(amount*damage); sfxdamage(target|amount*damage);,Mechanical Kneecap,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Evocation,Roll a dice you rolled at|the start of your turn,1,var poss = []; for(x in 1...7){if(self.getvar(~rolled~+x) == 1){poss.push(x);};};  givedice(rand(poss));,Magic Dice,NORMAL,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,for(x in 1...7){self.setvar(~rolled~+x|0);}; for(mydice in self.dicepool){self.setvar(~rolled~+mydice.basevalue|1);};,,,,,,
Evocation_upgraded,Roll a dice you rolled at|the start of your turn|,1,var poss = []; for(x in 1...7){if(self.getvar(~rolled~+x) == 1){poss.push(x);};};  givedice(rand(poss));,Magic Dice,NORMAL,,ITEM,GREEN,,,,,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,for(x in 1...7){self.setvar(~rolled~+x|0);}; for(mydice in self.dicepool){self.setvar(~rolled~+mydice.basevalue|1);};,,,,,,
Evocation_downgraded,Roll a dice you rolled at|the start of your turn,1,var poss = []; for(x in 1...7){if(self.getvar(~rolled~+x) == 1){poss.push(x);};};  givedice(rand(poss));,Magic Dice,MIN4,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,for(x in 1...7){self.setvar(~rolled~+x|0);}; for(mydice in self.dicepool){self.setvar(~rolled~+mydice.basevalue|1);};,,,,,,
Revoke,If you didn't roll a <d6> at the|start of your turn[;] do [sword]<double>,1,if(self.getvar(~rolled~+d) == 0){attack(d*2); sfxdamage(target|d*2);};,Magic Dice,MAX5,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(x in 1...7){self.setvar(~rolled~+x|0);}; for(mydice in self.dicepool){self.setvar(~rolled~+mydice.basevalue|1);};,,,,,,
Revoke_upgraded,If you didn't roll a <d6> at the|start of your turn[;] do [sword]<double>,1,if(self.getvar(~rolled~+d) == 0){attack(d*2); sfxdamage(target|d*2);};,Magic Dice,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(x in 1...7){self.setvar(~rolled~+x|0);}; for(mydice in self.dicepool){self.setvar(~rolled~+mydice.basevalue|1);};,,,,,,
Revoke_downgraded,If you didn't roll a <d6> at the|start of your turn[;] do [sword]<double>,1,if(self.getvar(~rolled~+d) == 0){attack(d*2); sfxdamage(target|d*2);};,Magic Dice,MAX3,,WEAPON,RED,,,,none,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,for(x in 1...7){self.setvar(~rolled~+x|0);}; for(mydice in self.dicepool){self.setvar(~rolled~+mydice.basevalue|1);};,,,,,,
Pandemonium,Deal [sword]<d6> damage|[curse] Curse the enemy,2,attack(d); sfxdamage(target|d); inflict(CURSE); sfx(~_curse~);,Ballerina,REQUIRE2|REQUIRE2|REQUIRE2|REQUIRE2,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pandemonium_upgraded,Deal [sword]<d6> damage|[curse] Curse the enemy,2,attack(d); sfxdamage(target|d); inflict(CURSE); sfx(~_curse~);,Ballerina,MAX2|MAX2|MAX2|MAX2|,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Pandemonium_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Ballerina,REQUIRE2|REQUIRE2|REQUIRE2|REQUIRE2,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Explosive Shield,Gain [shield]<double> shield[;] but take|[sword]<double> damage in 2 turns,1,inflictself(SHIELD|d*2); sfx(~_shield~);  jinx(~Backfire~|~take [sword]%VAR% damage~|~Take [sword]%VAR% damage~|~attack(%VAR%); sfxdamage(null|%VAR%);~|self|self|2|d*2);,Boom!,NORMAL,,SHIELD,RED,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Explosive Shield_upgraded,Gain [shield]<double> shield[;] but take|[sword]<double> damage in 3 turns,1,inflictself(SHIELD|d*2); sfx(~_shield~);  jinx(~Backfire~|~take [sword]%VAR% damage~|~Take [sword]%VAR% damage~|~attack(%VAR%); sfxdamage(null|%VAR%);~|self|self|3|d*2);,Boom!,NORMAL,,SHIELD,RED,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Explosive Shield_downgraded,Gain [shield]<double> shield[;] but take|[sword]<double> damage in 2 turns,1,inflictself(SHIELD|d*2); sfx(~_shield~);  jinx(~Backfire~|~take [sword]%VAR% damage~|~Take [sword]%VAR% damage~|~attack(%VAR%); sfxdamage(null|%VAR%);~|self|self|2|d*2);,Boom!,MAX4,,SHIELD,RED,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Diabolo,Burn [fire]1 dice[;] deal [sword]<d6>|damage on 3 or less,1,if(d <= 3){attack(d); sfxdamage(target|d);}; inflict(FIRE); sfx(~_fire~);,Ember,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Diabolo_upgraded,Burn [fire]1 dice[;] deal [sword]<d6>|damage on 4 or less,1,if(d <= 4){attack(d); sfxdamage(target|d);}; inflict(FIRE); sfx(~_fire~);,Ember,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Diabolo_downgraded,Burn [fire]1 dice,1,inflict(FIRE); sfx(~_fire~);,Ember,NORMAL,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Jianzi,Inflict a random status|On 6[;] inflict 2 statuses,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()); if(d == 6){var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);};,Stardust,MIN2,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Jianzi_upgraded,Inflict a random status|On 6[;] inflict 3 statuses,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()); if(d == 6){var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2); randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.4);};,Stardust,MIN2,,WEAPON,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Jianzi_downgraded,Inflict a random status|On 6[;] inflict 2 statuses,1,var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()); if(d == 6){var randstatus = rand([BLIND|CURSE|LOCK|FIRE|ICE|WEAKEN|SHOCK|POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()|~~|0.2);};,Stardust,MIN4,,WEAPON,PINK,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Karambit,[sword]2 dmg[;] add [poison]1 poison|,2,attack(2); sfxdamage(target|2); inflict(POISON|1); sfx(~_poison~);,Pee Gun,COUNTDOWN,3,WEAPON,PURPLE,change_power,change_power,,,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Karambit_upgraded,[sword]2 dmg[;] add [poison]1 poison|,2,attack(2); sfxdamage(target|2); inflict(POISON|1); sfx(~_poison~);,Pee Gun,COUNTDOWN,3,WEAPON,PURPLE,,,,,4,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Karambit_downgraded,[sword]2 dmg[;] add [poison]1 poison|,2,attack(2); sfxdamage(target|2); inflict(POISON|1); sfx(~_poison~);,Pee Gun,COUNTDOWN,3,WEAPON,PURPLE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Risley,Deal [sword]1[;] reroll dice|,1,attack(1); sfxdamage(target|d); givedice();,Reroll,MIN4,,WEAPON,RED,change_power,change_power,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Risley_upgraded,Deal [sword]1[;] reroll dice|,1,attack(1); sfxdamage(target|d); givedice();,Reroll,MIN4,,WEAPON,RED,,,,,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Risley_downgraded,Deal [sword]1[;] reroll dice|,1,attack(1); sfxdamage(target|d); givedice();,Reroll,MIN4,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiky Spell,Deal [sword]5 damage|Gain [thorns]2 thorns,1,attack(5); sfxdamage(target|5); inflictself(THORNS|2); sfx(~_thorns~);,Pinprick,REQUIRE3,,MAGIC,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Spiky Spell_upgraded,Deal [sword]6 damage|Gain [thorns]3 thorns,1,attack(6); sfxdamage(target|6); inflictself(THORNS|3); sfx(~_thorns~);,Pinprick,REQUIRE3,,MAGIC,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spiky Spell_downgraded,Deal [sword]5 damage|Gain [thorns]1 thorns,1,attack(5); sfxdamage(target|5); inflictself(THORNS|1); sfx(~_thorns~);,Pinprick,REQUIRE3,,MAGIC,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Armour Spell,Deal [sword]5 damage|Gain [reduce]1 reduce,1,attack(5); sfxdamage(target|5); inflictself(REDUCE); sfx(~_shield~);,Pillow Fort,REQUIRE1,,SHIELD,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Armour Spell_upgraded,Deal [sword]5 damage|Gain [reduce]2 reduce,1,attack(5); sfxdamage(target|5); inflictself(REDUCE|2); sfx(~_shield~);,Pillow Fort,REQUIRE1,,SHIELD,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Armour Spell_downgraded,Deal [sword]5 damage,1,attack(5); sfxdamage(target|5);,Pillow Fort,REQUIRE1,,SHIELD,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Joke Answer,Deal [sword]<d6> damage[;] heal to|full if you're missing [heart]<d6> hp,1,attack(d); sfxdamage(target|d); if(self.maxhp - self.hp == d){attackself(self.hp - self.maxhp); sfx(~_heal~);};,Regenerate,MAX4,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Joke Answer_upgraded,Deal [sword]<d6> damage[;] heal to|full if you're missing [heart]<d6> hp,1,attack(d); sfxdamage(target|d); if(self.maxhp - self.hp == d){attackself(self.hp - self.maxhp); sfx(~_heal~);};,Regenerate,NORMAL,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Joke Answer_downgraded,Deal [sword]<d6> damage[;] heal to|full if you're missing [heart]<d6> hp,1,attack(d); sfxdamage(target|d); if(self.maxhp - self.hp == d){attackself(self.hp - self.maxhp); sfx(~_heal~);};,Regenerate,MAX3,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spear Of Justfire,[fire]4 damage + [fire]1 burn|,2,attack(4|FIRE); sfxdamage(target|4); inflict(FIRE); sfx(~_fire~);,Hellfire,REQUIRE6,,WEAPON,RED,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spear Of Justfire_upgraded,[fire]4 damage + [fire]1 burn|,2,attack(4|FIRE); sfxdamage(target|4); inflict(FIRE); sfx(~_fire~);,Hellfire,MIN5,,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spear Of Justfire_downgraded,[fire]2 damage + [fire]1 burn|,2,attack(2|FIRE); sfxdamage(target|2); inflict(FIRE); sfx(~_fire~);,Hellfire,REQUIRE6,,WEAPON,RED,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spear Of Justfreeze,[ice]4 damage + [ice]1 freeze|,2,attack(4|ICE); sfxdamage(target|4); inflict(ICE); sfx(~_ice~);,Arctic Storm,REQUIRE6,,WEAPON,BRIGHTCYAN,change_power,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spear Of Justfreeze_upgraded,[ice]4 damage + [ice]1 freeze|,2,attack(4|ICE); sfxdamage(target|4); inflict(ICE); sfx(~_ice~);,Arctic Storm,MIN5,,WEAPON,BRIGHTCYAN,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Spear Of Justfreeze_downgraded,[ice]2 damage + [ice]1 freeze|,2,attack(2|ICE); sfxdamage(target|2); inflict(ICE); sfx(~_ice~);,Arctic Storm,REQUIRE6,,WEAPON,BRIGHTCYAN,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Acid Spell,Deal [sword]5 damage|Inflict [poison]1 poison,1,attack(5); sfxdamage(target|5); inflict(POISON); sfx(~_poison~);,Goop Gun,REQUIRE4,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Acid Spell_upgraded,Deal [sword]5 damage|Inflict [poison]2 poison,1,attack(5); sfxdamage(target|5); inflict(POISON|2); sfx(~_poison~);,Goop Gun,REQUIRE4,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Acid Spell_downgraded,Deal [sword]5 damage,1,attack(5); sfxdamage(target|5);,Goop Gun,REQUIRE4,,WEAPON,PURPLE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
War Axe,Deal [sword]<double> damage,2,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,ODD,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
War Axe_upgraded,Deal [sword]<double> damage,2,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,MAX5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
War Axe_downgraded,Deal [sword]<double> damage,2,attack(d*2); sfxdamage(target|d*2);,Plasma Gun,REQUIRE3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swordbroad,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Shuriken,FREE6|REQUIRE2,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swordbroad_upgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Shuriken,FREE6|REQUIRE3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Swordbroad_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Shuriken,FREE3|REQUIRE2,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Saving Grace,Gain [heart]<d6> stacks of Grace,1,inflictself(~grace~|d); sfx(~_survive~);,Revitalize,MAX4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Saving Grace_upgraded,Gain [heart]<d6> stacks of Grace,1,inflictself(~grace~|d); sfx(~_survive~);,Revitalize,MAX5,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Saving Grace_downgraded,Gain [heart]<d6> stacks of Grace,1,inflictself(~grace~|d); sfx(~_survive~);,Revitalize,MAX2,,ITEM,GREEN,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Graceful Gash,Deal [sword]<d6> damage|On 6[;] gain [heart]3 Grace,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(~grace~|3); sfx(~_survive~);};,Revitalize,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Graceful Gash_upgraded,Deal [sword]<d6> damage|On even[;] gain [heart]3 Grace,2,attack(d); sfxdamage(target|d); if(d % 2 == 0){inflictself(~grace~|3); sfx(~_survive~);};,Revitalize,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Graceful Gash_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d); if(d == 6){inflictself(~grace~|3); sfx(~_survive~);};,Revitalize,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Fourth Hour,Add [shield]<d6> shield. If your hp is|critical[;] gain [heart]<d6> Grace too,2,inflictself(SHIELD|d); sfx(~_shield~); if((self.hp / self.maxhp < 0.25) # self.hp <= 6){inflictself(~grace~|d); sfx(~_survive~|~~|0.2);};,Revitalize,MAX4,,SHIELD,ORANGE,change_power,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Fourth Hour_upgraded,Add [shield]<d6> shield. If your hp is|critical[;] gain [heart]<d6> Grace too,2,inflictself(SHIELD|d); sfx(~_shield~); if((self.hp / self.maxhp < 0.25) # self.hp <= 6){inflictself(~grace~|d); sfx(~_survive~|~~|0.2);};,Revitalize,MAX4|FREE1,,SHIELD,ORANGE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Fourth Hour_downgraded,Add [shield]<d6> shield. If your hp is|critical[;] gain [heart]<d6> Grace too,2,inflictself(SHIELD|d); sfx(~_shield~); if((self.hp / self.maxhp < 0.25) # self.hp <= 6){inflictself(~grace~|d); sfx(~_survive~|~~|0.2);};,Revitalize,MAX2,,SHIELD,ORANGE,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Third Eye,Lock [lock]1 dice|Return these dice,2,inflict(LOCK); sfx(~_lock~); var x = []; for(mydice in actualdice){x.push(mydice.basevalue);}; givedice(x);,Padlock,REQUIRE1|REQUIRE1|REQUIRE1,,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Third Eye_upgraded,Lock [lock]1 dice|Return these dice,2,inflict(LOCK); sfx(~_lock~); var x = []; for(mydice in actualdice){x.push(mydice.basevalue);}; givedice(x);,Padlock,MAX2|MAX2|MAX2,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Third Eye_downgraded,Lock [lock]1 dice,2,inflict(LOCK); sfx(~_lock~);,Padlock,REQUIRE1|REQUIRE1|REQUIRE1,,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Molten Staff,Deal [sword]6 damage|Gain [shield]2 shield,2,attack(6); sfxdamage(target|6); inflictself(SHIELD|2); sfx(~_shield~|~~|0.2);,Lava Drop,COUNTDOWN,8,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Molten Staff_upgraded,Deal [sword]8 damage|Gain [shield]2 shield,2,attack(8); sfxdamage(target|8); inflictself(SHIELD|2); sfx(~_shield~|~~|0.2);,Lava Drop,COUNTDOWN,8,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Molten Staff_downgraded,Deal [sword]3 damage|Gain [shield]2 shield,2,attack(3); sfxdamage(target|3); inflictself(SHIELD|2); sfx(~_shield~|~~|0.2);,Lava Drop,COUNTDOWN,8,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Grace Spell,Deal [sword]5 damage|Gain [heart]3 Grace,1,attack(5); sfxdamage(target|5); inflictself(~grace~|3); sfx(~_survive~);,Revitalize,REQUIRE2,,WEAPON,GREEN,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Grace Spell_upgraded,Deal [sword]5 damage|Gain [heart]5 Grace,1,attack(5); sfxdamage(target|5); inflictself(~grace~|5); sfx(~_survive~);,Revitalize,REQUIRE2,,WEAPON,GREEN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Grace Spell_downgraded,Deal [sword]5 damage,1,attack(5); sfxdamage(target|5); sfx(~_survive~);,Revitalize,REQUIRE2,,WEAPON,GREEN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var grace = getstatusself(~grace~); var diff = grace - self.hp; if(diff > 0){pierceattackself(-diff); sfx(~_heal~); sfx(~_survive~); removestatusself(~grace~|diff);};,,,,,,
Starfall,If it's turn <d6>[;]|deal [sword]<triple> damage,1,if(turn == d){attack(d*3); sfxdamage(target|d*3); sfx(~_magic~);};,Throwing Knife,MAX5,,WEAPON,PINK,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Starfall_upgraded,If it's turn <d6>[;]|deal [sword]<triple> damage,1,if(turn == d){attack(d*3); sfxdamage(target|d*3); sfx(~_magic~);};,Throwing Knife,NORMAL,,WEAPON,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Starfall_downgraded,If it's turn <d6>[;]|deal [sword]<double> damage,1,if(turn == d){attack(d*2); sfxdamage(target|d*2); sfx(~_magic~);};,Throwing Knife,MAX5,,WEAPON,PINK,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lava Burst,Deal [fire]<double> dmg + [fire]1 burn|Roll 2 fewer dice next turn,1,attack(d*2|FIRE); inflict(FIRE); sfxdamage(target|d*2); sfx(~_fire~); self.bonusdicenextturn-=2;,Ember,MAX5,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Lava Burst_upgraded,Deal [fire]<double> dmg + [fire]1 burn|Roll 2 fewer dice next turn,1,attack(d*2|FIRE); inflict(FIRE); sfxdamage(target|d*2); sfx(~_fire~); self.bonusdicenextturn-=2;,Ember,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lava Burst_downgraded,Deal [fire]<double> dmg + [fire]1 burn|Roll 2 fewer dice next turn,1,attack(d*2|FIRE); inflict(FIRE); sfxdamage(target|d*2); sfx(~_fire~); self.bonusdicenextturn-=2;,Ember,MAX3,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Burst,Deal [ice]<double> dmg + [ice]1 freeze|Roll 2 fewer dice next turn,1,attack(d*2|ICE); inflict(ICE); sfxdamage(target|d*2); sfx(~_ice~); self.bonusdicenextturn-=2;,Refrigerator,MAX5,,WEAPON,BRIGHTCYAN,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Frost Burst_upgraded,Deal [ice]<double> dmg + [ice]1 freeze|Roll 2 fewer dice next turn,1,attack(d*2|ICE); inflict(ICE); sfxdamage(target|d*2); sfx(~_ice~); self.bonusdicenextturn-=2;,Refrigerator,NORMAL,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frost Burst_downgraded,Deal [ice]<double> dmg + [ice]1 freeze|Roll 2 fewer dice next turn,1,attack(d*2|ICE); inflict(ICE); sfxdamage(target|d*2); sfx(~_ice~); self.bonusdicenextturn-=2;,Refrigerator,MAX3,,WEAPON,BRIGHTCYAN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Slow Cooker,Deal [sword]1 damage|Roll a 6,1,attack(1); sfxdamage(target|1); givedice(6);,Magic Six,COUNTDOWN,6,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Slow Cooker_upgraded,Deal [sword]1 damage[;] roll a 6|,1,attack(1); sfxdamage(target|1); givedice(6);,Magic Six,COUNTDOWN,6,WEAPON,PURPLE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Slow Cooker_downgraded,Deal [sword]1 damage|Roll a new dice,1,attack(1); sfxdamage(target|1); givedice();,Magic Six,COUNTDOWN,6,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Parasol,Recover [heal]<d6> health|Gain [reduce]1 reduce,2,attackself(-d); inflictself(REDUCE); sfx(~_heal~); sfx(~_shield~);,Revitalize,MAX4,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Parasol_upgraded,Recover [heal]<d6> health|Gain [reduce]1 reduce,2,attackself(-d); inflictself(REDUCE); sfx(~_heal~); sfx(~_shield~);,Revitalize,MAX5,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Parasol_downgraded,Recover [heal]<d6> health|Gain [reduce]1 reduce,2,attackself(-d); inflictself(REDUCE); sfx(~_heal~); sfx(~_shield~);,Revitalize,MAX2,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Molten Blast,Deal [sword]5 damage[;] gain [shield]|shield equal to damage done,1,var hp = target.hp; attack(5); sfxdamage(target|5); inflictself(SHIELD|hp - target.hp); sfx(~_shield~|~~|0.2);,Lava Drop,COUNTDOWN,14,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Molten Blast_upgraded,Deal [sword]7 damage[;] gain [shield]|shield equal to damage done,1,var hp = target.hp; attack(7); sfxdamage(target|7); inflictself(SHIELD|hp - target.hp); sfx(~_shield~|~~|0.2);,Lava Drop,COUNTDOWN,14,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Molten Blast_downgraded,Deal [sword]3 damage[;] gain [shield]|shield equal to damage done,1,var hp = target.hp; attack(3); sfxdamage(target|3); inflictself(SHIELD|hp - target.hp); sfx(~_shield~|~~|0.2);,Lava Drop,COUNTDOWN,14,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Round of Applause,Curse the enemy[;] but|curse yourself next turn,1,inflict(CURSE); sfx(~_curse~); jinx(~Cursed~|~curse yourself~|~Curse yourself~|~inflict(CURSE); sfx(\~_curse\~);~|self|self|1|1); ,Megacurse,NORMAL,,MAGIC,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Round of Applause_upgraded,Inflict 2 curse[;] but|curse yourself next turn,1,inflict(CURSE|2); sfx(~_curse~); jinx(~Cursed~|~curse yourself~|~Curse yourself~|~inflict(CURSE); sfx(\~_curse\~);~|self|self|1|1); ,Megacurse,NORMAL,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Round of Applause_downgraded,Curse the enemy[;] but|curse yourself next turn,1,inflict(CURSE); sfx(~_curse~); jinx(~Cursed~|~curse yourself~|~Curse yourself~|~inflict(CURSE); sfx(\~_curse\~);~|self|self|1|1); ,Megacurse,MIN4,,MAGIC,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fruit Salad,Heal [heal]hp equal to your|highest dice[;] then reroll it,2,var mval = 0; var mdice; for(mydice in self.dicepool){if(mydice.basevalue > mval){mdice = mydice; mval = mydice.basevalue;};}; if(mval != 0){mdice.animatereroll(rand([1|2|3|4|5|6])|self.screenposition()); attackself(-mval); sfx(~_heal~);};,Coin Clippers,COUNTDOWN,6,MAGIC,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,1,,,,,,,,,,
Fruit Salad_upgraded,Heal [heal]hp equal to your|highest dice[;] then reroll it|,2,var mval = 0; var mdice; for(mydice in self.dicepool){if(mydice.basevalue > mval){mdice = mydice; mval = mydice.basevalue;};}; if(mval != 0){mdice.animatereroll(rand([1|2|3|4|5|6])|self.screenposition()); attackself(-mval); sfx(~_heal~);};,Coin Clippers,COUNTDOWN,6,MAGIC,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fruit Salad_downgraded,Heal [heal]hp equal to your|highest dice[;] then remove it,2,var mval = 0; var mdice; for(mydice in self.dicepool){if(mydice.basevalue > mval){mdice = mydice; mval = mydice.basevalue;};}; if(mval != 0){mdice.removedice(self.screenposition()); attackself(-mval); sfx(~_heal~);};,Coin Clippers,COUNTDOWN,6,MAGIC,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wildcard,At the start of your turn[;]|reroll your lowest dice,1,sfx(~_thinghappens~);,Random Roll,,,ITEM,YELLOW,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var mval = 9; var mdice; for(mydice in self.dicepool){if(mydice.basevalue < mval){mdice = mydice; mval = mydice.basevalue;};}; if(mval != 9){mdice.animatereroll(rand([1|2|3|4|5|6])|self.screenposition());  sfx(~givedice~);};,,,,,,
Wildcard_upgraded,At the start of your turn[;]|reroll all your lowest dice,1,sfx(~_thinghappens~);,Random Roll,,,ITEM,YELLOW,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var mval = 9; var poss = []; for(mydice in self.dicepool){if(mydice.basevalue < mval){mval = mydice.basevalue;};}; for(mydice in self.dicepool){if(mydice.basevalue == mval){poss.push(mydice);};}; if(mval != 9){var x = 0; for(p in poss){p.animatereroll(rand([1|2|3|4|5|6])|self.screenposition()|x); x+=0.05;};  sfx(~givedice~);};,,,,,,
Wildcard_downgraded,At the start of your turn[;]|reroll a random dice,1,sfx(~_thinghappens~);,Random Roll,,,ITEM,YELLOW,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var poss = []; for(mydice in self.dicepool){if(mydice.available()){poss.push(mydice);};}; if(poss.length > 0 ){var mdice = rand(poss); mdice.animatereroll(rand([1|2|3|4|5|6])|self.screenposition());  sfx(~_givedice~);};,,,,,,
Sawmill,Roll two ones|,1,givedice([1|1]);,Snake Eyes,REQUIRE3,,ITEM,GREEN,change_power,change_power,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sawmill_upgraded,Roll two ones|,1,givedice([1|1]);,Snake Eyes,MIN3,,ITEM,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Sawmill_downgraded,Roll a one,1,givedice([1]);,Snake Eyes,REQUIRE3,,ITEM,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inflation,Dice value +3[;] but take|excess as damage too,1,givedice(d+3); if(d+3 > 6){attackself(d+3-6); sfxdamage(target|d+3-6);};,Megabump,MIN2,,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inflation_upgraded,Dice value +3[;] but take|excess as damage too,1,givedice(d+3); if(d+3 > 6){attackself(d+3-6); sfxdamage(target|d+3-6);};,Megabump,NORMAL,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Inflation_downgraded,Dice value +3[;] but take|excess as damage instead,1,if(d+3 > 6){givedice(6); attackself(d+3-6); sfxdamage(target|d+3-6);}else{givedice(d+3);};,Megabump,MIN2,,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hosepipe,Roll 3 extra dice,1,var v = []; for(x in 0...3){v.push(rand([1|2|3|4|5|6]));}; givedice(v);,Magic Dice,COUNTDOWN,10,ITEM,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hosepipe_upgraded,Roll 4 extra dice,1,var v = []; for(x in 0...4){v.push(rand([1|2|3|4|5|6]));}; givedice(v);,Magic Dice,COUNTDOWN,10,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hosepipe_downgraded,Roll 2 extra dice,1,var v = []; for(x in 0...2){v.push(rand([1|2|3|4|5|6]));}; givedice(v);,Magic Dice,COUNTDOWN,10,ITEM,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Precious Pendant,Heal [heal]3 health each turn[;]|until the enemy deals damage,1,sfx(~_cure~);,Regenerate,,,SHIELD,GREEN,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,self.setvar(~enemyhurt~|0);,self.setvar(~enemyhurt~|0);,if(self.hp < self.getvar(~lastturnhp~)){self.setvar(~enemyhurt~|1);}; if(self.getvar(~enemyhurt~) == 1){e.changecolour(~GRAY~);}else{e.changecolour(~GREEN~);};,if(self.getvar(~enemyhurt~) == 0){attackself(-3); e.animate(~flashandshake~); sfx(~_heal~);};,,,self.setvar(~lastturnhp~|self.hp);,,,
Precious Pendant_upgraded,Heal [heal]5 health each turn[;]|until the enemy deals damage,1,sfx(~_cure~);,Regenerate,,,SHIELD,GREEN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,self.setvar(~enemyhurt~|0);,self.setvar(~enemyhurt~|0);,if(self.hp < self.getvar(~lastturnhp~)){self.setvar(~enemyhurt~|1);}; if(self.getvar(~enemyhurt~) == 1){e.changecolour(~GRAY~);}else{e.changecolour(~GREEN~);};,if(self.getvar(~enemyhurt~) == 0){attackself(-5); e.animate(~flashandshake~); sfx(~_heal~);};,,,self.setvar(~lastturnhp~|self.hp);,,,
Precious Pendant_downgraded,Heal [heal]2 health each turn[;]|until the enemy deals damage,1,sfx(~_cure~);,Regenerate,,,SHIELD,GREEN,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,self.setvar(~enemyhurt~|0);,self.setvar(~enemyhurt~|0);,if(self.hp < self.getvar(~lastturnhp~)){self.setvar(~enemyhurt~|1);}; if(self.getvar(~enemyhurt~) == 1){e.changecolour(~GRAY~);}else{e.changecolour(~GREEN~);};,if(self.getvar(~enemyhurt~) == 0){attackself(-2); e.animate(~flashandshake~); sfx(~_heal~);};,,,self.setvar(~lastturnhp~|self.hp);,,,
Lockdown,Lock enemy dice that are|<timesused> or less[;] +1 each use,2,for(x in 1...e.timesused+2){if(x > 0 && x < 7){inflict(~counter_~+x);};}; sfx(~_lock~);,Magic Counterspell,COUNTDOWN,15,WEAPON,PURPLE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lockdown_upgraded,Lock enemy dice that are|<timesused> or less[;] +1 each use|,2,for(x in 1...e.timesused+2){if(x > 0 && x < 7){inflict(~counter_~+x);};}; sfx(~_lock~);,Magic Counterspell,COUNTDOWN,15,WEAPON,PURPLE,,,,,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Lockdown_downgraded,If enemy rolls a <timesused>[;] that|dice is locked[;] +1 each use,2,if(e.timesused < 7){inflict(~counter_~+e.timesused); sfx(~_lock~);};,Magic Counterspell,COUNTDOWN,15,WEAPON,PURPLE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Offering,Deal [sword]<double> damage|(Lose highest dice each turn),2,attack(d*2); sfxdamage(target|d*2); sfx(~_magic~);,Plasma Gun,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,var mval = 0; var mdice; for(mydice in self.dicepool){if(mydice.basevalue > mval){mdice = mydice; mval = mydice.basevalue;};}; if(mval != 9){mdice.animate(~disappear~); e.animate(~flashandshake~);};,,,,,,
Offering_upgraded,Deal [sword]<double> damage|(Lose highest dice each turn),2,attack(d*2); sfxdamage(target|d*2); sfx(~_magic~);,Plasma Gun,NORMAL|FREE1,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var mval = 0; var mdice; for(mydice in self.dicepool){if(mydice.basevalue > mval){mdice = mydice; mval = mydice.basevalue;};}; if(mval != 9){mdice.animate(~disappear~); e.animate(~flashandshake~);};,,,,,,
Offering_downgraded,Deal [sword]<double> damage|(Lose highest dice each turn),2,attack(d*2); sfxdamage(target|d*2); sfx(~_magic~);,Plasma Gun,MAX4,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,var mval = 0; var mdice; for(mydice in self.dicepool){if(mydice.basevalue > mval){mdice = mydice; mval = mydice.basevalue;};}; if(mval != 9){mdice.animate(~disappear~); e.animate(~flashandshake~);};,,,,,,
Iron Swan,Deal [sword]<d6> damage[;] twice,2,attack(d); attack(d); sfxdamage(target|d*2); sfx(~_magic~|~~|0.1);,Plasma Gun,MAX4,,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Iron Swan_upgraded,Deal [sword]<d6> damage[;] twice,2,attack(d); attack(d); sfxdamage(target|d*2); sfx(~_magic~|~~|0.1);,Plasma Gun,MAX5,,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Iron Swan_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d);,Plasma Gun,MAX4,,WEAPON,ORANGE,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flying Venus Trap,Restore [heal]<d6> health|On 1[;] deal [sword]2 damage,2,attackself(-d); sfx(~_heal~); if(d == 1){attack(2); sfxdamage(target|2);};,Revitalize,MAX4,,WEAPON,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flying Venus Trap_upgraded,Restore [heal]<d6> health|On 1[;] deal [sword]2 damage,2,attackself(-d); sfx(~_heal~); if(d == 1){attack(2); sfxdamage(target|2);};,Revitalize,MAX5,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Flying Venus Trap_downgraded,Restore [heal]<d6> health|On 1[;] deal [sword]2 damage,2,attackself(-d); sfx(~_heal~); if(d == 1){attack(2); sfxdamage(target|2);};,Revitalize,MAX3,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snakelops,Roll <timesused> one(s)[;] +1 each use,1,var arr = []; for(x in 0...e.timesused+1){arr.push(1);}; givedice(arr);,Snake Eyes,EVEN,,WEAPON,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snakelops_upgraded,Roll <timesused> one(s)[;] +1 each use,1,var arr = []; for(x in 0...e.timesused+1){arr.push(1);}; givedice(arr);,Snake Eyes,NORMAL,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Snakelops_downgraded,Roll <timesused> one(s)[;] +1 each use,1,var arr = []; for(x in 0...e.timesused+1){arr.push(1);}; givedice(arr);,Snake Eyes,REQUIRE2,,WEAPON,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bloodclaw,Deal [sword]<d6> damage|(Start of battle: lose [heart]5 hp),2,attack(d); sfxdamage(target|d);,Two Handed Knife,NORMAL|FREE3,,WEAPON,RED,change_power,change_power,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,if(turn == 1){pierceattackself(5); sfx(~_drain~); e.animate(~flashandshake~);};,,,,,,
Bloodclaw_upgraded,Deal [sword]<d6> damage|(Start of battle: lose [heart]5 hp),2,attack(d); sfxdamage(target|d);,Two Handed Knife,NORMAL|FREE5,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,if(turn == 1){pierceattackself(5); sfx(~_drain~); e.animate(~flashandshake~);};,,,,,,
Bloodclaw_downgraded,Deal [sword]<d6> damage|(Start of battle: lose [heart]5 hp),2,attack(d); sfxdamage(target|d);,Two Handed Knife,MAX4|FREE3,,WEAPON,RED,,,,none,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,if(turn == 1){pierceattackself(5); sfx(~_drain~); e.animate(~flashandshake~);};,,,,,,
Paw Claw,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d); sfx(~_magic~);,Plasma Gun,REQUIRE5|FREE5,,WEAPON,RED,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Paw Claw_upgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d); sfx(~_magic~);,Plasma Gun,MIN5|FREE5,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Paw Claw_downgraded,Deal [sword]<d6> damage,2,attack(d); sfxdamage(target|d); sfx(~_magic~);,Plasma Gun,REQUIRE5|FREE1,,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Bottled Dragonbreath,[fire]4 damage + [fire]1 burn|[gray](once per battle),1,attack(4|FIRE); sfxdamage(target|4); inflict(FIRE); sfx(~_fire~);,Hellfire,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bottled Dragonbreath_upgraded,[fire]6 damage + [fire]1 burn|[gray](once per battle),1,attack(6|FIRE); sfxdamage(target|6); inflict(FIRE); sfx(~_fire~);,Hellfire,NORMAL,,WEAPON,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bottled Dragonbreath_downgraded,[fire]2 damage + [fire]1 burn|[gray](once per battle),1,attack(2|FIRE); sfxdamage(target|2); inflict(FIRE); sfx(~_fire~);,Hellfire,NORMAL,,WEAPON,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bottled Frostbreath,[ice]4 damage + [ice]1 freeze|[gray](once per battle),1,attack(4|ICE); sfxdamage(target|4); inflict(ICE); sfx(~_ice~);,Arctic Storm,NORMAL,,WEAPON,RED,change_power,change_power,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bottled Frostbreath_upgraded,[ice]6 damage + [ice]1 freeze|[gray](once per battle),1,attack(6|ICE); sfxdamage(target|6); inflict(ICE); sfx(~_ice~);,Arctic Storm,NORMAL,,WEAPON,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Bottled Frostbreath_downgraded,[ice]2 damage + [ice]1 freeze|[gray](once per battle),1,attack(2|ICE); sfxdamage(target|2); inflict(ICE); sfx(~_ice~);,Arctic Storm,NORMAL,,WEAPON,RED,,,,,0,NO,YES,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Fruit Loot,Restore half of your|missing health ([heal]<var:halfmissinghealth>),1,attackself(-self.getvar(~halfmissinghealth~)); sfx(~_heal~);,Regenerate,COUNTDOWN,20,SHIELD,GREEN,change_power,change_power,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,,,,,
Fruit Loot_upgraded,Restore 3/4 of your|missing health ([heal]<var:tqmissinghealth>),1,attackself(-self.getvar(~tqmissinghealth~)); sfx(~_heal~);,Regenerate,COUNTDOWN,20,SHIELD,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,,,,,
Fruit Loot_downgraded,Restore 1/4 of your|missing health ([heal]<var:qmissinghealth>),1,attackself(-self.getvar(~qmissinghealth~)); sfx(~_heal~);,Regenerate,COUNTDOWN,20,SHIELD,GREEN,,,,,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,self.setvar(~halfmissinghealth~|(self.maxhp - self.hp)/2); self.setvar(~tqmissinghealth~|(self.maxhp - self.hp)*3/4); self.setvar(~qmissinghealth~|(self.maxhp - self.hp)/4);,,,,,
Fruit Shooter,Restore [heal]<d6> health|,2,attackself(-d); sfx(~_heal~);,Regenerate,REQUIRE3,,SHIELD,GREEN,change_power,change_power,,,3,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fruit Shooter_upgraded,Restore [heal]<d6> health|,2,attackself(-d); sfx(~_heal~);,Regenerate,REQUIRE3,,SHIELD,GREEN,,,,,6,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Fruit Shooter_downgraded,Restore [heal]<d6> health|,2,attackself(-d); sfx(~_heal~);,Regenerate,REQUIRE3,,SHIELD,GREEN,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warcry,Deal [weaken]4 damage|Inflict [weaken]1 weaken,1,attack(4|WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,change_power,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warcry_upgraded,Deal [weaken]6 damage|Inflict [weaken]1 weaken,1,attack(6|WEAKEN); inflict(WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Warcry_downgraded,Deal [weaken]4 damage,1,attack(4|WEAKEN); sfx(~_weaken~);,Theremin,COUNTDOWN,6,WEAPON,ORANGE,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Corrosion,After inflicting [poison]3 in 1|turn[;] roll an extra dice,1,givedice();,Magic Dice,,,WEAPON,PURPLE,change_poison,change_power,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~poisoncount~[;]getstatus(POISON)); e.setvar(~diff~|0);,var diff = getstatus(POISON)- e.getvar(~poisoncount~); if(diff > 0){e.setvar(~diff~|e.getvar(~diff~)+diff);}; var c = 0; if(e.getvar(~diff~) >= 3){ e.doequipmentaction(self|target|1|[]|c|true); c+=0.2; e.setvar(~diff~|e.getvar(~diff~)-3);}; e.setvar(~poisoncount~[;]getstatus(POISON));,,,,,
Corrosion_upgraded,After inflicting [poison]3 in 1|turn[;] roll an extra dice|,1,givedice();,Magic Dice,,,WEAPON,PURPLE,,,,,2,YES,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~poisoncount~[;]getstatus(POISON));,var diff = getstatus(POISON)- e.getvar(~poisoncount~); if(diff > 0){e.setvar(~diff~|e.getvar(~diff~)+diff);}; var c = 0; if(e.getvar(~diff~) >= 3){ e.doequipmentaction(self|target|1|[]|c|true); c+=0.2; e.setvar(~diff~|e.getvar(~diff~)-3);}; e.setvar(~poisoncount~[;]getstatus(POISON));,,,,,
Corrosion_downgraded,After inflicting [poison]5 in 1|turn[;] roll an extra dice,1,givedice();,Magic Dice,,,WEAPON,PURPLE,,,,,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~poisoncount~[;]getstatus(POISON));,var diff = getstatus(POISON)- e.getvar(~poisoncount~); if(diff > 0){e.setvar(~diff~|e.getvar(~diff~)+diff);}; var c = 0; if(e.getvar(~diff~) >= 3){ e.doequipmentaction(self|target|1|[]|c|true); c+=0.2; e.setvar(~diff~|e.getvar(~diff~)-3);}; e.setvar(~poisoncount~[;]getstatus(POISON));,,,,,
Juggernaut,Whenever you gain [shield]|shield[;] deal [sword]2 damage|,1,attack(2); sfxdamage(target|2); sfx(~_shield~);,Barricade,,,MAGIC,ORANGE,change_poison,change_power,,,3,NO,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~shieldcount~[;]getstatusself(SHIELD));,if(getstatusself(SHIELD) > e.getvar(~shieldcount~) ){ e.doequipmentaction(self|target|1|[]|0|true); }; e.setvar(~shieldcount~[;]getstatusself(SHIELD));,,,,,
Juggernaut_upgraded,Whenever you gain [shield]|shield[;] deal [sword]2 damage|,1,attack(2); sfxdamage(target|2); sfx(~_shield~);,Barricade,,,MAGIC,ORANGE,,,,,-1,NO,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~shieldcount~[;]getstatusself(SHIELD));,if(getstatusself(SHIELD) > e.getvar(~shieldcount~) ){ e.doequipmentaction(self|target|1|[]|0|true); }; e.setvar(~shieldcount~[;]getstatusself(SHIELD));,,,,,
Juggernaut_downgraded,Whenever you gain [shield]|shield[;] deal [sword]2 damage|,1,attack(2); sfxdamage(target|2); sfx(~_shield~);,Barricade,,,MAGIC,ORANGE,,,,,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,,e.setvar(~shieldcount~[;]getstatusself(SHIELD));,if(getstatusself(SHIELD) > e.getvar(~shieldcount~) ){ e.doequipmentaction(self|target|1|[]|0|true); }; e.setvar(~shieldcount~[;]getstatusself(SHIELD));,,,,,
Burst Laser,Deal [sword]5 damage[;] then|deal [sword]2 damage,1,attack(5); sfx(~_plasma~); attack(2); sfxdamage(target|7); sfx(~_magic~|~~|0.2);,,COUNTDOWN,10,WEAPON,RED,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Burst Laser_upgraded,Deal [sword]6 damage[;] then|deal [sword]3 damage,1,attack(6); sfx(~_plasma~); attack(3); sfxdamage(target|9); sfx(~_magic~|~~|0.2);,,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Burst Laser_downgraded,Deal [sword]4 damage[;] then|deal [sword]1 damage,1,attack(4); sfx(~_plasma~); attack(1); sfxdamage(target|5); sfx(~_magic~|~~|0.2);,,COUNTDOWN,10,WEAPON,RED,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Taunting Sword,Deal [sword]<triple> damage|(Enemy gets [fury] Fury each turn),2,attack(d*3); sfxdamage(target|d*3);,,MAX5,,WEAPON,RED,change_poison,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,inflict(FURY); sfx(~_fury~); e.animate(~flashandshake~);,,,,,,
Taunting Sword_upgraded,Deal [sword]<triple> damage|(Enemy gets [fury] Fury each turn),2,attack(d*3); sfxdamage(target|d*3);,,NORMAL,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,inflict(FURY); sfx(~_fury~); e.animate(~flashandshake~);,,,,,,
Taunting Sword_downgraded,Deal [sword]<double> damage|(Enemy gets [fury] Fury each turn),2,attack(d*2); sfxdamage(target|d*2);,,MAX5,,WEAPON,RED,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,inflict(FURY); sfx(~_fury~); e.animate(~flashandshake~);,,,,,,
Nice Sword,Deal [sword]9 damage,2,attack(9); sfxdamage(target|9);,,NORMAL|NORMAL,6,WEAPON,PURPLE,change_poison,change_power,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Nice Sword_upgraded,Deal [sword]9 damage|,2,attack(9); sfxdamage(target|9);,,NORMAL|NORMAL,6,WEAPON,PURPLE,,,,,2,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Nice Sword_downgraded,Deal [sword]9 damage,2,attack(9); sfxdamage(target|9);,,MIN2|MIN2,6,WEAPON,PURPLE,,,,,0,NO,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Vine Whip,Deal [sword]<d6> damage|Restore [heal]2 health,2,attack(d); sfxdamage(target|d); attackself(-2); sfx(~_heal~);,,EVEN,,WEAPON,GREEN,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vine Whip_upgraded,Deal [sword]<d6> damage|Restore [heal]2 health,2,attack(d); sfxdamage(target|d); attackself(-2); sfx(~_heal~);,,EVEN|FREE1,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Vine Whip_downgraded,Deal [sword]<d6> damage|Restore [heal]2 health,2,attack(d); sfxdamage(target|d); attackself(-2); sfx(~_heal~);,,REQUIRE4,,WEAPON,GREEN,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Wing Bash,Deal [sword]<d6> damage[;] return|the dice if enemy has [dodge] dodge,1,attack(d); sfxdamage(target|d);,,MAX5,,WEAPON,YELLOW,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,if(getstatus(DODGE) > 0){givedice(d); sfx(~_dodge~);};,,
Wing Bash_upgraded,Deal [sword]<d6> damage[;] return|the dice if enemy has [dodge] dodge,1,attack(d); sfxdamage(target|d);,,NORMAL,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,if(getstatus(DODGE) > 0){givedice(d); sfx(~_dodge~);};,,
Wing Bash_downgraded,Deal [sword]<d6> damage[;] return|the dice if enemy has [dodge] dodge,1,attack(d); sfxdamage(target|d);,,MAX3,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,if(getstatus(DODGE) > 0){givedice(d); sfx(~_dodge~);};,,
Quarantine,Deal [sword]1 damage[;] also activates|when you inflict [poison] poison,1,attack(1); sfxdamage(target|1);,,MAX3,,WEAPON,GRAY,change_poison,change_power,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.setvar(~poisoncount~[;]getstatus(POISON));,if(getstatus(POISON)- e.getvar(~poisoncount~) > 0){e.doequipmentaction(self|target|1|[]|0|true);}; e.setvar(~poisoncount~[;]getstatus(POISON));,,,,,
Quarantine,Deal [sword]1 damage[;] also activates|when you inflict [poison] poison,1,attack(1); sfxdamage(target|1);,,MAX3,,WEAPON,GRAY,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.setvar(~poisoncount~[;]getstatus(POISON));,if(getstatus(POISON)- e.getvar(~poisoncount~) > 0){e.doequipmentaction(self|target|1|[]|0|true);}; e.setvar(~poisoncount~[;]getstatus(POISON));,,,,,
Quarantine,Deal [sword]1 damage[;] also activates|when you inflict [poison] poison,1,attack(1); sfxdamage(target|1);,,MAX3,,WEAPON,GRAY,,,,,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,e.setvar(~poisoncount~[;]getstatus(POISON));,if(getstatus(POISON)- e.getvar(~poisoncount~) > 0){e.doequipmentaction(self|target|1|[]|0|true);}; e.setvar(~poisoncount~[;]getstatus(POISON));,,,,,
Intended Gameplay,Increase Jackpot range|by <d6> this turn,2,self.roll_range += d; adjustrobotcounter(0);,,MAX3,,WEAPON,YELLOW,change_poison,change_power,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Intended Gameplay_upgraded,Increase Jackpot range|by <d6> this turn,2,self.roll_range += d; adjustrobotcounter(0);,,MAX4,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Intended Gameplay_downgraded,Increase Jackpot range|by 1 this turn,2,self.roll_range += 1; adjustrobotcounter(0);,,MAX3,,WEAPON,YELLOW,,,,,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
